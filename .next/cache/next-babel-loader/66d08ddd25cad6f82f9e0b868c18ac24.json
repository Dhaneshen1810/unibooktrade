{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dhaneshen/Documents/booktrade/unibooktrade/pages/testing.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { useRouter } from 'next/router';\nimport { withRouter } from 'next/router';\nvar contact = withRouter(_s(function (_ref) {\n  _s();\n\n  var _ref$router$query = _ref.router.query,\n      name = _ref$router$query.name,\n      id = _ref$router$query.id,\n      firstname = _ref$router$query.firstname,\n      bookID = _ref$router$query.bookID,\n      bookOwnerName = _ref$router$query.bookOwnerName,\n      ownerFirstName = _ref$router$query.ownerFirstName,\n      bookTitle = _ref$router$query.bookTitle,\n      books = _ref.books;\n\n  var _useState = useState(''),\n      defaultText = _useState[0],\n      setDefaultText = _useState[1]; // Assign constant names to values obtained from 'booklist' via withRouter\n\n\n  useEffect(function () {\n    var userName = name;\n    var userID = id;\n    var userFirstname = firstname;\n  });\n\n  var myProfile = function myProfile() {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname\n      }\n    });\n  };\n\n  var myBooks = function myBooks() {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  var Search = function Search() {\n    Router.push({\n      pathname: '/posts',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  }; // Get infomation about book from database\n  //const res = await fetch('https://unibooktrade.vercel.app/api/books', {\n\n\n  var res = fetch('http://localhost:3000/api/books', {\n    headers: {\n      \"Accept\": 'application/json',\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      title: '',\n      author: '',\n      id: bookID\n    })\n  });\n  var data = res.data;\n  return __jsx(\"div\", {\n    className: \"contact-page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"book-greeting\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"greeting-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"icon-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/sign-out.png\",\n    alt: \"my image\",\n    className: \"my-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"my-icon-end\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/four-square.png\",\n    alt: \"my books\",\n    className: \"my-icon\",\n    onClick: myProfile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/plus.png\",\n    alt: \"Add book\",\n    className: \"my-icon\",\n    onClick: myBooks,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/search.png\",\n    alt: \"Search\",\n    className: \"my-icon\",\n    onClick: Search,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginTop: '4%',\n      padding: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: '18px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"This is a collection of all the books matching your search\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }), __jsx(\"span\", {\n    style: {\n      fontSize: '16px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 22\n    }\n  }, \"Once you find the one you want, get in contact with the owner.\"))))), __jsx(\"div\", {\n    className: \"bookInfo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Name: \", name), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Book id: \", bookID), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Owner name: \", bookOwnerName)), __jsx(\"form\", {\n    style: {\n      width: '90%',\n      marginTop: '7%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, __jsx(\"textarea\", {\n    type: \"text\",\n    id: \"lname\",\n    name: \"lname\",\n    value: 'Hi there ' + ownerFirstName + ', I am interested in your book, ' + bookTitle + '!',\n    className: \"contact-textBox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    style: {\n      marginTop: '4%'\n    },\n    className: \"btn btn-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Send message\")));\n}, \"0g8GcnMfBbY3bgTQYEpU8YmOgx8=\"));\n\ncontact.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, _yield$res$json, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('book title is ' + ctx.bookTitle);\n            _context.prev = 1;\n            _context.next = 4;\n            return fetch('http://localhost:3000/api/books', {\n              headers: {\n                \"Accept\": 'application/json',\n                \"Content-Type\": \"application/json\"\n              },\n              body: JSON.stringify({\n                title: '',\n                author: '',\n                id: ctx.bookID\n              })\n            });\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            _yield$res$json = _context.sent;\n            data = _yield$res$json.data;\n            return _context.abrupt(\"return\", {\n              books: data\n            });\n\n          case 12:\n            _context.prev = 12;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", {\n              books: []\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 12]]);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default contact;","map":{"version":3,"sources":["/home/dhaneshen/Documents/booktrade/unibooktrade/pages/testing.js"],"names":["React","useState","useEffect","Link","Router","useRouter","withRouter","contact","router","query","name","id","firstname","bookID","bookOwnerName","ownerFirstName","bookTitle","books","defaultText","setDefaultText","userName","userID","userFirstname","myProfile","push","pathname","mytitle","author","myBooks","Search","res","fetch","headers","body","JSON","stringify","title","data","marginTop","padding","fontSize","width","getInitialProps","ctx","console","log","json"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { useRouter } from 'next/router';\nimport { withRouter } from 'next/router';\n\n\nconst contact = withRouter(({ router:  { query:{name, id, firstname, bookID, bookOwnerName, ownerFirstName, bookTitle}}, books} ) => {\n    const [defaultText, setDefaultText] = useState('');\n\n    // Assign constant names to values obtained from 'booklist' via withRouter\n    useEffect(() => {\n        const userName = name;\n        const userID = id;\n        const userFirstname = firstname;\n    })\n\n\n    const myProfile = () => {\n        Router.push({\n            pathname: '/myprofile',\n            query: { \n                    mytitle: '',\n                    author: '',\n                    name: name,\n                    id: id,\n                    firstname: firstname\n                    \n            }\n        });\n    }\n\n    const myBooks = () => {\n        Router.push({\n            pathname: '/new',\n            query: { \n                    id: id,\n                    name: name,\n                    firstname: firstname\n                    \n            }\n        });\n    }\n\n    const Search = () => {\n        Router.push({\n            pathname: '/posts',\n            query: { \n                    id: id,\n                    name: name,\n                    firstname: firstname\n                    \n            }\n        });\n    }\n\n\n\n    // Get infomation about book from database\n    //const res = await fetch('https://unibooktrade.vercel.app/api/books', {\n        const res = fetch('http://localhost:3000/api/books', {\n            headers:{\n                \"Accept\": 'application/json',\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                title: '',\n                author: '',\n                id: bookID\n            })\n        });\n        const { data } =  res;\n\n\n    return(\n        <div className='contact-page'>\n            <div className='book-greeting'>\n            <div className='greeting-text'>\n            <div className='icon-box'>\n                    <Link href='/'>\n                        <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\n                    </Link>\n                    \n                    <div className='my-icon-end'>\n                    <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\n                    \n                    <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\n                    <img src=\"/icons/search.png\" alt=\"Search\" className='my-icon' onClick={Search}/>\n                    \n                    </div>\n                    \n                </div>\n\n\n                <div style={{ marginTop:'4%', padding:'10px' }}>\n                    \n                <p style={{ fontSize:'18px' }}>This is a collection of all the books matching your search \n                \n                <br/><span style={{ fontSize: '16px' }}>Once you find the one you want, get in contact with the owner.</span></p>\n                \n                </div>\n            </div>\n            \n        </div>\n\n\n        \n\n\n        <div className='bookInfo'>\n            <p>Name: {name}</p>\n            <p>Book id: {bookID}</p>\n            <p>Owner name: {bookOwnerName}</p>\n        </div>\n        <form style={{ width:'90%', marginTop:'7%' }}>\n            <textarea type=\"text\" \n                id=\"lname\" \n                name=\"lname\" \n                value= {'Hi there '+ownerFirstName+', I am interested in your book, '+bookTitle+'!'}\n                className='contact-textBox'\n                />\n            <button style={{ marginTop: '4%' }} className='btn btn-primary'>Send message</button>\n        </form>\n\n        </div>\n    )\n\n});\n\n\ncontact.getInitialProps = async (ctx) =>{\n\n    console.log('book title is '+ ctx.bookTitle)\n\n    try {\n \n     //const res = await fetch('https://unibooktrade.vercel.app/api/books', {\n         const res = await fetch('http://localhost:3000/api/books', {\n            headers:{\n                \"Accept\": 'application/json',\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                title: '',\n                author: '',\n                id: ctx.bookID\n            })\n         });\n         const { data } = await res.json();\n     \n        \n        return{ books:data }\n        \n    } catch (error) {\n \n     return { books: [] }\n        \n    }\n     \n }\n\nexport default contact;"]},"metadata":{},"sourceType":"module"}