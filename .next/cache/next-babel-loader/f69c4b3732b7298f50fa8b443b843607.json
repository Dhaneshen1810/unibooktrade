{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\danmo\\\\book-trade\\\\pages\\\\testing.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { withRouter } from \"next/router\";\nimport Link from 'next/link';\nimport React, { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\nimport { useRouter } from 'next/router';\nimport Cors from 'cors';\nvar posts = withRouter(_s(function (_ref) {\n  _s();\n\n  var _ref$router$query = _ref.router.query,\n      name = _ref$router$query.name,\n      id = _ref$router$query.id,\n      firstname = _ref$router$query.firstname,\n      books = _ref.books;\n\n  var _useState = useState({\n    title: '',\n    author: ''\n  }),\n      form = _useState[0],\n      setForm = _useState[1];\n\n  var _useState2 = useState(false),\n      isSubmitting = _useState2[0],\n      setIsSubmitting = _useState2[1];\n\n  var _useState3 = useState(),\n      errors = _useState3[0],\n      setErrors = _useState3[1];\n\n  var router = useRouter; // Initializing the cors middleware\n\n  var cors = Cors({\n    methods: ['GET', 'HEAD']\n  });\n  useEffect(function () {\n    // We are directed to the booklist page\n    // Forwarding the following data to booklist\n    // Fullname, firstname, id, book author and book title\n    if (isSubmitting) {\n      if (Object.keys(errors).length === 0) {\n        Router.push({\n          pathname: '/booklist',\n          query: {\n            mytitle: form.title,\n            author: form.author,\n            name: name,\n            id: id,\n            firstname: firstname\n          }\n        });\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n  }, [errors]); // When th user submits\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    var errs = validate();\n    setErrors(errs);\n    setIsSubmitting(true);\n  }; // Handle changes made to the input box\n  // That is, when the user types in the box\n\n\n  var handleChange = function handleChange(e) {\n    setForm(_objectSpread(_objectSpread({}, form), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var validate = function validate() {\n    var err = {};\n    return err;\n  }; // User chooses to view all available books\n\n\n  var viewAll = function viewAll() {\n    Router.push({\n      pathname: '/booklist',\n      query: {\n        name: name,\n        id: id,\n        firstname: firstname,\n        mytitle: '',\n        author: ''\n      }\n    });\n  };\n\n  var myProfile = function myProfile() {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname\n      }\n    });\n  };\n\n  var myBooks = function myBooks() {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  var Search = function Search() {\n    Router.push({\n      pathname: '/posts',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"option-page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"book-greeting\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"greeting-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"icon-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/sign-out.png\",\n    alt: \"my image\",\n    className: \"my-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"my-icon-end\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/four-square.png\",\n    alt: \"my books\",\n    className: \"my-icon\",\n    onClick: myProfile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/plus.png\",\n    alt: \"Add book\",\n    className: \"my-icon\",\n    onClick: myBooks,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/search.png\",\n    alt: \"Search\",\n    className: \"my-icon\",\n    onClick: Search,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }))), __jsx(\"h2\", {\n    className: \"icon-box-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, \"Hi, \", firstname, \"!\"), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, \"Find your book by entering the \", __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }\n  }, \"Author\"), \" or/and \", __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 46\n    }\n  }, \"book title\"), \" below.\")), __jsx(\"form\", {\n    className: \"my-form\",\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group my-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, \"Title\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control my-form-control\",\n    id: \"exampleInputEmail1\",\n    placeholder: \"Enter book title\",\n    name: \"title\",\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  })), __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"form-group my-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, \"Author\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Enter Author\",\n    name: \"author\",\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, \"Search\"))), __jsx(\"div\", {\n    className: \"view-all-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }, __jsx(\"div\", {\n    className: \"btn btn-success my-btn-viewall\",\n    onClick: viewAll,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 21\n    }\n  }, \"View all\"))));\n}, \"7a56bO0wbVpO1xURmT3kDb7qpfo=\"));\nexport default posts;","map":{"version":3,"sources":["C:/Users/danmo/book-trade/pages/testing.js"],"names":["withRouter","Link","React","useState","useEffect","fetch","Router","useRouter","Cors","posts","router","query","name","id","firstname","books","title","author","form","setForm","isSubmitting","setIsSubmitting","errors","setErrors","cors","methods","Object","keys","length","push","pathname","mytitle","handleSubmit","e","preventDefault","errs","validate","handleChange","target","value","err","viewAll","myProfile","myBooks","Search"],"mappings":"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","sourcesContent":["import { withRouter } from \"next/router\";\r\nimport Link from 'next/link';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nimport Router from 'next/router';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport Cors from 'cors';\r\n\r\n\r\n\r\nconst posts = withRouter(({ router:  { query:{name, id, firstname}}, books} ) => {\r\n\r\n        const [form, setForm] = useState({ title: '', author:'' });\r\n        const [isSubmitting, setIsSubmitting] = useState(false);\r\n        const [errors, setErrors] = useState();\r\n        const router = useRouter;\r\n\r\n        // Initializing the cors middleware\r\n        const cors = Cors({\r\n        methods: ['GET', 'HEAD'],\r\n    })\r\n\r\n        \r\n        useEffect(() => {\r\n\r\n            // We are directed to the booklist page\r\n            // Forwarding the following data to booklist\r\n            // Fullname, firstname, id, book author and book title\r\n            if (isSubmitting){\r\n\r\n                if (Object.keys(errors).length ===0){\r\n\r\n                    Router.push({\r\n                        pathname: '/booklist',\r\n                        query: { \r\n                                mytitle: form.title,\r\n                                author: form.author,\r\n                                name: name,\r\n                                id: id,\r\n                                firstname: firstname\r\n                                \r\n                        }\r\n                    });\r\n                  \r\n                }\r\n                else{\r\n                    setIsSubmitting(false);\r\n                }\r\n            }\r\n        }, [errors])\r\n\r\n\r\n        // When th user submits\r\n        const handleSubmit = (e) => { \r\n            e.preventDefault();\r\n            let errs = validate();\r\n            setErrors(errs);\r\n            setIsSubmitting(true);\r\n\r\n\r\n        }\r\n\r\n        // Handle changes made to the input box\r\n        // That is, when the user types in the box\r\n        const handleChange = (e) => { \r\n            setForm({\r\n                ...form,\r\n                    [e.target.name]: e.target.value\r\n                \r\n            })\r\n        }\r\n\r\n        const validate = () => {\r\n            let err = {};\r\n\r\n            \r\n            return err;\r\n        }\r\n\r\n\r\n        // User chooses to view all available books\r\n        const viewAll = () => {\r\n\r\n            Router.push({\r\n                pathname: '/booklist',\r\n                query: { \r\n                    name: name,\r\n                    id: id,\r\n                    firstname: firstname,\r\n                    mytitle: '',\r\n                    author: ''\r\n                        \r\n                }\r\n            });\r\n        }\r\n\r\n        const myProfile = () => {\r\n            Router.push({\r\n                pathname: '/myprofile',\r\n                query: { \r\n                        mytitle: '',\r\n                        author: '',\r\n                        name: name,\r\n                        id: id,\r\n                        firstname: firstname\r\n                        \r\n                }\r\n            });\r\n        }\r\n\r\n        const myBooks = () => {\r\n            Router.push({\r\n                pathname: '/new',\r\n                query: { \r\n                        id: id,\r\n                        name: name,\r\n                        firstname: firstname\r\n                        \r\n                }\r\n            });\r\n        }\r\n\r\n        const Search = () => {\r\n            Router.push({\r\n                pathname: '/posts',\r\n                query: { \r\n                        id: id,\r\n                        name: name,\r\n                        firstname: firstname\r\n                        \r\n                }\r\n            });\r\n        }\r\n\r\n    return(\r\n    <div className='option-page'>\r\n        \r\n\r\n        <div className='book-greeting'>\r\n            <div className='greeting-text'>\r\n                <div className='icon-box'>\r\n                    <Link href='/'>\r\n                        <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\r\n                    </Link>\r\n                    \r\n                    <div className='my-icon-end'>\r\n                    <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\r\n                    \r\n                    <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\r\n                    <img src=\"/icons/search.png\" alt=\"Search\" className='my-icon' onClick={Search}/>\r\n                    \r\n                    </div>\r\n                    \r\n                </div>\r\n\r\n                \r\n                <h2 className='icon-box-text'>Hi, {firstname}!</h2>\r\n\r\n                <p>Find your book by entering \r\n                    the <b>Author</b> or/and <b>book title</b> below.\r\n                </p>\r\n            </div>\r\n                \r\n            <form className='my-form' onSubmit={handleSubmit}>\r\n                <div className=\"form-group my-group\">\r\n                <label>Title</label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control my-form-control\" \r\n                    id=\"exampleInputEmail1\" \r\n                    placeholder=\"Enter book title\"\r\n                    name=\"title\"\r\n                    onChange={handleChange}/>\r\n                    \r\n                </div>\r\n                <br/>\r\n                <div className=\"form-group my-group\">\r\n                <label>Author</label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    placeholder=\"Enter Author\"\r\n                    name='author'\r\n                    onChange={handleChange}\r\n                    />\r\n                \r\n  \r\n                <button type=\"submit\" className=\"btn btn-primary my-btn\">Search</button>\r\n                </div>\r\n                </form>\r\n\r\n                <div className='view-all-box'>\r\n                    <div className='btn btn-success my-btn-viewall' onClick={viewAll}>View all</div>\r\n                </div>\r\n            \r\n        </div>\r\n\r\n\r\n        \r\n    </div>\r\n\r\n    )\r\n    \r\n});\r\n  \r\n\r\n\r\n\r\n    \r\nexport default posts;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}