{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dhaneshen/Documents/booktrade/unibooktrade/pages/testing.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter, useRouter } from \"next/router\";\nimport Link from 'next/link';\nimport Router from \"next/router\"; //Getting book data from database\n\nimport fetch from 'isomorphic-unfetch';\nimport { Confirm, Butto, Loader } from 'semantic-ui-react';\nimport { useState, useEffect } from \"react\";\nvar myprofile = withRouter(_s(function (_ref) {\n  _s();\n\n  var _ref$router$query = _ref.router.query,\n      name = _ref$router$query.name,\n      id = _ref$router$query.id,\n      firstname = _ref$router$query.firstname,\n      mytitle = _ref$router$query.mytitle,\n      author = _ref$router$query.author,\n      books = _ref.books;\n\n  var _useState = useState(false),\n      isDeleting = _useState[0],\n      setIsDeleting = _useState[1];\n\n  var _useState2 = useState('null'),\n      bookName = _useState2[0],\n      setBookName = _useState2[1];\n\n  var _useState3 = useState(0),\n      bookID = _useState3[0],\n      setBookID = _useState3[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    if (isDeleting) {\n      deleteBook();\n    }\n  }, [isDeleting]);\n\n  var deleteBook = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var deleted;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('http://localhost:3000/api/books/' + bookID, {\n                method: \"DELETE\"\n              });\n\n            case 3:\n              deleted = _context.sent;\n              _context.next = 8;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n\n            case 8:\n              window.location.reload(false);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 6]]);\n    }));\n\n    return function deleteBook(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // The user clicks on the delete button\n\n\n  var handleDelete = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              console.log(e.target);\n              setBookName(e.target.name);\n              setBookID(e.target.id);\n              setIsDeleting(true);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleDelete(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }(); // The user clicks on the edit button\n  // The user is sent to the edit page\n  // The data about this particular book post is the to the page as well\n\n\n  var handleEdit = function handleEdit(myBookID, myTitle, myAuthor, imageData) {\n    //Update bookID\n    //setBookID(e.target.id);\n    //console.log('Book id: '+e.target.id);\n    console.log('Owner name: ' + name);\n    console.log('ownerID: ' + id);\n    Router.push({\n      pathname: '/edit',\n      query: {\n        name: name,\n        id: id,\n        firstname: firstname,\n        bookID: myBookID,\n        bookTitle: myTitle,\n        bookAuthor: myAuthor\n      }\n    });\n  }; //Handle page switch for header icons\n\n\n  var myProfile = function myProfile() {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname\n      }\n    });\n  }; //Go to section to create new listing\n\n\n  var myBooks = function myBooks() {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  var Search = function Search() {\n    Router.push({\n      pathname: '/posts',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  var bookLoad;\n\n  if (books) {\n    bookLoad = \"Loaded, yay!\";\n  } else {\n    bookLoad = \"Loading... :\";\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 12\n    }\n  }, \"bookLoad\");\n  /*\n  return(\n       <div className='profile-page'>\n  \n          <div className='book-greeting'>\n              \n              <div className='greeting-text'>\n              <div className='icon-box'>\n                  <Link href='/'>\n                      <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\n                  </Link>\n                  \n                  <div className='my-icon-end'>\n                  <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\n                  \n                  <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\n                  \n                  <img src=\"/icons/search.png\" alt=\"Search\" className='my-icon' onClick={Search}/>\n                  </div>\n                  \n              </div>\n              <br/>\n                 \n              </div>\n              \n          </div>\n              \n           <div className='library-header'>\n              <p style={{letterSpacing:'1px'}}><b><u>{firstname}'s Library</u></b></p>\n          </div>\n          \n          <div className='book-list'>\n                \n          \n          {books.map( book => {\n              \n          //var imageBase64 = book.imageFront.contentType;\n          var imageData;\n          var base64data;\n           if (book.imageFront){\n              \n              imageData = book.imageFront.data;\n           }\n          else{\n              console.log('no image');\n              imageData='';\n          }\n          \n           \n                  return (\n                         \n                      <div key={book._id} className='book-item-profile'>\n                           <div className='section1'>\n                              <div className='section1-image'>\n                                  <img src={imageData}  style={{ width:'100px', height:'100px', borderRadius:'20px'}}/>\n                              </div>\n                              <div className='section1-info'>\n                                  <p><b>{book.title}</b></p>\n                                  <p>{book.author}</p>\n                                  <p>$50</p>\n                                  <p>Book id: {book._id}</p>\n                              </div>\n                          \n                          </div>\n                           <div className='section2'>\n                              <div className='buttons-section'>\n                              <button className='btn btn-success' style={{ width:'100px', height:'45px'}} onClick={() => handleEdit(book._id, book.title, book.author, imageData)} id={book._id} name={book.title}>Edit</button>\n                              <button className='btn btn-secondary' style={{ width:'100px', height:'45px'}} onClick={handleDelete} id={book._id} name={book.title}>Delete</button>\n                              </div>\n                          </div>\n                      \n                          \n                      </div>\n                       \n                       \n                  )\n                  \n              \n          }\n          \n          \n          )}\n          \n      \n      \n          </div>        \n      </div>\n  )\n  */\n}, \"swoZANPLxJOEvfKzYj6Uw7hvTSE=\", false, function () {\n  return [useRouter];\n}));\n\nmyprofile.getInitialProps = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(mytitle) {\n    var res, _yield$res$json, data;\n\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetch('http://localhost:3000/api/books', {\n              headers: {\n                title: mytitle.query.mytitle,\n                author: mytitle.query.author\n              }\n            });\n\n          case 2:\n            res = _context3.sent;\n            _context3.next = 5;\n            return res.json();\n\n          case 5:\n            _yield$res$json = _context3.sent;\n            data = _yield$res$json.data;\n            return _context3.abrupt(\"return\", {\n              books: data\n            });\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function (_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\n\nexport default myprofile;","map":{"version":3,"sources":["/home/dhaneshen/Documents/booktrade/unibooktrade/pages/testing.js"],"names":["withRouter","useRouter","Link","Router","fetch","Confirm","Butto","Loader","useState","useEffect","myprofile","router","query","name","id","firstname","mytitle","author","books","isDeleting","setIsDeleting","bookName","setBookName","bookID","setBookID","deleteBook","e","method","deleted","window","location","reload","handleDelete","console","log","target","handleEdit","myBookID","myTitle","myAuthor","imageData","push","pathname","bookTitle","bookAuthor","myProfile","myBooks","Search","bookLoad","getInitialProps","headers","title","res","json","data"],"mappings":"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","sourcesContent":["import { withRouter, useRouter } from \"next/router\";\nimport Link from 'next/link';\nimport Router from \"next/router\";\n\n//Getting book data from database\nimport fetch from 'isomorphic-unfetch';\nimport { Confirm, Butto, Loader } from 'semantic-ui-react';\nimport { useState, useEffect } from \"react\";\n\n\n\n\nconst myprofile = withRouter(({ router:  { query:{name, id, firstname, mytitle, author}}, books} ) => {\n\n\n\n    const [isDeleting, setIsDeleting] = useState(false);\n    const [bookName, setBookName] = useState('null');\n    const [bookID, setBookID] = useState(0);\n    const router = useRouter();\n\n\n\n\n    useEffect(() => {\n        if (isDeleting) {\n            deleteBook();\n        }\n    }, [isDeleting])\n\n\n    const deleteBook = async (e) =>{\n\n        try {\n            //const deleted = await fetch('https://unibooktrade.vercel.app/api/books/'+bookID,{\n            const deleted = await fetch('http://localhost:3000/api/books/'+bookID,{\n                method:\"DELETE\"\n\n               \n            });\n        } catch (error) {\n            \n        }\n\n        window.location.reload(false);\n\n    }\n\n    // The user clicks on the delete button\n    const handleDelete = async (e) => {\n        console.log(e.target);\n        setBookName(e.target.name);\n        setBookID(e.target.id);\n        setIsDeleting(true);\n    }\n\n    // The user clicks on the edit button\n    // The user is sent to the edit page\n    // The data about this particular book post is the to the page as well\n    const handleEdit = (myBookID, myTitle, myAuthor, imageData) => {\n        //Update bookID\n        //setBookID(e.target.id);\n        //console.log('Book id: '+e.target.id);\n        console.log('Owner name: '+ name);\n        console.log('ownerID: '+id);\n        \n        \n        Router.push({\n            pathname: '/edit',\n            query: { \n                name: name,\n                id: id,\n                firstname: firstname,\n                bookID: myBookID,\n                bookTitle: myTitle,\n                bookAuthor: myAuthor,\n                    \n            }\n        });\n        \n        \n        \n        \n    }\n\n    //Handle page switch for header icons\n    const myProfile = () => {\n        Router.push({\n            pathname: '/myprofile',\n            query: { \n                    mytitle: '',\n                    author: '',\n                    name: name,\n                    id: id,\n                    firstname: firstname\n                    \n            }\n        });\n    }\n\n    //Go to section to create new listing\n    const myBooks = () => {\n        Router.push({\n            pathname: '/new',\n            query: { \n                    id: id,\n                    name: name,\n                    firstname: firstname  \n            }\n        });\n    }\n\n    const Search = () => {\n        Router.push({\n            pathname: '/posts',\n            query: { \n                    id: id,\n                    name: name,\n                    firstname: firstname\n                    \n            }\n        });\n    }\n\n    let bookLoad;\n    if (books){\n        bookLoad = \"Loaded, yay!\"\n    }\n    else{\n        bookLoad= \"Loading... :\"\n    }\n\n\n    return(<div>bookLoad</div>)\n    /*\n    return(\n\n        <div className='profile-page'>\n    \n            <div className='book-greeting'>\n                \n                <div className='greeting-text'>\n                <div className='icon-box'>\n                    <Link href='/'>\n                        <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\n                    </Link>\n                    \n                    <div className='my-icon-end'>\n                    <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\n                    \n                    <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\n                    \n                    <img src=\"/icons/search.png\" alt=\"Search\" className='my-icon' onClick={Search}/>\n                    </div>\n                    \n                </div>\n                <br/>\n                   \n                </div>\n                \n            </div>\n                \n\n            <div className='library-header'>\n                <p style={{letterSpacing:'1px'}}><b><u>{firstname}'s Library</u></b></p>\n            </div>\n            \n            <div className='book-list'>\n                  \n            \n            {books.map( book => {\n                \n            //var imageBase64 = book.imageFront.contentType;\n            var imageData;\n            var base64data;\n\n            if (book.imageFront){\n                \n                imageData = book.imageFront.data;\n\n            }\n            else{\n                console.log('no image');\n                imageData='';\n            }\n            \n\n            \n                    return (\n                           \n                        <div key={book._id} className='book-item-profile'>\n\n                            <div className='section1'>\n                                <div className='section1-image'>\n                                    <img src={imageData}  style={{ width:'100px', height:'100px', borderRadius:'20px'}}/>\n                                </div>\n                                <div className='section1-info'>\n                                    <p><b>{book.title}</b></p>\n                                    <p>{book.author}</p>\n                                    <p>$50</p>\n                                    <p>Book id: {book._id}</p>\n                                </div>\n                            \n                            </div>\n\n                            <div className='section2'>\n                                <div className='buttons-section'>\n                                <button className='btn btn-success' style={{ width:'100px', height:'45px'}} onClick={() => handleEdit(book._id, book.title, book.author, imageData)} id={book._id} name={book.title}>Edit</button>\n                                <button className='btn btn-secondary' style={{ width:'100px', height:'45px'}} onClick={handleDelete} id={book._id} name={book.title}>Delete</button>\n                                </div>\n                            </div>\n                        \n                            \n                        </div>\n\n                        \n\n                        \n                    )\n                    \n                \n            }\n            \n            \n            )}\n            \n        \n        \n            </div>        \n        </div>\n    )\n    */\n        \n\n\n});\n\n\nmyprofile.getInitialProps = async (mytitle) =>{\n\n            \n\n    //const res = await fetch('https://unibooktrade.vercel.app/api/books', {\n    const res = await fetch('http://localhost:3000/api/books', {\n        headers: {\n            title: mytitle.query.mytitle,\n            author: mytitle.query.author\n        }\n    });\n    const { data } = await res.json();\n\n    return{ books: data }\n}\n\n\nexport default myprofile;"]},"metadata":{},"sourceType":"module"}