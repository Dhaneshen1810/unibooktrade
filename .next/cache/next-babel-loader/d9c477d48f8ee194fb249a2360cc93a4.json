{"ast":null,"code":"import dbConnect from '../../../utils/dbConnect';\nimport Book from '../../../modals/book';\ndbConnect();\nexport default (async (req, res) => {\n  const {\n    method\n  } = req;\n\n  switch (method) {\n    case 'GET':\n      try {\n        const books = await Book.find({});\n        res.status(200).json({\n          success: true,\n          data: books\n        });\n      } catch (error) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n\n    case 'POST':\n      try {\n        const book = await Book.create(req.body);\n        res.status(201).json({\n          success: true,\n          data: Book\n        });\n      } catch (error) {\n        res.status(400).json({\n          success: false\n        });\n        break;\n      }\n\n  }\n});","map":{"version":3,"sources":["C:/Users/danmo/book-trade/pages/api/books/index.js"],"names":["dbConnect","Book","req","res","method","books","find","status","json","success","data","error","book","create","body"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEAD,SAAS;AAET,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAaF,GAAnB;;AAEA,UAAOE,MAAP;AACI,SAAK,KAAL;AACI,UAAG;AACC,cAAMC,KAAK,GAAG,MAAMJ,IAAI,CAACK,IAAL,CAAU,EAAV,CAApB;AAEAH,QAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAEL;AAAvB,SAArB;AACH,OAJD,CAIC,OAAMM,KAAN,EAAY;AACTR,QAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAArB;AACH;;AACD;;AACJ,SAAK,MAAL;AACI,UAAI;AACA,cAAMG,IAAI,GAAG,MAAMX,IAAI,CAACY,MAAL,CAAYX,GAAG,CAACY,IAAhB,CAAnB;AAEAX,QAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAET;AAAvB,SAArB;AACH,OAJD,CAIE,OAAOU,KAAP,EAAc;AACZR,QAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAArB;AACA;AACH;;AAlBT;AAoBH,CAvBD","sourcesContent":["import dbConnect from '../../../utils/dbConnect';\r\nimport Book from '../../../modals/book';\r\n\r\ndbConnect();\r\n\r\nexport default async (req, res) => {\r\n    const { method } = req;\r\n\r\n    switch(method){\r\n        case 'GET':\r\n            try{\r\n                const books = await Book.find({});\r\n\r\n                res.status(200).json({ success: true, data: books })\r\n            }catch(error){\r\n                res.status(400).json({ success: false});\r\n            }\r\n            break;\r\n        case 'POST':\r\n            try {\r\n                const book = await Book.create(req.body)\r\n\r\n                res.status(201).json({ success: true, data: Book})\r\n            } catch (error) {\r\n                res.status(400).json({ success: false });\r\n                break;\r\n            }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}