{"ast":null,"code":"var _jsxFileName = \"/home/dhaneshen/Documents/booktrade/unibooktrade/pages/testing.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter, withRouter } from 'next/router';\nimport Router from 'next/router';\nimport { Form } from 'react-bootstrap';\nimport { Label } from 'semantic-ui-react'; //Test github\n//Image resize\n\nimport Resizer from 'react-image-file-resizer';\n\nconst fileUpload = require('fuctbase64');\n\nconst EditBook = withRouter(({\n  router: {\n    query: {\n      name,\n      id,\n      firstname,\n      bookID,\n      bookTitle,\n      bookAuthor\n    }\n  }\n}) => {\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    title: bookTitle,\n    author: bookAuthor,\n    ownerID: id,\n    ownerName: name,\n    imageFront: ''\n  });\n  const {\n    0: isSubmitting,\n    1: setIsSubmitting\n  } = useState(false);\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({}); //state of the preview image\n\n  const {\n    0: prevImage,\n    1: setPrevImage\n  } = useState('/static/default-image.svg');\n  const router = useRouter();\n  useEffect(() => {\n    if (isSubmitting) {\n      if (Object.keys(errors).length === 0) {\n        //bookmatch();\n        //alert('New book created')\n        createBook();\n        /*\n        Router.push({\n            pathname: '/booklist',\n            query: { \n                    mytitle: form.title,\n                    author: form.author\n                    \n            }\n        });*/\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n  }, [errors]); //Create new book post\n\n  const createBook = async () => {\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      title: bookTitle,\n      author: bookAuthor,\n      ownerID: id,\n      ownerName: name,\n      imageFront: ''\n    }));\n\n    try {\n      const res = await fetch('http://localhost:3000/api/books/' + bookID, {\n        //const res = await fetch('https://unibooktrade.vercel.app/api/books/'+bookID, {\n        method: 'PUT',\n        headers: {\n          \"Accept\": 'application/json',\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(form)\n      }); //Redirect to profile\n\n      /*\n      Router.push({\n          pathname: '/myprofile',\n          query: { \n                  id: id,\n                  name: name,\n                  firstname: firstname\n                  \n          }\n      });\n      */\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    /*\n    setForm({\n        ...form,\n             ownerID: id,\n             ownerName: name,\n            \n     })\n    */\n\n    let errs = validate();\n    setErrors(errs);\n    setIsSubmitting(true);\n  };\n\n  const handleChange = e => {\n    console.log(e.target);\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const validate = () => {\n    let err = {};\n    return err;\n  }; //Handle page switch for header icons\n\n\n  const myProfile = () => {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname\n      }\n    });\n  }; //Go to section to create new listing\n\n\n  const myBooks = () => {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  const Search = () => {\n    Router.push({\n      pathname: '/posts',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  }; //Handle image upload\n\n\n  const image1Upload = e => {\n    var fileInput = false;\n\n    if (e.target.files[0]) {\n      fileInput = true;\n    }\n\n    if (fileInput) {\n      Resizer.imageFileResizer(event.target.files[0], 300, 300, 'png', 100, 0, uri => {\n        console.log(uri); //Update form with new image data\n\n        setForm(_objectSpread(_objectSpread({}, form), {}, {\n          imageFront: {\n            data: uri,\n            contentType: 'image/png'\n          }\n        })); //Update image preview\n\n        setPrevImage(uri);\n      }, 'base64');\n    } else {\n      setForm({\n        imageFront: {\n          data: form.imageFront,\n          contentType: 'image/png'\n        }\n      });\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"newBook-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"book-greeting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"greeting-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"icon-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/sign-out.png\",\n    alt: \"my image\",\n    className: \"my-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"my-icon-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/four-square.png\",\n    alt: \"my books\",\n    className: \"my-icon\",\n    onClick: myProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/plus.png\",\n    alt: \"Add book\",\n    className: \"my-icon\",\n    onClick: myBooks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/search.png\",\n    alt: \"Search\",\n    className: \"my-icon\",\n    onClick: Search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginTop: '65px',\n      fontSize: '18px',\n      textAlign: 'center',\n      width: '100%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 12\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 97\n    }\n  }, \"Add a new book posting.\")))), __jsx(\"form\", {\n    className: \"create-book-form\",\n    onSubmit: handleSubmit,\n    style: {\n      marginTop: '3%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: form.imageFront,\n    alt: \"default-image\",\n    className: \"image-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"form-group my-group\",\n    style: {\n      marginTop: '8%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control new-book-input\",\n    id: \"exampleInputEmail1\",\n    placeholder: \"Enter book title\",\n    name: \"title\",\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group my-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control new-book-input\",\n    placeholder: \"Enter Author\",\n    name: \"author\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    className: \"input-file-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    id: \"input-files\",\n    className: \"input-file-btn\",\n    onChange: image1Upload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"file-upload\",\n    className: \"input-file-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 15\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 17\n    }\n  }, \"POST\"))));\n});\nexport default EditBook;","map":{"version":3,"sources":["/home/dhaneshen/Documents/booktrade/unibooktrade/pages/testing.js"],"names":["Link","useState","useEffect","fetch","useRouter","withRouter","Router","Form","Label","Resizer","fileUpload","require","EditBook","router","query","name","id","firstname","bookID","bookTitle","bookAuthor","form","setForm","title","author","ownerID","ownerName","imageFront","isSubmitting","setIsSubmitting","errors","setErrors","prevImage","setPrevImage","Object","keys","length","createBook","res","method","headers","body","JSON","stringify","error","console","log","handleSubmit","e","preventDefault","errs","validate","handleChange","target","value","err","myProfile","push","pathname","mytitle","myBooks","Search","image1Upload","fileInput","files","imageFileResizer","event","uri","data","contentType","marginTop","fontSize","textAlign","width"],"mappings":";;;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,aAAtC;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,KAAT,QAAsB,mBAAtB,C,CAEA;AAEA;;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AAEA,MAAMC,QAAQ,GAAGP,UAAU,CAAC,CAAC;AAAEQ,EAAAA,MAAM,EAAG;AAAEC,IAAAA,KAAK,EAAC;AAACC,MAAAA,IAAD;AAAOC,MAAAA,EAAP;AAAWC,MAAAA,SAAX;AAAsBC,MAAAA,MAAtB;AAA8BC,MAAAA,SAA9B;AAAyCC,MAAAA;AAAzC;AAAR;AAAX,CAAD,KAAgF;AACxG,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBrB,QAAQ,CAAC;AAAEsB,IAAAA,KAAK,EAACJ,SAAR;AAAmBK,IAAAA,MAAM,EAACJ,UAA1B;AAAsCK,IAAAA,OAAO,EAACT,EAA9C;AAAkDU,IAAAA,SAAS,EAACX,IAA5D;AAAkEY,IAAAA,UAAU,EAAC;AAA7E,GAAD,CAAhC;AAEA,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkC5B,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM;AAAA,OAAC6B,MAAD;AAAA,OAASC;AAAT,MAAsB9B,QAAQ,CAAC,EAAD,CAApC,CAJwG,CAMxG;;AACA,QAAM;AAAA,OAAC+B,SAAD;AAAA,OAAYC;AAAZ,MAA4BhC,QAAQ,CAAC,2BAAD,CAA1C;AAEA,QAAMY,MAAM,GAAGT,SAAS,EAAxB;AAIAF,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI0B,YAAJ,EAAiB;AACb,UAAIM,MAAM,CAACC,IAAP,CAAYL,MAAZ,EAAoBM,MAApB,KAA8B,CAAlC,EAAoC;AAChC;AAEA;AAGAC,QAAAA,UAAU;AACV;;;;;;;;;AAUH,OAjBD,MAkBI;AACAR,QAAAA,eAAe,CAAC,KAAD,CAAf;AACH;AACJ;AACJ,GAxBQ,EAwBN,CAACC,MAAD,CAxBM,CAAT,CAbwG,CAwCxG;;AACA,QAAMO,UAAU,GAAG,YAAY;AAE3Bf,IAAAA,OAAO,iCACAD,IADA;AAECE,MAAAA,KAAK,EAAEJ,SAFR;AAGCK,MAAAA,MAAM,EAAEJ,UAHT;AAIEK,MAAAA,OAAO,EAAET,EAJX;AAKEU,MAAAA,SAAS,EAAEX,IALb;AAMEY,MAAAA,UAAU,EAAC;AANb,OAAP;;AAUA,QAAI;AAEA,YAAMW,GAAG,GAAG,MAAMnC,KAAK,CAAC,qCAAmCe,MAApC,EAA4C;AACnE;AAEIqB,QAAAA,MAAM,EAAE,KAHuD;AAK/DC,QAAAA,OAAO,EAAE;AACL,oBAAU,kBADL;AAEL,0BAAgB;AAFX,SALsD;AAS/DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAetB,IAAf;AATyD,OAA5C,CAAvB,CAFA,CAiBA;;AACA;;;;;;;;;;;AAYH,KA9BD,CA8BE,OAAOuB,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEH;AACJ,GA9CD;;AAgDA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AAGA;;;;;;;;;AAUA,QAAIC,IAAI,GAAGC,QAAQ,EAAnB;AACApB,IAAAA,SAAS,CAACmB,IAAD,CAAT;AACArB,IAAAA,eAAe,CAAC,IAAD,CAAf;AAGH,GAnBD;;AAoBA,QAAMuB,YAAY,GAAIJ,CAAD,IAAO;AACxBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACK,MAAd;AAEA/B,IAAAA,OAAO,iCACAD,IADA;AAEC,OAAC2B,CAAC,CAACK,MAAF,CAAStC,IAAV,GAAiBiC,CAAC,CAACK,MAAF,CAASC;AAF3B,OAAP;AAKH,GARD;;AAUA,QAAMH,QAAQ,GAAG,MAAM;AACnB,QAAII,GAAG,GAAG,EAAV;AAGA,WAAOA,GAAP;AACH,GALD,CAvHwG,CA8HpG;;;AACA,QAAMC,SAAS,GAAG,MAAM;AACpBlD,IAAAA,MAAM,CAACmD,IAAP,CAAY;AACRC,MAAAA,QAAQ,EAAE,YADF;AAER5C,MAAAA,KAAK,EAAE;AACC6C,QAAAA,OAAO,EAAE,EADV;AAECnC,QAAAA,MAAM,EAAE,EAFT;AAGCT,QAAAA,IAAI,EAAEA,IAHP;AAICC,QAAAA,EAAE,EAAEA,EAJL;AAKCC,QAAAA,SAAS,EAAEA;AALZ;AAFC,KAAZ;AAWH,GAZD,CA/HoG,CA6IpG;;;AACA,QAAM2C,OAAO,GAAG,MAAM;AAClBtD,IAAAA,MAAM,CAACmD,IAAP,CAAY;AACRC,MAAAA,QAAQ,EAAE,MADF;AAER5C,MAAAA,KAAK,EAAE;AACCE,QAAAA,EAAE,EAAEA,EADL;AAECD,QAAAA,IAAI,EAAEA,IAFP;AAGCE,QAAAA,SAAS,EAAEA;AAHZ;AAFC,KAAZ;AASH,GAVD;;AAYA,QAAM4C,MAAM,GAAG,MAAM;AACjBvD,IAAAA,MAAM,CAACmD,IAAP,CAAY;AACRC,MAAAA,QAAQ,EAAE,QADF;AAER5C,MAAAA,KAAK,EAAE;AACCE,QAAAA,EAAE,EAAEA,EADL;AAECD,QAAAA,IAAI,EAAEA,IAFP;AAGCE,QAAAA,SAAS,EAAEA;AAHZ;AAFC,KAAZ;AASH,GAVD,CA1JoG,CAsKpG;;;AACA,QAAM6C,YAAY,GAAId,CAAD,IAAO;AAG7B,QAAIe,SAAS,GAAG,KAAhB;;AACA,QAAIf,CAAC,CAACK,MAAF,CAASW,KAAT,CAAe,CAAf,CAAJ,EAAsB;AAClBD,MAAAA,SAAS,GAAG,IAAZ;AACH;;AACD,QAAIA,SAAJ,EAAe;AACXtD,MAAAA,OAAO,CAACwD,gBAAR,CACCC,KAAK,CAACb,MAAN,CAAaW,KAAb,CAAmB,CAAnB,CADD,EAEC,GAFD,EAGC,GAHD,EAIC,KAJD,EAKC,GALD,EAMC,CAND,EAOCG,GAAG,IAAI;AACHtB,QAAAA,OAAO,CAACC,GAAR,CAAYqB,GAAZ,EADG,CAGH;;AACA7C,QAAAA,OAAO,iCACAD,IADA;AAENM,UAAAA,UAAU,EAAC;AACPyC,YAAAA,IAAI,EAAED,GADC;AAEPE,YAAAA,WAAW,EAAE;AAFN;AAFL,WAAP,CAJG,CAaP;;AACApC,QAAAA,YAAY,CAACkC,GAAD,CAAZ;AAGC,OAxBF,EAyBC,QAzBD;AA4BH,KA7BD,MA8BI;AACA7C,MAAAA,OAAO,CAAC;AACJK,QAAAA,UAAU,EAAC;AACPyC,UAAAA,IAAI,EAAE/C,IAAI,CAACM,UADJ;AAEP0C,UAAAA,WAAW,EAAE;AAFN;AADP,OAAD,CAAP;AAMH;AAIC,GAhDD;;AAqDJ,SACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAC,qBAAT;AAA+B,IAAA,GAAG,EAAC,UAAnC;AAA8C,IAAA,SAAS,EAAC,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADR,EAKQ;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,GAAG,EAAC,wBAAT;AAAkC,IAAA,GAAG,EAAC,UAAtC;AAAiD,IAAA,SAAS,EAAC,SAA3D;AAAqE,IAAA,OAAO,EAAEb,SAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA;AAAK,IAAA,GAAG,EAAC,iBAAT;AAA2B,IAAA,GAAG,EAAC,UAA/B;AAA0C,IAAA,SAAS,EAAC,SAApD;AAA8D,IAAA,OAAO,EAAEI,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,EAKA;AAAK,IAAA,GAAG,EAAC,mBAAT;AAA6B,IAAA,GAAG,EAAC,QAAjC;AAA0C,IAAA,SAAS,EAAC,SAApD;AAA8D,IAAA,OAAO,EAAEC,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,CALR,CADA,EAqBD;AAAK,IAAA,KAAK,EAAE;AAAES,MAAAA,SAAS,EAAC,MAAZ;AAAoBC,MAAAA,QAAQ,EAAC,MAA7B;AAAqCC,MAAAA,SAAS,EAAC,QAA/C;AAAyDC,MAAAA,KAAK,EAAC;AAA/D,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAArF,CArBC,CADA,CADJ,EA+BA;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAmC,IAAA,QAAQ,EAAE1B,YAA7C;AAA2D,IAAA,KAAK,EAAE;AAAEuB,MAAAA,SAAS,EAAC;AAAZ,KAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,GAAG,EAAEjD,IAAI,CAACM,UAAf;AAA2B,IAAA,GAAG,EAAC,eAA/B;AAA+C,IAAA,SAAS,EAAC,eAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAEA;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAqC,IAAA,KAAK,EAAE;AAAC2C,MAAAA,SAAS,EAAC;AAAX,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,6BAFd;AAGI,IAAA,EAAE,EAAC,oBAHP;AAII,IAAA,WAAW,EAAC,kBAJhB;AAKI,IAAA,IAAI,EAAC,OALT;AAMI,IAAA,QAAQ,MANZ;AAOI,IAAA,QAAQ,EAAElB,YAPd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADR,CAFA,EAaQ;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,SAAS,EAAC,6BAFd;AAGI,IAAA,WAAW,EAAC,cAHhB;AAII,IAAA,IAAI,EAAC,QAJT;AAKI,IAAA,QAAQ,EAAEA,YALd;AAMI,IAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAUA;AAAO,IAAA,SAAS,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AACA,IAAA,IAAI,EAAC,MADL;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,EAAE,EAAC,aAHH;AAIA,IAAA,SAAS,EAAC,gBAJV;AAKA,IAAA,QAAQ,EAAEU,YALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAVA,EAoBF;AAAO,IAAA,OAAO,EAAC,aAAf;AAA6B,IAAA,SAAS,EAAC,gBAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBE,EAwBA;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,wBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBA,CAbR,CA/BA,CADJ;AA2EH,CAvS0B,CAA3B;AA4SA,eAAelD,QAAf","sourcesContent":["import Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter, withRouter } from 'next/router';\nimport Router from 'next/router';\n\nimport { Form } from 'react-bootstrap';\nimport { Label } from 'semantic-ui-react';\n\n//Test github\n\n//Image resize\nimport Resizer from 'react-image-file-resizer';\n\nconst fileUpload = require('fuctbase64');\n\nconst EditBook = withRouter(({ router:  { query:{name, id, firstname, bookID, bookTitle, bookAuthor}}} ) => {\n    const [form, setForm] = useState({ title:bookTitle, author:bookAuthor, ownerID:id, ownerName:name, imageFront:''}\n    );\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [errors, setErrors] = useState({});\n\n    //state of the preview image\n    const [prevImage, setPrevImage] = useState('/static/default-image.svg');\n\n    const router = useRouter();\n\n\n\n    useEffect(() => {\n        if (isSubmitting){\n            if (Object.keys(errors).length ===0){\n                //bookmatch();\n\n                //alert('New book created')\n\n\n                createBook();\n                /*\n                Router.push({\n                    pathname: '/booklist',\n                    query: { \n                            mytitle: form.title,\n                            author: form.author\n                            \n                    }\n                });*/\n              \n            }\n            else{\n                setIsSubmitting(false);\n            }\n        }\n    }, [errors])\n\n\n    //Create new book post\n    const createBook = async () => {\n\n        setForm({\n            ...form,\n                title: bookTitle,\n                author: bookAuthor,\n                 ownerID: id,\n                 ownerName: name,\n                 imageFront:''\n        })\n\n        \n        try {\n            \n            const res = await fetch('http://localhost:3000/api/books/'+bookID, {\n            //const res = await fetch('https://unibooktrade.vercel.app/api/books/'+bookID, {\n\n                method: 'PUT',\n                \n                headers: {\n                    \"Accept\": 'application/json',\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(form)\n               \n            })\n            \n            \n            \n            //Redirect to profile\n            /*\n            Router.push({\n                pathname: '/myprofile',\n                query: { \n                        id: id,\n                        name: name,\n                        firstname: firstname\n                        \n                }\n            });\n            */\n\n        } catch (error) {\n            console.log(error)\n\n        }\n    }\n\n    const handleSubmit = (e) => { \n        e.preventDefault();\n\n\n        /*\n        setForm({\n            ...form,\n                 ownerID: id,\n                 ownerName: name,\n                \n\n        })\n        */\n\n        let errs = validate();\n        setErrors(errs);\n        setIsSubmitting(true);\n\n\n    }\n    const handleChange = (e) => { \n        console.log(e.target)\n\n        setForm({\n            ...form,\n                [e.target.name]: e.target.value\n            \n        })\n    }\n\n    const validate = () => {\n        let err = {};\n\n        \n        return err;\n    }\n\n        //Handle page switch for header icons\n        const myProfile = () => {\n            Router.push({\n                pathname: '/myprofile',\n                query: { \n                        mytitle: '',\n                        author: '',\n                        name: name,\n                        id: id,\n                        firstname: firstname\n                        \n                }\n            });\n        }\n    \n        //Go to section to create new listing\n        const myBooks = () => {\n            Router.push({\n                pathname: '/new',\n                query: { \n                        id: id,\n                        name: name,\n                        firstname: firstname\n                        \n                }\n            });\n        }\n\n        const Search = () => {\n            Router.push({\n                pathname: '/posts',\n                query: { \n                        id: id,\n                        name: name,\n                        firstname: firstname\n                        \n                }\n            });\n        }\n\n        //Handle image upload\n        const image1Upload = (e) => {\n\n\n       var fileInput = false;\n       if (e.target.files[0]){\n           fileInput = true;\n       }\n       if (fileInput) {\n           Resizer.imageFileResizer(\n            event.target.files[0],\n            300,\n            300,\n            'png',\n            100,\n            0,\n            uri => {\n                console.log(uri)\n\n                //Update form with new image data\n                setForm({\n                    ...form,\n                 imageFront:{\n                     data: uri, \n                     contentType: 'image/png'\n                 }\n            \n            })\n\n            //Update image preview\n            setPrevImage(uri);\n\n            \n            },\n            'base64'\n\n           );\n       }\n       else{\n           setForm({\n               imageFront:{\n                   data: form.imageFront,\n                   contentType: 'image/png'\n               }\n           })\n       }\n\n       \n        \n        }\n\n        \n           \n\n    return (\n        <div className='newBook-page'>\n            <div className='book-greeting'>\n            <div className='greeting-text'>\n            <div className='icon-box'>\n                    <Link href='/'>\n                        <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\n                    </Link>\n                    \n                    <div className='my-icon-end'>\n                    <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\n                    \n                    <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\n                    \n                    <img src=\"/icons/search.png\" alt=\"Search\" className='my-icon' onClick={Search}/>\n                    </div>\n                    \n\n\n                    \n            </div>\n\n\n            \n           <div style={{ marginTop:'65px', fontSize:'18px', textAlign:'center', width:'100%' }}><p>Add a new book posting.</p></div>\n\n\n                \n            </div>\n                \n        </div>\n           \n        <form className='create-book-form' onSubmit={handleSubmit} style={{ marginTop:'3%' }}>\n        <img src={form.imageFront} alt='default-image' className='image-preview'/>\n        <div className=\"form-group my-group\" style={{marginTop:'8%'}}>\n                <input \n                    type=\"text\" \n                    className=\"form-control new-book-input\" \n                    id=\"exampleInputEmail1\" \n                    placeholder=\"Enter book title\"\n                    name=\"title\"\n                    required\n                    onChange={handleChange}/>\n                    \n                </div>\n                <div className=\"form-group my-group\">\n                <input \n                    type=\"text\" \n                    className=\"form-control new-book-input\" \n                    placeholder=\"Enter Author\"\n                    name='author'\n                    onChange={handleChange}\n                    required\n                    />\n                \n                <label className='input-file-btn'>\n                <input\n                type=\"file\"\n                name=\"file\"\n                id=\"input-files\"\n                className='input-file-btn'\n                onChange={image1Upload}\n              />\n              </label>\n\n              <label htmlFor=\"file-upload\" className=\"input-file-btn\" >\n            </label>\n            \n\n                <button type=\"submit\" className=\"btn btn-primary my-btn\">POST</button>\n                </div>\n                </form>\n            \n        </div>\n    )\n});\n\n\n\n\nexport default EditBook;"]},"metadata":{},"sourceType":"module"}