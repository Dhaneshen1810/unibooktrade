{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\danmo\\\\book-trade\\\\pages\\\\posts.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from \"next/router\";\nimport Link from 'next/link'; //Getting book data from database\n\nimport fetch from 'isomorphic-unfetch';\nimport books from \"./api/books\";\nvar posts = withRouter(function (_ref) {\n  var _ref$router$query = _ref.router.query,\n      name = _ref$router$query.name,\n      id = _ref$router$query.id,\n      firstName = _ref$router$query.firstName;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, \"Hello there, \", name), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Hello there, \", firstName), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, \"Your ID is: \", id), books.map(function (book) {\n    return __jsx(\"div\", {\n      key: book._id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }\n    }, book.title);\n  }));\n});\nposts.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, _yield$res$json, data;\n\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('http://localhost:3000/api/books');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          _yield$res$json = _context.sent;\n          data = _yield$res$json.data;\n          return _context.abrupt(\"return\", {\n            books: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default posts;","map":{"version":3,"sources":["C:/Users/danmo/book-trade/pages/posts.js"],"names":["withRouter","Link","fetch","books","posts","router","query","name","id","firstName","map","book","_id","title","getInitialProps","res","json","data"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,IAAMC,KAAK,GAAGJ,UAAU,CAAC;AAAA,+BAAGK,MAAH,CAAcC,KAAd;AAAA,MAAqBC,IAArB,qBAAqBA,IAArB;AAAA,MAA2BC,EAA3B,qBAA2BA,EAA3B;AAAA,MAA+BC,SAA/B,qBAA+BA,SAA/B;AAAA,SACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBF,IAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBE,SAAjB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAgBD,EAAhB,CAHJ,EAKKL,KAAK,CAACO,GAAN,CAAU,UAAAC,IAAI,EAAI;AACf,WACI;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,IAAI,CAACE,KADV,CADJ;AAKH,GANA,CALL,CADqB;AAAA,CAAD,CAAxB;AAmBAT,KAAK,CAACU,eAAN,yEAAwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFZ,KAAK,CAAC,iCAAD,CADH;;AAAA;AACda,UAAAA,GADc;AAAA;AAAA,iBAEGA,GAAG,CAACC,IAAJ,EAFH;;AAAA;AAAA;AAEZC,UAAAA,IAFY,mBAEZA,IAFY;AAAA,2CAId;AAAEd,YAAAA,KAAK,EAAEc;AAAT,WAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AASA,eAAeb,KAAf","sourcesContent":["import { withRouter } from \"next/router\";\r\nimport Link from 'next/link';\r\n\r\n//Getting book data from database\r\nimport fetch from 'isomorphic-unfetch';\r\nimport books from \"./api/books\";\r\n\r\n\r\nconst posts = withRouter(({ router:  { query:{name, id, firstName}}} ) => (\r\n    <div>\r\n        <p>Hello there, {name}</p>\r\n        <p>Hello there, {firstName}</p>\r\n        <p>Your ID is: {id}</p>\r\n\r\n        {books.map(book => {\r\n            return (\r\n                <div key={book._id}>\r\n                    {book.title}\r\n                    </div>\r\n            )\r\n        })}\r\n\r\n\r\n        \r\n    </div>\r\n));\r\n\r\nposts.getInitialProps = async () =>{\r\n    const res = await fetch('http://localhost:3000/api/books');\r\n    const { data } = await res.json();\r\n\r\n    return{ books: data }\r\n}\r\n  \r\n\r\n    \r\nexport default posts;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}