{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dhaneshen/Documents/booktrade/unibooktrade/pages/testing.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter, withRouter } from 'next/router';\nimport Router from 'next/router';\nimport { Form } from 'react-bootstrap';\nimport { Label } from 'semantic-ui-react'; //Image resize\n\nimport Resizer from 'react-image-file-resizer';\n\nvar fileUpload = require('fuctbase64');\n\nvar NewBook = withRouter(_c = _s(function (_ref) {\n  _s();\n\n  var _ref$router$query = _ref.router.query,\n      name = _ref$router$query.name,\n      id = _ref$router$query.id,\n      firstname = _ref$router$query.firstname,\n      userEmail = _ref$router$query.userEmail;\n\n  var _useState = useState({\n    title: '',\n    author: '',\n    ownerID: '',\n    ownerName: '',\n    imageFront: '',\n    price: '',\n    userEmail: ''\n  }),\n      form = _useState[0],\n      setForm = _useState[1];\n\n  var _useState2 = useState(false),\n      isSubmitting = _useState2[0],\n      setIsSubmitting = _useState2[1];\n\n  var _useState3 = useState({}),\n      errors = _useState3[0],\n      setErrors = _useState3[1]; //state of the preview image\n\n\n  var _useState4 = useState('/static/default-image.svg'),\n      prevImage = _useState4[0],\n      setPrevImage = _useState4[1];\n\n  var router = useRouter(); // Get current date\n  //console.log('Date is', date.getDay() )\n  //console.log('Date is', Date().getDate() )\n  //console.log('Date is', date.getMonth()+1 )\n  //var date = new Date().getDay()\n  //Get day\n\n  var day;\n\n  switch (new Date().getDay()) {\n    case 0:\n      day = \"Sunday\";\n      break;\n\n    case 1:\n      day = \"Monday\";\n      break;\n\n    case 2:\n      day = \"Tuesday\";\n      break;\n\n    case 3:\n      day = \"Wednesday\";\n      break;\n\n    case 4:\n      day = \"Thursday\";\n      break;\n\n    case 5:\n      day = \"Friday\";\n      break;\n\n    case 6:\n      day = \"Saturday\";\n  } //Get mobth\n\n\n  var month;\n\n  switch (new Date().getMonth()) {\n    case 0:\n      month = \"December\";\n      break;\n\n    case 1:\n      month = \"January\";\n      break;\n\n    case 2:\n      month = \"March\";\n      break;\n\n    case 3:\n      month = \"April\";\n      break;\n\n    case 4:\n      month = \"May\";\n      break;\n\n    case 5:\n      month = \"June\";\n      break;\n\n    case 6:\n      month = \"July\";\n\n    case 6:\n      month = \"July\";\n\n    case 7:\n      month = \"August\";\n\n    case 8:\n      month = \"September\";\n\n    case 9:\n      month = \"October\";\n\n    case 10:\n      month = \"November\";\n\n    case 11:\n      month = \"December\";\n  }\n\n  console.log(day, month);\n  useEffect(function () {\n    if (isSubmitting) {\n      if (Object.keys(errors).length === 0) {\n        //bookmatch();\n        //alert('New book created')\n        createBook();\n        /*\n        Router.push({\n            pathname: '/booklist',\n            query: { \n                    mytitle: form.title,\n                    author: form.author\n                    \n            }\n        });*/\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n  }, [errors]); //Create new book post\n\n  var createBook = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('http://localhost:3000/api/books', {\n                //const res = await fetch('https://unibooktrade.vercel.app/api/books', {\n                method: 'POST',\n                headers: {\n                  \"Accept\": 'application/json',\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(form)\n              });\n\n            case 3:\n              res = _context.sent;\n              //Redirect to my profile\n              Router.push({\n                pathname: '/myprofile',\n                query: {\n                  mytitle: '',\n                  author: '',\n                  name: name,\n                  id: id,\n                  firstname: firstname,\n                  userEmail: userEmail\n                }\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function createBook() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    console.log(form.imageFront);\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      ownerID: id,\n      ownerName: name,\n      userEmail: userEmail\n    }));\n    var errs = validate();\n    setErrors(errs);\n    setIsSubmitting(true);\n  };\n\n  var handleChange = function handleChange(e) {\n    setForm(_objectSpread(_objectSpread({}, form), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var validate = function validate() {\n    var err = {};\n    return err;\n  }; //Handle page switch for header icons\n\n\n  var myProfile = function myProfile() {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname,\n        userEmail: userEmail\n      }\n    });\n  }; //Go to section to create new listing\n\n\n  var myBooks = function myBooks() {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname,\n        userEmail: userEmail\n      }\n    });\n  };\n\n  var Search = function Search() {\n    Router.push({\n      pathname: '/posts',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname,\n        userEmail: userEmail\n      }\n    });\n  }; //Handle image upload\n\n\n  var image1Upload = function image1Upload(e) {\n    var fileInput = false;\n\n    if (e.target.files[0]) {\n      fileInput = true;\n    }\n\n    if (fileInput) {\n      Resizer.imageFileResizer(event.target.files[0], 300, 300, 'png', 100, 0, function (uri) {\n        console.log(uri); //Update form with new image data\n\n        setForm(_objectSpread(_objectSpread({}, form), {}, {\n          imageFront: {\n            data: uri,\n            contentType: 'image/png'\n          }\n        })); //Update image preview\n\n        setPrevImage(uri);\n      }, 'base64');\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"newBook-page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"book-greeting\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"greeting-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"icon-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/sign-out.png\",\n    alt: \"my image\",\n    className: \"my-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"my-icon-end\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/four-square.png\",\n    alt: \"my books\",\n    className: \"my-icon\",\n    onClick: myProfile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/plus.png\",\n    alt: \"Add book\",\n    className: \"my-icon\",\n    onClick: myBooks,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/search.png\",\n    alt: \"Search\",\n    className: \"my-icon\",\n    onClick: Search,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginTop: '65px',\n      fontSize: '18px',\n      textAlign: 'center',\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 12\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 97\n    }\n  }, \"Add a new book posting.\")))), __jsx(\"form\", {\n    className: \"create-book-form\",\n    onSubmit: handleSubmit,\n    style: {\n      marginTop: '10%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: prevImage,\n    alt: \"default-image\",\n    className: \"image-preview\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"form-group my-group\",\n    style: {\n      marginTop: '8%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control new-book-input\",\n    id: \"exampleInputEmail1\",\n    placeholder: \"Enter book title\",\n    name: \"title\",\n    required: true,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group my-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control new-book-input\",\n    placeholder: \"Enter Author\",\n    name: \"author\",\n    onChange: handleChange,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control new-book-input\",\n    placeholder: \"Price\",\n    name: \"price\",\n    style: {\n      marginTop: '5%'\n    },\n    onChange: handleChange,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    className: \"input-file-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    id: \"input-files\",\n    className: \"input-file-btn\",\n    onChange: image1Upload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 17\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"file-upload\",\n    className: \"input-file-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 15\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 17\n    }\n  }, \"POST\"))));\n}, \"8rwZRG63YvP/y3HX2g5bstTZFRg=\", false, function () {\n  return [useRouter];\n}));\n_c2 = NewBook;\nexport default NewBook;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NewBook$withRouter\");\n$RefreshReg$(_c2, \"NewBook\");","map":{"version":3,"sources":["/home/dhaneshen/Documents/booktrade/unibooktrade/pages/testing.js"],"names":["Link","useState","useEffect","fetch","useRouter","withRouter","Router","Form","Label","Resizer","fileUpload","require","NewBook","router","query","name","id","firstname","userEmail","title","author","ownerID","ownerName","imageFront","price","form","setForm","isSubmitting","setIsSubmitting","errors","setErrors","prevImage","setPrevImage","day","Date","getDay","month","getMonth","console","log","Object","keys","length","createBook","method","headers","body","JSON","stringify","res","push","pathname","mytitle","handleSubmit","e","preventDefault","errs","validate","handleChange","target","value","err","myProfile","myBooks","Search","image1Upload","fileInput","files","imageFileResizer","event","uri","data","contentType","marginTop","fontSize","textAlign","width"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter, withRouter } from 'next/router';\nimport Router from 'next/router';\n\nimport { Form } from 'react-bootstrap';\nimport { Label } from 'semantic-ui-react';\n\n//Image resize\nimport Resizer from 'react-image-file-resizer';\n\nconst fileUpload = require('fuctbase64');\n\nconst NewBook = withRouter(({ router:  { query:{name, id, firstname, userEmail}}} ) => {\n    const [form, setForm] = useState({ title:'', author:'', ownerID:'', ownerName:'', imageFront:'', price:'', userEmail:''}\n    );\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [errors, setErrors] = useState({});\n\n    //state of the preview image\n    const [prevImage, setPrevImage] = useState('/static/default-image.svg');\n    \n\n    const router = useRouter();\n\n    // Get current date\n    \n    //console.log('Date is', date.getDay() )\n    //console.log('Date is', Date().getDate() )\n    //console.log('Date is', date.getMonth()+1 )\n    //var date = new Date().getDay()\n\n    //Get day\n    var day;\n    switch (new Date().getDay()) {\n        case 0:\n          day = \"Sunday\";\n          break;\n        case 1:\n          day = \"Monday\";\n          break;\n        case 2:\n           day = \"Tuesday\";\n          break;\n        case 3:\n          day = \"Wednesday\";\n          break;\n        case 4:\n          day = \"Thursday\";\n          break;\n        case 5:\n          day = \"Friday\";\n          break;\n        case 6:\n          day = \"Saturday\";\n      }\n\n      //Get mobth\n    var month;\n    switch (new Date().getMonth()) {\n        case 0:\n          month = \"December\";\n          break;\n        case 1:\n          month = \"January\";\n          break;\n        case 2:\n           month = \"March\";\n          break;\n        case 3:\n          month = \"April\";\n          break;\n        case 4:\n          month = \"May\";\n          break;\n        case 5:\n          month = \"June\";\n          break;\n        case 6:\n          month = \"July\";\n        case 6:\n            month = \"July\";\n        case 7:\n            month = \"August\";\n        case 8:\n            month = \"September\";\n        case 9:\n            month = \"October\";\n        case 10:\n            month = \"November\";\n        case 11:\n            month = \"December\";\n      }\n\n      console.log(day,  month)\n\n\n    useEffect(() => {\n        if (isSubmitting){\n            if (Object.keys(errors).length ===0){\n                //bookmatch();\n\n                //alert('New book created')\n\n\n                createBook();\n                /*\n                Router.push({\n                    pathname: '/booklist',\n                    query: { \n                            mytitle: form.title,\n                            author: form.author\n                            \n                    }\n                });*/\n              \n            }\n            else{\n                setIsSubmitting(false);\n            }\n        }\n    }, [errors])\n\n\n    //Create new book post\n    const createBook = async () => {\n        try {\n            \n            \n            const res = await fetch('http://localhost:3000/api/books', {\n            //const res = await fetch('https://unibooktrade.vercel.app/api/books', {\n\n                method: 'POST',\n                \n                headers: {\n                    \"Accept\": 'application/json',\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(form)\n               \n            })\n\n            //Redirect to my profile\n            Router.push({\n                pathname: '/myprofile',\n                query: { \n                        mytitle: '',\n                        author: '',\n                        name: name,\n                        id: id,\n                        firstname: firstname,\n                        userEmail:userEmail\n                        \n                }\n            });\n\n        } catch (error) {\n            console.log(error)\n\n        }\n    }\n\n    const handleSubmit = (e) => { \n        e.preventDefault();\n\n        console.log(form.imageFront)\n\n        setForm({\n            ...form,\n                 ownerID: id,\n                 ownerName: name,\n                 userEmail:userEmail\n\n        })\n\n\n        let errs = validate();\n        setErrors(errs);\n        setIsSubmitting(true);\n\n\n    }\n    const handleChange = (e) => { \n        setForm({\n            ...form,\n                [e.target.name]: e.target.value\n            \n        })\n    }\n\n    const validate = () => {\n        let err = {};\n\n        \n        return err;\n    }\n\n        //Handle page switch for header icons\n        const myProfile = () => {\n            Router.push({\n                pathname: '/myprofile',\n                query: { \n                        mytitle: '',\n                        author: '',\n                        name: name,\n                        id: id,\n                        firstname: firstname,\n                        userEmail:userEmail\n                        \n                }\n            });\n        }\n    \n        //Go to section to create new listing\n        const myBooks = () => {\n            Router.push({\n                pathname: '/new',\n                query: { \n                        id: id,\n                        name: name,\n                        firstname: firstname,\n                        userEmail:userEmail\n                        \n                }\n            });\n        }\n\n        const Search = () => {\n            Router.push({\n                pathname: '/posts',\n                query: { \n                        id: id,\n                        name: name,\n                        firstname: firstname,\n                        userEmail:userEmail\n                        \n                }\n            });\n        }\n\n        //Handle image upload\n        const image1Upload = (e) => {\n\n          \n       var fileInput = false;\n       if (e.target.files[0]){\n           fileInput = true;\n       }\n       if (fileInput) {\n           Resizer.imageFileResizer(\n            event.target.files[0],\n            300,\n            300,\n            'png',\n            100,\n            0,\n            uri => {\n                console.log(uri)\n\n                //Update form with new image data\n                setForm({\n                    ...form,\n                 imageFront:{\n                     data: uri, \n                     contentType: 'image/png'\n                 }\n            \n            })\n\n            //Update image preview\n            setPrevImage(uri);\n\n            \n            },\n            'base64'\n\n           );\n       }\n\n       \n        \n        }\n\n        \n           \n\n    return (\n        <div className='newBook-page'>\n            <div className='book-greeting'>\n            <div className='greeting-text'>\n            <div className='icon-box'>\n                    <Link href='/'>\n                        <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\n                    </Link>\n                    \n                    <div className='my-icon-end'>\n                    <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\n                    \n                    <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\n                    \n                    <img src=\"/icons/search.png\" alt=\"Search\" className='my-icon' onClick={Search}/>\n                    </div>\n                    \n\n\n                    \n            </div>\n\n\n            \n           <div style={{ marginTop:'65px', fontSize:'18px', textAlign:'center', width:'100%' }}><p>Add a new book posting.</p></div>\n\n\n                \n            </div>\n                \n        </div>\n           \n        <form className='create-book-form' onSubmit={handleSubmit} style={{ marginTop:'10%' }}>\n        <img src={prevImage} alt='default-image' className='image-preview'/>\n        <div className=\"form-group my-group\" style={{marginTop:'8%'}}>\n                <input \n                    type=\"text\" \n                    className=\"form-control new-book-input\" \n                    id=\"exampleInputEmail1\" \n                    placeholder=\"Enter book title\"\n                    name=\"title\"\n                    required\n                    onChange={handleChange}/>\n                    \n                </div>\n                <div className=\"form-group my-group\">\n                <input \n                    type=\"text\" \n                    className=\"form-control new-book-input\" \n                    placeholder=\"Enter Author\"\n                    name='author'\n                    onChange={handleChange}\n                    required\n                    />\n\n                <input \n                    type=\"text\" \n                    className=\"form-control new-book-input\" \n                    placeholder=\"Price\"\n                    name='price'\n                    style={{ marginTop:'5%' }}\n                    onChange={handleChange}\n                    required\n                    />\n                \n                <label className='input-file-btn'>\n                <input\n                type=\"file\"\n                name=\"file\"\n                id=\"input-files\"\n                className='input-file-btn'\n                onChange={image1Upload}\n              />\n              </label>\n\n              <label htmlFor=\"file-upload\" className=\"input-file-btn\" >\n            </label>\n            \n\n            \n  \n                <button type=\"submit\" className=\"btn btn-primary my-btn\">POST</button>\n                </div>\n                </form>\n            \n        </div>\n    )\n});\n\nexport default NewBook;"]},"metadata":{},"sourceType":"module"}