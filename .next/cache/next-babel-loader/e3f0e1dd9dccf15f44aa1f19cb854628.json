{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\danmo\\\\book-trade\\\\pages\\\\testing.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter, withRouter } from 'next/router';\nimport Router from 'next/router';\nimport { Form } from 'react-bootstrap';\nimport { Label } from 'semantic-ui-react'; //Image resize\n\nimport Resizer from 'react-image-file-resizer';\n\nvar fileUpload = require('fuctbase64');\n\nvar NewBook = withRouter(_c = _s(function (_ref) {\n  _s();\n\n  var _ref$router$query = _ref.router.query,\n      name = _ref$router$query.name,\n      id = _ref$router$query.id,\n      firstname = _ref$router$query.firstname;\n\n  var _useState = useState({\n    title: '',\n    author: '',\n    ownerID: '',\n    ownerName: '',\n    imageFront: ''\n  }),\n      form = _useState[0],\n      setForm = _useState[1];\n\n  var _useState2 = useState(false),\n      isSubmitting = _useState2[0],\n      setIsSubmitting = _useState2[1];\n\n  var _useState3 = useState({}),\n      errors = _useState3[0],\n      setErrors = _useState3[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    if (isSubmitting) {\n      if (Object.keys(errors).length === 0) {\n        //bookmatch();\n        //alert('New book created')\n        createBook();\n        /*\r\n        Router.push({\r\n            pathname: '/booklist',\r\n            query: { \r\n                    mytitle: form.title,\r\n                    author: form.author\r\n                    \r\n            }\r\n        });*/\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n  }, [errors]); //Create new book post\n\n  var createBook = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('http://localhost:3000/api/books', {\n                //const res = await fetch('https://unibooktrade.vercel.app/api/books', {\n                method: 'POST',\n                headers: {\n                  \"Accept\": 'application/json',\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(form)\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 6]]);\n    }));\n\n    return function createBook() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    console.log(form.imageFront);\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      ownerID: id,\n      ownerName: name\n    }));\n    var errs = validate();\n    setErrors(errs);\n    setIsSubmitting(true);\n  };\n\n  var handleChange = function handleChange(e) {\n    setForm(_objectSpread(_objectSpread({}, form), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var validate = function validate() {\n    var err = {};\n    return err;\n  }; //Handle page switch for header icons\n\n\n  var myProfile = function myProfile() {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname\n      }\n    });\n  }; //Go to section to create new listing\n\n\n  var myBooks = function myBooks() {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  var Search = function Search() {\n    Router.push({\n      pathname: '/posts',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  }; //Handle image upload\n\n\n  var image1Upload = function image1Upload(e) {\n    /*\r\n    console.log('changed');\r\n      fileUpload(e)\r\n    .then((data) => {\r\n        console.log('width: '+ data.width);\r\n        \r\n        //Convert image to base 64\r\n        var str = data.base64;\r\n          console.log('image size: '+data.length)\r\n          setForm({\r\n            ...form,\r\n         imageFront:{\r\n             data: str, \r\n             contentType: 'image/png'\r\n         }\r\n    })\r\n    })\r\n    */\n    var fileInput = false;\n\n    if (e.target.files[0]) {\n      fileInput = true;\n    }\n\n    if (fileInput) {\n      Resizer.imageFileResizer(event.target.files[0], 300, 300, 'png', 100, 0, function (uri) {\n        console.log(uri);\n        setForm(_objectSpread(_objectSpread({}, form), {}, {\n          imageFront: {\n            data: uri,\n            contentType: 'image/png'\n          }\n        }));\n      }, 'base64');\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"newBook-page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"book-greeting\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"greeting-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"icon-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/sign-out.png\",\n    alt: \"my image\",\n    className: \"my-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"my-icon-end\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/four-square.png\",\n    alt: \"my books\",\n    className: \"my-icon\",\n    onClick: myProfile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/plus.png\",\n    alt: \"Add book\",\n    className: \"my-icon\",\n    onClick: myBooks,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/search.png\",\n    alt: \"Search\",\n    className: \"my-icon\",\n    onClick: Search,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }))), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }\n  }, \"Name: \", name), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, \"firstName: \", firstname), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 13\n    }\n  }, \"Id: \", id), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }, \"Post a book.\"))), __jsx(\"form\", {\n    className: \"create-book-form\",\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"/static/default-image.png\",\n    alt: \"default-image\",\n    className: \"image-preview\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"form-group my-group\",\n    style: {\n      marginTop: '5%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control new-book-input\",\n    id: \"exampleInputEmail1\",\n    placeholder: \"Enter book title\",\n    name: \"title\",\n    required: true,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group my-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control new-book-input\",\n    placeholder: \"Enter Author\",\n    name: \"author\",\n    onChange: handleChange,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    className: \"input-file-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    id: \"input-files\",\n    className: \"input-file-btn\",\n    onChange: image1Upload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"file-upload\",\n    className: \"input-file-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 15\n    }\n  }, \"Custom Upload\"), __jsx(\"input\", {\n    id: \"file-upload\",\n    type: \"file\",\n    onChange: image1Upload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 17\n    }\n  }, \"POST\"))));\n}, \"VR5D+S3OGRrO+RLilG3EaiBAlpQ=\", false, function () {\n  return [useRouter];\n}));\n_c2 = NewBook;\nexport default NewBook;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NewBook$withRouter\");\n$RefreshReg$(_c2, \"NewBook\");","map":{"version":3,"sources":["C:/Users/danmo/book-trade/pages/testing.js"],"names":["Link","useState","useEffect","fetch","useRouter","withRouter","Router","Form","Label","Resizer","fileUpload","require","NewBook","router","query","name","id","firstname","title","author","ownerID","ownerName","imageFront","form","setForm","isSubmitting","setIsSubmitting","errors","setErrors","Object","keys","length","createBook","method","headers","body","JSON","stringify","res","console","log","handleSubmit","e","preventDefault","errs","validate","handleChange","target","value","err","myProfile","push","pathname","mytitle","myBooks","Search","image1Upload","fileInput","files","imageFileResizer","event","uri","data","contentType","marginTop"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport { useState, useEffect } from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { useRouter, withRouter } from 'next/router';\r\nimport Router from 'next/router';\r\n\r\nimport { Form } from 'react-bootstrap';\r\nimport { Label } from 'semantic-ui-react';\r\n\r\n//Image resize\r\nimport Resizer from 'react-image-file-resizer';\r\n\r\nconst fileUpload = require('fuctbase64');\r\n\r\nconst NewBook = withRouter(({ router:  { query:{name, id, firstname}}} ) => {\r\n    const [form, setForm] = useState({ title:'', author:'', ownerID:'', ownerName:'', imageFront:''}\r\n    );\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const router = useRouter();\r\n\r\n\r\n    useEffect(() => {\r\n        if (isSubmitting){\r\n            if (Object.keys(errors).length ===0){\r\n                //bookmatch();\r\n\r\n                //alert('New book created')\r\n\r\n\r\n                createBook();\r\n                /*\r\n                Router.push({\r\n                    pathname: '/booklist',\r\n                    query: { \r\n                            mytitle: form.title,\r\n                            author: form.author\r\n                            \r\n                    }\r\n                });*/\r\n              \r\n            }\r\n            else{\r\n                setIsSubmitting(false);\r\n            }\r\n        }\r\n    }, [errors])\r\n\r\n\r\n    //Create new book post\r\n    const createBook = async () => {\r\n        try {\r\n            \r\n            \r\n            const res = await fetch('http://localhost:3000/api/books', {\r\n            //const res = await fetch('https://unibooktrade.vercel.app/api/books', {\r\n\r\n                method: 'POST',\r\n                \r\n                headers: {\r\n                    \"Accept\": 'application/json',\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(form)\r\n               \r\n            })\r\n            \r\n            \r\n            \r\n            //Redirect to profile\r\n            /*\r\n            Router.push({\r\n                pathname: '/myprofile',\r\n                query: { \r\n                        id: id,\r\n                        name: name,\r\n                        firstname: firstname\r\n                        \r\n                }\r\n            });\r\n            */\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault();\r\n\r\n        console.log(form.imageFront)\r\n\r\n        setForm({\r\n            ...form,\r\n                 ownerID: id,\r\n                 ownerName: name,\r\n                \r\n\r\n        })\r\n\r\n\r\n        let errs = validate();\r\n        setErrors(errs);\r\n        setIsSubmitting(true);\r\n\r\n\r\n    }\r\n    const handleChange = (e) => { \r\n        setForm({\r\n            ...form,\r\n                [e.target.name]: e.target.value\r\n            \r\n        })\r\n    }\r\n\r\n    const validate = () => {\r\n        let err = {};\r\n\r\n        \r\n        return err;\r\n    }\r\n\r\n        //Handle page switch for header icons\r\n        const myProfile = () => {\r\n            Router.push({\r\n                pathname: '/myprofile',\r\n                query: { \r\n                        mytitle: '',\r\n                        author: '',\r\n                        name: name,\r\n                        id: id,\r\n                        firstname: firstname\r\n                        \r\n                }\r\n            });\r\n        }\r\n    \r\n        //Go to section to create new listing\r\n        const myBooks = () => {\r\n            Router.push({\r\n                pathname: '/new',\r\n                query: { \r\n                        id: id,\r\n                        name: name,\r\n                        firstname: firstname\r\n                        \r\n                }\r\n            });\r\n        }\r\n\r\n        const Search = () => {\r\n            Router.push({\r\n                pathname: '/posts',\r\n                query: { \r\n                        id: id,\r\n                        name: name,\r\n                        firstname: firstname\r\n                        \r\n                }\r\n            });\r\n        }\r\n\r\n        //Handle image upload\r\n        const image1Upload = (e) => {\r\n            /*\r\n            console.log('changed');\r\n\r\n            fileUpload(e)\r\n            .then((data) => {\r\n                console.log('width: '+ data.width);\r\n                \r\n                //Convert image to base 64\r\n                var str = data.base64;\r\n\r\n                console.log('image size: '+data.length)\r\n\r\n                setForm({\r\n                    ...form,\r\n                 imageFront:{\r\n                     data: str, \r\n                     contentType: 'image/png'\r\n                 }\r\n\r\n        })\r\n })\r\n\r\n        */\r\n       var fileInput = false;\r\n       if (e.target.files[0]){\r\n           fileInput = true;\r\n       }\r\n       if (fileInput) {\r\n           Resizer.imageFileResizer(\r\n            event.target.files[0],\r\n            300,\r\n            300,\r\n            'png',\r\n            100,\r\n            0,\r\n            uri => {\r\n                console.log(uri)\r\n\r\n                setForm({\r\n                    ...form,\r\n                 imageFront:{\r\n                     data: uri, \r\n                     contentType: 'image/png'\r\n                 }\r\n            \r\n            })\r\n            },\r\n            'base64'\r\n\r\n           );\r\n       }\r\n\r\n       \r\n        \r\n        }\r\n\r\n        \r\n           \r\n\r\n    return (\r\n        <div className='newBook-page'>\r\n            <div className='book-greeting'>\r\n            <div className='greeting-text'>\r\n            <div className='icon-box'>\r\n                    <Link href='/'>\r\n                        <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\r\n                    </Link>\r\n                    \r\n                    <div className='my-icon-end'>\r\n                    <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\r\n                    \r\n                    <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\r\n                    \r\n                    <img src=\"/icons/search.png\" alt=\"Search\" className='my-icon' onClick={Search}/>\r\n                    </div>\r\n                    \r\n\r\n\r\n                    \r\n            </div>\r\n\r\n\r\n            <p>Name: {name}</p>\r\n            <p>firstName: {firstname}</p>\r\n            <p>Id: {id}</p>\r\n                <p>Post a book.\r\n                </p>\r\n\r\n\r\n                \r\n            </div>\r\n                \r\n        </div>\r\n           \r\n        <form className='create-book-form' onSubmit={handleSubmit}>\r\n        <img src=\"/static/default-image.png\" alt='default-image' className='image-preview'/>\r\n        <div className=\"form-group my-group\" style={{marginTop:'5%'}}>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control new-book-input\" \r\n                    id=\"exampleInputEmail1\" \r\n                    placeholder=\"Enter book title\"\r\n                    name=\"title\"\r\n                    required\r\n                    onChange={handleChange}/>\r\n                    \r\n                </div>\r\n                <div className=\"form-group my-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control new-book-input\" \r\n                    placeholder=\"Enter Author\"\r\n                    name='author'\r\n                    onChange={handleChange}\r\n                    required\r\n                    />\r\n                \r\n                <label className='input-file-btn'>\r\n                <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                id=\"input-files\"\r\n                className='input-file-btn'\r\n                onChange={image1Upload}\r\n              />\r\n              </label>\r\n\r\n              <label htmlFor=\"file-upload\" className=\"input-file-btn\" >\r\n                Custom Upload\r\n            </label>\r\n            \r\n            <input id=\"file-upload\" type=\"file\" onChange={image1Upload}/>\r\n\r\n            \r\n  \r\n                <button type=\"submit\" className=\"btn btn-primary my-btn\">POST</button>\r\n                </div>\r\n                </form>\r\n            \r\n        </div>\r\n    )\r\n});\r\n\r\nexport default NewBook;"]},"metadata":{},"sourceType":"module"}