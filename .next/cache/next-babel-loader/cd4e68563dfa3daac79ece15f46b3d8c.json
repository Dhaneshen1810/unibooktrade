{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dhaneshen/Documents/booktrade/unibooktrade/pages/new.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter, withRouter } from 'next/router';\nimport Router from 'next/router';\nimport { Form } from 'react-bootstrap';\nimport { Label } from 'semantic-ui-react'; //Image resize\n\nimport Resizer from 'react-image-file-resizer';\n\nvar fileUpload = require('fuctbase64');\n\nvar NewBook = withRouter(_c = _s(function (_ref) {\n  _s();\n\n  var _ref$router$query = _ref.router.query,\n      name = _ref$router$query.name,\n      id = _ref$router$query.id,\n      firstname = _ref$router$query.firstname;\n\n  var _useState = useState({\n    title: '',\n    author: '',\n    ownerID: '',\n    ownerName: '',\n    imageFront: ''\n  }),\n      form = _useState[0],\n      setForm = _useState[1];\n\n  var _useState2 = useState(false),\n      isSubmitting = _useState2[0],\n      setIsSubmitting = _useState2[1];\n\n  var _useState3 = useState({}),\n      errors = _useState3[0],\n      setErrors = _useState3[1]; //state of the preview image\n\n\n  var _useState4 = useState('/static/default-image.svg'),\n      prevImage = _useState4[0],\n      setPrevImage = _useState4[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    if (isSubmitting) {\n      if (Object.keys(errors).length === 0) {\n        //bookmatch();\n        //alert('New book created')\n        createBook();\n        /*\n        Router.push({\n            pathname: '/booklist',\n            query: { \n                    mytitle: form.title,\n                    author: form.author\n                    \n            }\n        });*/\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n  }, [errors]); //Create new book post\n\n  var createBook = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('https://unibooktrade.vercel.app/api/books', {\n                method: 'POST',\n                headers: {\n                  \"Accept\": 'application/json',\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(form)\n              });\n\n            case 3:\n              res = _context.sent;\n              //Redirect to my profile\n              Router.push({\n                pathname: '/myprofile',\n                query: {\n                  mytitle: '',\n                  author: '',\n                  name: name,\n                  id: id,\n                  firstname: firstname\n                }\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n\n    return function createBook() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    console.log(form.imageFront);\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      ownerID: id,\n      ownerName: name\n    }));\n    var errs = validate();\n    setErrors(errs);\n    setIsSubmitting(true);\n  };\n\n  var handleChange = function handleChange(e) {\n    setForm(_objectSpread(_objectSpread({}, form), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var validate = function validate() {\n    var err = {};\n    return err;\n  }; //Handle page switch for header icons\n\n\n  var myProfile = function myProfile() {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname\n      }\n    });\n  }; //Go to section to create new listing\n\n\n  var myBooks = function myBooks() {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  var Search = function Search() {\n    Router.push({\n      pathname: '/posts',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  }; //Handle image upload\n\n\n  var image1Upload = function image1Upload(e) {\n    var fileInput = false;\n\n    if (e.target.files[0]) {\n      fileInput = true;\n    }\n\n    if (fileInput) {\n      Resizer.imageFileResizer(event.target.files[0], 300, 300, 'png', 100, 0, function (uri) {\n        console.log(uri); //Update form with new image data\n\n        setForm(_objectSpread(_objectSpread({}, form), {}, {\n          imageFront: {\n            data: uri,\n            contentType: 'image/png'\n          }\n        })); //Update image preview\n\n        setPrevImage(uri);\n      }, 'base64');\n    }\n  };\n\n  return __jsx(\"div\", {\n    className: \"newBook-page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"book-greeting\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"greeting-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"icon-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/sign-out.png\",\n    alt: \"my image\",\n    className: \"my-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"my-icon-end\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/four-square.png\",\n    alt: \"my books\",\n    className: \"my-icon\",\n    onClick: myProfile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/plus.png\",\n    alt: \"Add book\",\n    className: \"my-icon\",\n    onClick: myBooks,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/search.png\",\n    alt: \"Search\",\n    className: \"my-icon\",\n    onClick: Search,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginTop: '65px',\n      fontSize: '18px',\n      textAlign: 'center',\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 12\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 97\n    }\n  }, \"Add a new book posting.\")))), __jsx(\"form\", {\n    className: \"create-book-form\",\n    onSubmit: handleSubmit,\n    style: {\n      marginTop: '3%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: prevImage,\n    alt: \"default-image\",\n    className: \"image-preview\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"form-group my-group\",\n    style: {\n      marginTop: '8%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control new-book-input\",\n    id: \"exampleInputEmail1\",\n    placeholder: \"Enter book title\",\n    name: \"title\",\n    required: true,\n    onChange: handleChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group my-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control new-book-input\",\n    placeholder: \"Enter Author\",\n    name: \"author\",\n    onChange: handleChange,\n    required: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    className: \"input-file-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    id: \"input-files\",\n    className: \"input-file-btn\",\n    onChange: image1Upload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 17\n    }\n  })), __jsx(\"label\", {\n    htmlFor: \"file-upload\",\n    className: \"input-file-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-btn\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 17\n    }\n  }, \"POST\"))));\n}, \"f+/KVJyFvrHYAVXZQAByHNgbt/I=\", false, function () {\n  return [useRouter];\n}));\n_c2 = NewBook;\nexport default NewBook;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NewBook$withRouter\");\n$RefreshReg$(_c2, \"NewBook\");","map":{"version":3,"sources":["/home/dhaneshen/Documents/booktrade/unibooktrade/pages/new.js"],"names":["Link","useState","useEffect","fetch","useRouter","withRouter","Router","Form","Label","Resizer","fileUpload","require","NewBook","router","query","name","id","firstname","title","author","ownerID","ownerName","imageFront","form","setForm","isSubmitting","setIsSubmitting","errors","setErrors","prevImage","setPrevImage","Object","keys","length","createBook","method","headers","body","JSON","stringify","res","push","pathname","mytitle","console","log","handleSubmit","e","preventDefault","errs","validate","handleChange","target","value","err","myProfile","myBooks","Search","image1Upload","fileInput","files","imageFileResizer","event","uri","data","contentType","marginTop","fontSize","textAlign","width"],"mappings":"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","sourcesContent":["import Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter, withRouter } from 'next/router';\nimport Router from 'next/router';\n\nimport { Form } from 'react-bootstrap';\nimport { Label } from 'semantic-ui-react';\n\n//Image resize\nimport Resizer from 'react-image-file-resizer';\n\nconst fileUpload = require('fuctbase64');\n\nconst NewBook = withRouter(({ router:  { query:{name, id, firstname}}} ) => {\n    const [form, setForm] = useState({ title:'', author:'', ownerID:'', ownerName:'', imageFront:''}\n    );\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    const [errors, setErrors] = useState({});\n\n    //state of the preview image\n    const [prevImage, setPrevImage] = useState('/static/default-image.svg');\n\n    const router = useRouter();\n\n\n    useEffect(() => {\n        if (isSubmitting){\n            if (Object.keys(errors).length ===0){\n                //bookmatch();\n\n                //alert('New book created')\n\n\n                createBook();\n                /*\n                Router.push({\n                    pathname: '/booklist',\n                    query: { \n                            mytitle: form.title,\n                            author: form.author\n                            \n                    }\n                });*/\n              \n            }\n            else{\n                setIsSubmitting(false);\n            }\n        }\n    }, [errors])\n\n\n    //Create new book post\n    const createBook = async () => {\n        try {\n            \n            \n            //const res = await fetch('http://localhost:3000/api/books', {\n            const res = await fetch('https://unibooktrade.vercel.app/api/books', {\n\n                method: 'POST',\n                \n                headers: {\n                    \"Accept\": 'application/json',\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(form)\n               \n            })\n\n            //Redirect to my profile\n            Router.push({\n                pathname: '/myprofile',\n                query: { \n                        mytitle: '',\n                        author: '',\n                        name: name,\n                        id: id,\n                        firstname: firstname\n                        \n                }\n            });\n\n        } catch (error) {\n            console.log(error)\n\n        }\n    }\n\n    const handleSubmit = (e) => { \n        e.preventDefault();\n\n        console.log(form.imageFront)\n\n        setForm({\n            ...form,\n                 ownerID: id,\n                 ownerName: name,\n                \n\n        })\n\n\n        let errs = validate();\n        setErrors(errs);\n        setIsSubmitting(true);\n\n\n    }\n    const handleChange = (e) => { \n        setForm({\n            ...form,\n                [e.target.name]: e.target.value\n            \n        })\n    }\n\n    const validate = () => {\n        let err = {};\n\n        \n        return err;\n    }\n\n        //Handle page switch for header icons\n        const myProfile = () => {\n            Router.push({\n                pathname: '/myprofile',\n                query: { \n                        mytitle: '',\n                        author: '',\n                        name: name,\n                        id: id,\n                        firstname: firstname\n                        \n                }\n            });\n        }\n    \n        //Go to section to create new listing\n        const myBooks = () => {\n            Router.push({\n                pathname: '/new',\n                query: { \n                        id: id,\n                        name: name,\n                        firstname: firstname\n                        \n                }\n            });\n        }\n\n        const Search = () => {\n            Router.push({\n                pathname: '/posts',\n                query: { \n                        id: id,\n                        name: name,\n                        firstname: firstname\n                        \n                }\n            });\n        }\n\n        //Handle image upload\n        const image1Upload = (e) => {\n\n            \n\n          \n       var fileInput = false;\n       if (e.target.files[0]){\n           fileInput = true;\n       }\n       if (fileInput) {\n           Resizer.imageFileResizer(\n            event.target.files[0],\n            300,\n            300,\n            'png',\n            100,\n            0,\n            uri => {\n                console.log(uri)\n\n                //Update form with new image data\n                setForm({\n                    ...form,\n                 imageFront:{\n                     data: uri, \n                     contentType: 'image/png'\n                 }\n            \n            })\n\n            //Update image preview\n            setPrevImage(uri);\n\n            \n            },\n            'base64'\n\n           );\n       }\n\n       \n        \n        }\n\n        \n           \n\n    return (\n        <div className='newBook-page'>\n            <div className='book-greeting'>\n            <div className='greeting-text'>\n            <div className='icon-box'>\n                    <Link href='/'>\n                        <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\n                    </Link>\n                    \n                    <div className='my-icon-end'>\n                    <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\n                    \n                    <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\n                    \n                    <img src=\"/icons/search.png\" alt=\"Search\" className='my-icon' onClick={Search}/>\n                    </div>\n                    \n\n\n                    \n            </div>\n\n\n            \n           <div style={{ marginTop:'65px', fontSize:'18px', textAlign:'center', width:'100%' }}><p>Add a new book posting.</p></div>\n\n\n                \n            </div>\n                \n        </div>\n           \n        <form className='create-book-form' onSubmit={handleSubmit} style={{ marginTop:'3%' }}>\n        <img src={prevImage} alt='default-image' className='image-preview'/>\n        <div className=\"form-group my-group\" style={{marginTop:'8%'}}>\n                <input \n                    type=\"text\" \n                    className=\"form-control new-book-input\" \n                    id=\"exampleInputEmail1\" \n                    placeholder=\"Enter book title\"\n                    name=\"title\"\n                    required\n                    onChange={handleChange}/>\n                    \n                </div>\n                <div className=\"form-group my-group\">\n                <input \n                    type=\"text\" \n                    className=\"form-control new-book-input\" \n                    placeholder=\"Enter Author\"\n                    name='author'\n                    onChange={handleChange}\n                    required\n                    />\n                \n                <label className='input-file-btn'>\n                <input\n                type=\"file\"\n                name=\"file\"\n                id=\"input-files\"\n                className='input-file-btn'\n                onChange={image1Upload}\n              />\n              </label>\n\n              <label htmlFor=\"file-upload\" className=\"input-file-btn\" >\n            </label>\n            \n\n            \n  \n                <button type=\"submit\" className=\"btn btn-primary my-btn\">POST</button>\n                </div>\n                </form>\n            \n        </div>\n    )\n});\n\nexport default NewBook;"]},"metadata":{},"sourceType":"module"}