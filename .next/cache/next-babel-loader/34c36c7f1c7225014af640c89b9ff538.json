{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danmo\\\\book-trade\\\\pages\\\\posts.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { withRouter } from \"next/router\";\nimport Link from 'next/link';\nimport React, { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\nimport { useRouter } from 'next/router';\nimport Cors from 'cors';\nconst posts = withRouter(({\n  router: {\n    query: {\n      name,\n      id,\n      firstName\n    }\n  },\n  books\n}) => {\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    title: ''\n  });\n  const {\n    0: isSubmitting,\n    1: setIsSubmitting\n  } = useState(false);\n  const {\n    0: errors,\n    1: setErrors\n  } = useState();\n  const router = useRouter; // Initializing the cors middleware\n\n  const cors = Cors({\n    methods: ['GET', 'HEAD']\n  });\n  useEffect(() => {\n    // We are directed to the booklist page\n    // Forwarding the following data to booklist\n    // Fullname, firstname, id, book author and book title\n    if (isSubmitting) {\n      if (Object.keys(errors).length === 0) {\n        Router.push({\n          pathname: '/booklist',\n          query: {\n            mytitle: form.title,\n            author: form.author,\n            name: name,\n            id: id,\n            firstname: firstName\n          }\n        });\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n  }, [errors]); // When th user submits\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errs = validate();\n    setErrors(errs);\n    setIsSubmitting(true);\n  }; // Handle changes made to the input box\n  // That is, when the user types in the box\n\n\n  const handleChange = e => {\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const validate = () => {\n    let err = {};\n    return err;\n  }; // User chooses to view all available books\n\n\n  const viewAll = () => {\n    Router.push({\n      pathname: '/booklist',\n      query: {\n        mytitle: '',\n        author: ''\n      }\n    });\n  };\n\n  const myProfile = () => {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstName\n      }\n    });\n  };\n\n  const myBooks = () => {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstName\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"option-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"book-greeting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"greeting-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"icon-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/sign-out.png\",\n    alt: \"my image\",\n    className: \"my-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"my-icon-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/four-square.png\",\n    alt: \"my books\",\n    className: \"my-icon\",\n    onClick: myProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/plus.png\",\n    alt: \"Add book\",\n    className: \"my-icon\",\n    onClick: myBooks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }))), __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }, \"Hi, \", firstName, \"!\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, \"Find your book by entering the \", __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, \"Author\"), \" or \", __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 42\n    }\n  }, \"Book name\"), \" below.\")), __jsx(\"form\", {\n    className: \"my-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group my-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, \"Title\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control my-form-control\",\n    id: \"exampleInputEmail1\",\n    placeholder: \"Enter book title\",\n    name: \"title\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  })), __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  }, \"OR\"), __jsx(\"div\", {\n    className: \"form-group my-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, \"Author\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Enter Author\",\n    name: \"author\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 17\n    }\n  }, \"Search\"))), __jsx(\"div\", {\n    className: \"my-divider\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    className: \"btn btn-success my-btn-viewall\",\n    onClick: viewAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }, \"View all\")));\n});\nexport default posts;","map":{"version":3,"sources":["C:/Users/danmo/book-trade/pages/posts.js"],"names":["withRouter","Link","React","useState","useEffect","fetch","Router","useRouter","Cors","posts","router","query","name","id","firstName","books","form","setForm","title","isSubmitting","setIsSubmitting","errors","setErrors","cors","methods","Object","keys","length","push","pathname","mytitle","author","firstname","handleSubmit","e","preventDefault","errs","validate","handleChange","target","value","err","viewAll","myProfile","myBooks"],"mappings":"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","sourcesContent":["import { withRouter } from \"next/router\";\r\nimport Link from 'next/link';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nimport Router from 'next/router';\r\nimport { useRouter } from 'next/router';\r\n\r\nimport Cors from 'cors';\r\n\r\nconst posts = withRouter(({ router:  { query:{name, id, firstName}}, books} ) => {\r\n\r\n        const [form, setForm] = useState({ title: '' });\r\n        const [isSubmitting, setIsSubmitting] = useState(false);\r\n        const [errors, setErrors] = useState();\r\n        const router = useRouter;\r\n\r\n        // Initializing the cors middleware\r\n        const cors = Cors({\r\n        methods: ['GET', 'HEAD'],\r\n    })\r\n\r\n        \r\n        useEffect(() => {\r\n\r\n            // We are directed to the booklist page\r\n            // Forwarding the following data to booklist\r\n            // Fullname, firstname, id, book author and book title\r\n            if (isSubmitting){\r\n\r\n                if (Object.keys(errors).length ===0){\r\n\r\n                    Router.push({\r\n                        pathname: '/booklist',\r\n                        query: { \r\n                                mytitle: form.title,\r\n                                author: form.author,\r\n                                name: name,\r\n                                id: id,\r\n                                firstname: firstName\r\n                                \r\n                        }\r\n                    });\r\n                  \r\n                }\r\n                else{\r\n                    setIsSubmitting(false);\r\n                }\r\n            }\r\n        }, [errors])\r\n\r\n\r\n        // When th user submits\r\n        const handleSubmit = (e) => { \r\n            e.preventDefault();\r\n            let errs = validate();\r\n            setErrors(errs);\r\n            setIsSubmitting(true);\r\n\r\n\r\n        }\r\n\r\n        // Handle changes made to the input box\r\n        // That is, when the user types in the box\r\n        const handleChange = (e) => { \r\n            setForm({\r\n                ...form,\r\n                    [e.target.name]: e.target.value\r\n                \r\n            })\r\n        }\r\n\r\n        const validate = () => {\r\n            let err = {};\r\n\r\n            \r\n            return err;\r\n        }\r\n\r\n\r\n        // User chooses to view all available books\r\n        const viewAll = () => {\r\n\r\n            Router.push({\r\n                pathname: '/booklist',\r\n                query: { \r\n                        mytitle: '',\r\n                        author: ''\r\n                        \r\n                }\r\n            });\r\n        }\r\n\r\n        const myProfile = () => {\r\n            Router.push({\r\n                pathname: '/myprofile',\r\n                query: { \r\n                        mytitle: '',\r\n                        author: '',\r\n                        name: name,\r\n                        id: id,\r\n                        firstname: firstName\r\n                        \r\n                }\r\n            });\r\n        }\r\n\r\n        const myBooks = () => {\r\n            Router.push({\r\n                pathname: '/new',\r\n                query: { \r\n                        id: id,\r\n                        name: name,\r\n                        firstname: firstName\r\n                        \r\n                }\r\n            });\r\n        }\r\n\r\n    return(\r\n    <div className='option-page'>\r\n\r\n        <div className='book-greeting'>\r\n            <div className='greeting-text'>\r\n                <div className='icon-box'>\r\n                    <Link href='/'>\r\n                        <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\r\n                    </Link>\r\n                    \r\n                    <div className='my-icon-end'>\r\n                    <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\r\n                    \r\n                    <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\r\n                    \r\n                    \r\n                    </div>\r\n                    \r\n\r\n\r\n                    \r\n                </div>\r\n\r\n                \r\n                <h2>Hi, {firstName}!</h2>\r\n\r\n                <p>Find your book by entering \r\n                    the <b>Author</b> or <b>Book name</b> below.\r\n                </p>\r\n            </div>\r\n                \r\n            <form className='my-form' onSubmit={handleSubmit}>\r\n                <div className=\"form-group my-group\">\r\n                <label>Title</label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control my-form-control\" \r\n                    id=\"exampleInputEmail1\" \r\n                    placeholder=\"Enter book title\"\r\n                    name=\"title\"\r\n                    onChange={handleChange}/>\r\n                    \r\n                </div>\r\n                <b>OR</b>\r\n                <div className=\"form-group my-group\">\r\n                <label>Author</label>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control\" \r\n                    placeholder=\"Enter Author\"\r\n                    name='author'\r\n                    onChange={handleChange}\r\n                    />\r\n                \r\n  \r\n                <button type=\"submit\" className=\"btn btn-primary my-btn\">Search</button>\r\n                </div>\r\n                </form>\r\n\r\n                <div className='my-divider'></div>\r\n                    <div className='btn btn-success my-btn-viewall' onClick={viewAll}>View all</div>\r\n            \r\n        </div>\r\n\r\n\r\n        \r\n    </div>\r\n\r\n    )\r\n    \r\n});\r\n  \r\n\r\n\r\n\r\n    \r\nexport default posts;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}