{"ast":null,"code":"var _jsxFileName = \"/home/dhaneshen/Documents/booktrade/unibooktrade/pages/testing.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from \"next/router\";\nimport Router from \"next/router\";\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport fetch from 'isomorphic-unfetch';\nimport { useState, useEffect } from \"react\";\nconst posts = withRouter(({\n  router: {\n    query: {\n      name,\n      id,\n      firstname,\n      mytitle,\n      author,\n      userEmail\n    }\n  },\n  books\n}) => {\n  // User chooses to view all available books\n  const viewAll = () => {\n    Router.push({\n      pathname: '/booklist',\n      query: {\n        name: name,\n        id: id,\n        firstname: firstname,\n        mytitle: '',\n        author: '',\n        userEmail: userEmail\n      }\n    });\n  }; // Redirect to myprofile\n\n\n  const myProfile = () => {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname,\n        userEmail: userEmail\n      }\n    });\n  }; // Redirect to new\n\n\n  const myBooks = () => {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname,\n        userEmail: userEmail\n      }\n    });\n  }; // Redirect to posts\n\n\n  const Search = () => {\n    Router.push({\n      pathname: '/posts',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname,\n        userEmail: userEmail\n      }\n    });\n  }; // Redirect to contact page\n  // Information transferred are user, book and bookowner information\n\n\n  const Contact = (bookID, bookOwnerName, bookTitle, bookOwnerID, ownerEmail) => {\n    var splitFullName = bookOwnerName.split(\" \");\n    var ownerFirstName = splitFullName[0];\n    var ownerEmail = ownerEmail;\n    console.log(ownerEmail);\n    Router.push({\n      pathname: '/contact',\n      query: {\n        //User information\n        id: id,\n        name: name,\n        firstname: firstname,\n        //Book information\n        bookID: bookID,\n        bookTitle: bookTitle,\n        //book owner information\n        bookOwnerName: bookOwnerName,\n        ownerFirstName: ownerFirstName,\n        bookOwnerID: bookOwnerID,\n        userEmail: userEmail,\n        ownerEmail: ownerEmail\n      }\n    });\n  };\n\n  const aboutUs = () => {\n    Router.push({\n      pathname: '/aboutus',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname,\n        userEmail: userEmail\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"booklist-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Books available, MacEwan Book Trade\")), __jsx(\"div\", {\n    className: \"book-greeting\",\n    style: {\n      padding: '5px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"greeting-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"icon-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/sign-out.png\",\n    alt: \"my image\",\n    className: \"my-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  })), __jsx(\"img\", {\n    onClick: aboutUs,\n    src: \"/icons/info.svg\",\n    alt: \"About us\",\n    className: \"my-icon btn-aboutUs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: \"my-icon-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/four-square.png\",\n    alt: \"my books\",\n    className: \"my-icon\",\n    onClick: myProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/plus.png\",\n    alt: \"Add book\",\n    className: \"my-icon\",\n    onClick: myBooks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/search.png\",\n    alt: \"Search\",\n    className: \"my-icon\",\n    onClick: Search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }))), __jsx(\"p\", {\n    className: \"icon-box-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  }, \"This is a collection of all the books matching your search\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }\n  }), \"We currently have \", books.length, \" available\"))), __jsx(\"div\", {\n    className: \"book-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }, books.map(book => {\n    //processing image data\n    var imageData;\n\n    if (book.imageFront) {\n      imageData = book.imageFront.data;\n    } else {\n      //using dummy data if image data is not present\n      imageData = 'eweffwf';\n    }\n\n    return __jsx(\"div\", {\n      key: book._id,\n      className: \"book-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"item-section1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: imageData,\n      className: \"item-pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      className: \"item-section2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }, __jsx(\"p\", {\n      style: {\n        color: 'rgb(128,0,0)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 61\n      }\n    }, book.title)), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 25\n      }\n    }, book.author), __jsx(\"p\", {\n      style: {\n        fontSize: '18px',\n        color: 'rgb(107, 177, 2)'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, \"$\", book.price), __jsx(\"a\", {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => Contact(book._id, book.ownerName, book.title, book.ownerID, book.userEmail),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 25\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 149\n      }\n    }, \"Contact \", book.ownerName))));\n  })));\n}); // Get content from database\n\nposts.getInitialProps = async ctx => {\n  //const res = await fetch('https://usedbooksexchange.com/api/books', {\n  const res = await fetch('http://localhost:3000/api/books', {\n    headers: {\n      title: ctx.query.mytitle,\n      author: ctx.query.author\n    }\n  });\n  const {\n    data\n  } = await res.json();\n  return {\n    books: data\n  };\n};\n\nexport default posts;","map":{"version":3,"sources":["/home/dhaneshen/Documents/booktrade/unibooktrade/pages/testing.js"],"names":["withRouter","Router","Link","Head","fetch","useState","useEffect","posts","router","query","name","id","firstname","mytitle","author","userEmail","books","viewAll","push","pathname","myProfile","myBooks","Search","Contact","bookID","bookOwnerName","bookTitle","bookOwnerID","ownerEmail","splitFullName","split","ownerFirstName","console","log","aboutUs","padding","length","map","book","imageData","imageFront","data","_id","color","title","fontSize","price","cursor","ownerName","ownerID","getInitialProps","ctx","res","headers","json"],"mappings":"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","sourcesContent":["import { withRouter } from \"next/router\";\nimport Router from \"next/router\";\nimport Link from 'next/link';\nimport Head from 'next/head'\nimport fetch from 'isomorphic-unfetch';\nimport { useState, useEffect } from \"react\";\n\n\n\n\nconst posts = withRouter(({ router:  { query:{name, id, firstname, mytitle, author, userEmail}}, books} ) => {\n    \n\n    // User chooses to view all available books\n    const viewAll = () => {\n\n        Router.push({\n            pathname: '/booklist',\n            query: { \n                name: name,\n                id: id,\n                firstname: firstname,\n                mytitle: '',\n                author: '',\n                userEmail:userEmail\n                    \n            }\n        });\n    }\n\n    // Redirect to myprofile\n    const myProfile = () => {\n        Router.push({\n            pathname: '/myprofile',\n            query: { \n                    mytitle: '',\n                    author: '',\n                    name: name,\n                    id: id,\n                    firstname: firstname,\n                    userEmail:userEmail\n                    \n            }\n        });\n    }\n\n    // Redirect to new\n    const myBooks = () => {\n        Router.push({\n            pathname: '/new',\n            query: { \n                    id: id,\n                    name: name,\n                    firstname: firstname,\n                    userEmail:userEmail\n                    \n            }\n        });\n    }\n\n    // Redirect to posts\n    const Search = () => {\n        Router.push({\n            pathname: '/posts',\n            query: { \n                    id: id,\n                    name: name,\n                    firstname: firstname,\n                    userEmail:userEmail\n                    \n            }\n        });\n    }\n\n    // Redirect to contact page\n    // Information transferred are user, book and bookowner information\n    const Contact = (bookID, bookOwnerName, bookTitle, bookOwnerID, ownerEmail) => {\n        var splitFullName = bookOwnerName.split(\" \");\n        var ownerFirstName = splitFullName[0];\n\n        var ownerEmail = ownerEmail;\n        console.log(ownerEmail);\n\n        Router.push({\n            pathname: '/contact',\n            query: { \n                    //User information\n                    id: id,\n                    name: name,\n                    firstname: firstname,\n                    //Book information\n                    bookID: bookID,\n                    bookTitle: bookTitle,\n                    //book owner information\n                    bookOwnerName: bookOwnerName,\n                    ownerFirstName: ownerFirstName,\n                    bookOwnerID: bookOwnerID,\n                    userEmail:userEmail,\n                    ownerEmail: ownerEmail\n            }\n        });\n    }\n\n    const aboutUs = () => {\n        Router.push({\n            pathname: '/aboutus',\n            query: { \n                    id: id,\n                    name: name,\n                    firstname: firstname,\n                    userEmail:userEmail\n                    \n            }\n        });\n    }\n\n\n    return(\n\n    <div className='booklist-page'>\n        <Head>\n            <title>Books available, MacEwan Book Trade</title>\n        </Head>\n\n\n        <div className='book-greeting' style={{ padding:'5px' }}>\n            <div className='greeting-text'>\n            <div className='icon-box'>\n                    <Link href='/'>\n                        <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\n                    </Link>\n                    <img onClick={aboutUs} src=\"/icons/info.svg\" alt=\"About us\" className='my-icon btn-aboutUs'/>\n\n                    \n                    <div className='my-icon-end'>\n                    <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\n                    \n                    <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\n                    <img src=\"/icons/search.png\" alt=\"Search\" className='my-icon' onClick={Search}/>\n                    \n                    </div>\n                    \n                </div>\n\n\n                    \n                <p className='icon-box-text'>This is a collection of all the books matching your search \n                \n                <br/>We currently have {books.length} available</p>\n                \n            </div>\n            \n        </div>\n        \n        <div className='book-list'>\n              \n      \n        {books.map( book => {\n            //processing image data\n            var imageData;\n\n            if (book.imageFront){\n                \n                imageData = book.imageFront.data;\n            }\n            else{\n                //using dummy data if image data is not present\n                imageData='eweffwf';\n            }\n            \n    \n                return (\n\n                    <div key={book._id} className='book-item'>\n                        <div className='item-section1'>\n                        <img src={imageData}  className='item-pic'/>\n                        </div>\n                        <div className='item-section2'>\n                        <p style={{ color:'rgb(128,0,0)' }}><b>{book.title}</b></p>\n                        <p>{book.author}</p>\n                        <p style={{ fontSize:'18px', color:'rgb(107, 177, 2)' }}>${book.price}</p>\n                        <a style={{ cursor:'pointer' }} onClick={() => Contact(book._id, book.ownerName, book.title, book.ownerID, book.userEmail)}><b>Contact {book.ownerName}</b></a>\n                        </div>\n                        \n                    </div>\n                )\n        \n            \n        })}\n\n    \n    \n        </div>        \n    </div>\n)\n\n\n\n});\n\n// Get content from database\nposts.getInitialProps = async (ctx) =>{\n    \n        //const res = await fetch('https://usedbooksexchange.com/api/books', {\n        const res = await fetch('http://localhost:3000/api/books', {\n            \n        headers: {\n            title: ctx.query.mytitle,\n            author: ctx.query.author\n        }\n    });\n\n    \n  \n        const { data } = await res.json();\n\n        \n\n        return{ books: data }\n   \n    \n}\n\n    \nexport default posts;"]},"metadata":{},"sourceType":"module"}