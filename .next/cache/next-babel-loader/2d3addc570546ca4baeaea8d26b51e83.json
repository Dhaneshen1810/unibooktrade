{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danmo\\\\book-trade\\\\pages\\\\myprofile.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter, useRouter } from \"next/router\";\nimport Link from 'next/link'; //Getting book data from database\n\nimport fetch from 'isomorphic-unfetch';\nimport { Confirm, Butto, Loader } from 'semantic-ui-react';\nimport { useState, useEffect } from \"react\";\nconst myprofile = withRouter(({\n  router: {\n    query: {\n      name,\n      id,\n      firstname,\n      mytitle,\n      author\n    }\n  },\n  books\n}) => {\n  const {\n    0: isDeleting,\n    1: setIsDeleting\n  } = useState(false);\n  const router = useRouter();\n  useEffect(() => {\n    if (isDeleting) {\n      deleteBook();\n    }\n  }, [isDeleting]);\n\n  const deleteBook = async () => {\n    const bookID = router.query.id;\n\n    try {\n      const deleted = await fetch('http://localhost:3000/api/books/${bookID}', {\n        method: \"Delete\"\n      });\n    } catch (error) {}\n  };\n\n  const handleDelete = async () => {\n    setIsDeleting(true);\n    close();\n  };\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"book-greeting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"greeting-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, \"Name: \", name), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, \"Id: \", id), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 21\n    }\n  }, \"Firstname: \", firstname), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"title: \", mytitle), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, \"Author: \", author), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }, \"Find your book by entering the \", __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 29\n    }\n  }, \"Author\"), \" or \", __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 46\n    }\n  }, \"Book name below.\")))), __jsx(\"div\", {\n    className: \"book-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, books.map(book => {\n    return __jsx(\"div\", {\n      className: \"book-item-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      key: book._id,\n      className: \"book-item-profile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 25\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 29\n      }\n    }, \"Title: \", book.title), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 29\n      }\n    }, \"Author: \", book.author), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 29\n      }\n    }, \"Owner: \", book.ownerID)), __jsx(\"div\", {\n      className: \"book-delete-section\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: \"/icons/cross.png\",\n      className: \"delete-icon\",\n      onClick: handleDelete,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    })));\n  })));\n});\n\nmyprofile.getInitialProps = async mytitle => {\n  const res = await fetch('http://localhost:3000/api/books', {\n    headers: {\n      title: mytitle.query.mytitle,\n      author: mytitle.query.author\n    }\n  });\n  const {\n    data\n  } = await res.json();\n  return {\n    books: data\n  };\n};\n\nexport default myprofile;","map":{"version":3,"sources":["C:/Users/danmo/book-trade/pages/myprofile.js"],"names":["withRouter","useRouter","Link","fetch","Confirm","Butto","Loader","useState","useEffect","myprofile","router","query","name","id","firstname","mytitle","author","books","isDeleting","setIsDeleting","deleteBook","bookID","deleted","method","error","handleDelete","close","map","book","_id","title","ownerID","getInitialProps","res","headers","data","json"],"mappings":"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","sourcesContent":["import { withRouter, useRouter } from \"next/router\";\r\nimport Link from 'next/link';\r\n\r\n//Getting book data from database\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { Confirm, Butto, Loader } from 'semantic-ui-react';\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\nconst myprofile = withRouter(({ router:  { query:{name, id, firstname, mytitle, author}}, books} ) => {\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n        if (isDeleting) {\r\n            deleteBook();\r\n        }\r\n    }, [isDeleting])\r\n\r\n\r\n    const deleteBook = async () =>{\r\n        const bookID = router.query.id;\r\n        try {\r\n            const deleted = await fetch('http://localhost:3000/api/books/${bookID}', {\r\n                method:\"Delete\"\r\n            });\r\n        } catch (error) {\r\n            \r\n        }\r\n    }\r\n\r\n    const handleDelete = async () => {\r\n        setIsDeleting(true);\r\n        close();\r\n    }\r\n\r\n    return(\r\n\r\n        <div>\r\n    \r\n    \r\n        \r\n                \r\n            \r\n            <div className='book-greeting'>\r\n                <div className='greeting-text'>\r\n                    <p>Name: {name}</p>\r\n                    <p>Id: {id}</p>\r\n                    <p>Firstname: {firstname}</p>\r\n                    <p>title: {mytitle}</p>\r\n                    <p>Author: {author}</p>\r\n                    <p>Find your book by entering \r\n                        the <b>Author</b> or <b>Book name\r\n                            below.\r\n                        </b>\r\n                    </p>\r\n                </div>\r\n                \r\n            </div>\r\n            \r\n            <div className='book-list'>\r\n                  \r\n            \r\n            {books.map( book => {\r\n                \r\n               \r\n                    return (\r\n                        <div className='book-item-section'>\r\n                           \r\n                        <div key={book._id} className='book-item-profile'>\r\n                            <p>Title: {book.title}</p>\r\n                            <p>Author: {book.author}</p>\r\n                            <p>Owner: {book.ownerID}</p>\r\n                            \r\n                        </div>\r\n                        <div className='book-delete-section'>\r\n                            <img src='/icons/cross.png' className='delete-icon' onClick={handleDelete}/>\r\n                        </div>\r\n\r\n                        </div>\r\n                    )\r\n                \r\n            })}\r\n        \r\n        \r\n            </div>        \r\n        </div>\r\n    )\r\n\r\n\r\n});\r\n\r\n\r\nmyprofile.getInitialProps = async (mytitle) =>{\r\n\r\n    const res = await fetch('http://localhost:3000/api/books', {\r\n        headers: {\r\n            title: mytitle.query.mytitle,\r\n            author: mytitle.query.author\r\n        }\r\n    });\r\n    const { data } = await res.json();\r\n\r\n    return{ books: data }\r\n}\r\n\r\n\r\nexport default myprofile;"]},"metadata":{},"sourceType":"module"}