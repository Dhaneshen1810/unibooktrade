{"ast":null,"code":"var _jsxFileName = \"/home/dhaneshen/Documents/booktrade/unibooktrade/pages/testing.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter, useRouter } from \"next/router\";\nimport Link from 'next/link';\nimport Router from \"next/router\"; //Getting book data from database\n\nimport fetch from 'isomorphic-unfetch';\nimport { Confirm, Butto, Loader } from 'semantic-ui-react';\nimport { useState, useEffect } from \"react\";\nconst myprofile = withRouter(({\n  router: {\n    query: {\n      name,\n      id,\n      firstname,\n      mytitle,\n      author\n    }\n  },\n  books\n}) => {\n  const {\n    0: isDeleting,\n    1: setIsDeleting\n  } = useState(false);\n  const {\n    0: bookName,\n    1: setBookName\n  } = useState('null');\n  const {\n    0: bookID,\n    1: setBookID\n  } = useState(0);\n  const router = useRouter();\n  useEffect(() => {\n    if (isDeleting) {\n      deleteBook();\n    }\n  }, [isDeleting]);\n\n  const deleteBook = async e => {\n    try {\n      //const deleted = await fetch('https://unibooktrade.vercel.app/api/books/'+bookID,{\n      const deleted = await fetch('http://localhost:3000/api/books/' + bookID, {\n        method: \"DELETE\"\n      });\n    } catch (error) {}\n\n    window.location.reload(false);\n  }; // The user clicks on the delete button\n\n\n  const handleDelete = async e => {\n    console.log(e.target);\n    setBookName(e.target.name);\n    setBookID(e.target.id);\n    setIsDeleting(true);\n  }; // The user clicks on the edit button\n  // The user is sent to the edit page\n  // The data about this particular book post is the to the page as well\n\n\n  const handleEdit = (myBookID, myTitle, myAuthor, imageData) => {\n    //Update bookID\n    //setBookID(e.target.id);\n    //console.log('Book id: '+e.target.id);\n    console.log('Owner name: ' + name);\n    console.log('ownerID: ' + id);\n    Router.push({\n      pathname: '/edit',\n      query: {\n        name: name,\n        id: id,\n        firstname: firstname,\n        bookID: myBookID,\n        bookTitle: myTitle,\n        bookAuthor: myAuthor\n      }\n    });\n  }; //Handle page switch for header icons\n\n\n  const myProfile = () => {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname\n      }\n    });\n  }; //Go to section to create new listing\n\n\n  const myBooks = () => {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  const Search = () => {\n    Router.push({\n      pathname: '/posts',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  let bookLoad;\n\n  if (books) {\n    bookLoad = \"Loaded, yay!\";\n  } else {\n    bookLoad = \"Loading... :\";\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, bookLoad);\n  /*\n  return(\n       <div className='profile-page'>\n  \n          <div className='book-greeting'>\n              \n              <div className='greeting-text'>\n              <div className='icon-box'>\n                  <Link href='/'>\n                      <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\n                  </Link>\n                  \n                  <div className='my-icon-end'>\n                  <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\n                  \n                  <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\n                  \n                  <img src=\"/icons/search.png\" alt=\"Search\" className='my-icon' onClick={Search}/>\n                  </div>\n                  \n              </div>\n              <br/>\n                 \n              </div>\n              \n          </div>\n              \n           <div className='library-header'>\n              <p style={{letterSpacing:'1px'}}><b><u>{firstname}'s Library</u></b></p>\n          </div>\n          \n          <div className='book-list'>\n                \n          \n          {books.map( book => {\n              \n          //var imageBase64 = book.imageFront.contentType;\n          var imageData;\n          var base64data;\n           if (book.imageFront){\n              \n              imageData = book.imageFront.data;\n           }\n          else{\n              console.log('no image');\n              imageData='';\n          }\n          \n           \n                  return (\n                         \n                      <div key={book._id} className='book-item-profile'>\n                           <div className='section1'>\n                              <div className='section1-image'>\n                                  <img src={imageData}  style={{ width:'100px', height:'100px', borderRadius:'20px'}}/>\n                              </div>\n                              <div className='section1-info'>\n                                  <p><b>{book.title}</b></p>\n                                  <p>{book.author}</p>\n                                  <p>$50</p>\n                                  <p>Book id: {book._id}</p>\n                              </div>\n                          \n                          </div>\n                           <div className='section2'>\n                              <div className='buttons-section'>\n                              <button className='btn btn-success' style={{ width:'100px', height:'45px'}} onClick={() => handleEdit(book._id, book.title, book.author, imageData)} id={book._id} name={book.title}>Edit</button>\n                              <button className='btn btn-secondary' style={{ width:'100px', height:'45px'}} onClick={handleDelete} id={book._id} name={book.title}>Delete</button>\n                              </div>\n                          </div>\n                      \n                          \n                      </div>\n                       \n                       \n                  )\n                  \n              \n          }\n          \n          \n          )}\n          \n      \n      \n          </div>        \n      </div>\n  )\n  */\n});\n\nmyprofile.getInitialProps = async mytitle => {\n  //const res = await fetch('https://unibooktrade.vercel.app/api/books', {\n  const res = await fetch('http://localhost:3000/api/books', {\n    headers: {\n      title: mytitle.query.mytitle,\n      author: mytitle.query.author\n    }\n  });\n  const {\n    data\n  } = await res.json();\n  return {\n    books: data\n  };\n};\n\nexport default myprofile;","map":{"version":3,"sources":["/home/dhaneshen/Documents/booktrade/unibooktrade/pages/testing.js"],"names":["withRouter","useRouter","Link","Router","fetch","Confirm","Butto","Loader","useState","useEffect","myprofile","router","query","name","id","firstname","mytitle","author","books","isDeleting","setIsDeleting","bookName","setBookName","bookID","setBookID","deleteBook","e","deleted","method","error","window","location","reload","handleDelete","console","log","target","handleEdit","myBookID","myTitle","myAuthor","imageData","push","pathname","bookTitle","bookAuthor","myProfile","myBooks","Search","bookLoad","getInitialProps","res","headers","title","data","json"],"mappings":"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","sourcesContent":["import { withRouter, useRouter } from \"next/router\";\nimport Link from 'next/link';\nimport Router from \"next/router\";\n\n//Getting book data from database\nimport fetch from 'isomorphic-unfetch';\nimport { Confirm, Butto, Loader } from 'semantic-ui-react';\nimport { useState, useEffect } from \"react\";\n\n\n\n\nconst myprofile = withRouter(({ router:  { query:{name, id, firstname, mytitle, author}}, books} ) => {\n\n\n\n    const [isDeleting, setIsDeleting] = useState(false);\n    const [bookName, setBookName] = useState('null');\n    const [bookID, setBookID] = useState(0);\n    const router = useRouter();\n\n\n\n\n    useEffect(() => {\n        if (isDeleting) {\n            deleteBook();\n        }\n    }, [isDeleting])\n\n\n    const deleteBook = async (e) =>{\n\n        try {\n            //const deleted = await fetch('https://unibooktrade.vercel.app/api/books/'+bookID,{\n            const deleted = await fetch('http://localhost:3000/api/books/'+bookID,{\n                method:\"DELETE\"\n\n               \n            });\n        } catch (error) {\n            \n        }\n\n        window.location.reload(false);\n\n    }\n\n    // The user clicks on the delete button\n    const handleDelete = async (e) => {\n        console.log(e.target);\n        setBookName(e.target.name);\n        setBookID(e.target.id);\n        setIsDeleting(true);\n    }\n\n    // The user clicks on the edit button\n    // The user is sent to the edit page\n    // The data about this particular book post is the to the page as well\n    const handleEdit = (myBookID, myTitle, myAuthor, imageData) => {\n        //Update bookID\n        //setBookID(e.target.id);\n        //console.log('Book id: '+e.target.id);\n        console.log('Owner name: '+ name);\n        console.log('ownerID: '+id);\n        \n        \n        Router.push({\n            pathname: '/edit',\n            query: { \n                name: name,\n                id: id,\n                firstname: firstname,\n                bookID: myBookID,\n                bookTitle: myTitle,\n                bookAuthor: myAuthor,\n                    \n            }\n        });\n        \n        \n        \n        \n    }\n\n    //Handle page switch for header icons\n    const myProfile = () => {\n        Router.push({\n            pathname: '/myprofile',\n            query: { \n                    mytitle: '',\n                    author: '',\n                    name: name,\n                    id: id,\n                    firstname: firstname\n                    \n            }\n        });\n    }\n\n    //Go to section to create new listing\n    const myBooks = () => {\n        Router.push({\n            pathname: '/new',\n            query: { \n                    id: id,\n                    name: name,\n                    firstname: firstname  \n            }\n        });\n    }\n\n    const Search = () => {\n        Router.push({\n            pathname: '/posts',\n            query: { \n                    id: id,\n                    name: name,\n                    firstname: firstname\n                    \n            }\n        });\n    }\n\n    let bookLoad;\n    if (books){\n        bookLoad = \"Loaded, yay!\"\n    }\n    else{\n        bookLoad= \"Loading... :\"\n    }\n\n\n    return<div>{bookLoad}</div>\n    /*\n    return(\n\n        <div className='profile-page'>\n    \n            <div className='book-greeting'>\n                \n                <div className='greeting-text'>\n                <div className='icon-box'>\n                    <Link href='/'>\n                        <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\n                    </Link>\n                    \n                    <div className='my-icon-end'>\n                    <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\n                    \n                    <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\n                    \n                    <img src=\"/icons/search.png\" alt=\"Search\" className='my-icon' onClick={Search}/>\n                    </div>\n                    \n                </div>\n                <br/>\n                   \n                </div>\n                \n            </div>\n                \n\n            <div className='library-header'>\n                <p style={{letterSpacing:'1px'}}><b><u>{firstname}'s Library</u></b></p>\n            </div>\n            \n            <div className='book-list'>\n                  \n            \n            {books.map( book => {\n                \n            //var imageBase64 = book.imageFront.contentType;\n            var imageData;\n            var base64data;\n\n            if (book.imageFront){\n                \n                imageData = book.imageFront.data;\n\n            }\n            else{\n                console.log('no image');\n                imageData='';\n            }\n            \n\n            \n                    return (\n                           \n                        <div key={book._id} className='book-item-profile'>\n\n                            <div className='section1'>\n                                <div className='section1-image'>\n                                    <img src={imageData}  style={{ width:'100px', height:'100px', borderRadius:'20px'}}/>\n                                </div>\n                                <div className='section1-info'>\n                                    <p><b>{book.title}</b></p>\n                                    <p>{book.author}</p>\n                                    <p>$50</p>\n                                    <p>Book id: {book._id}</p>\n                                </div>\n                            \n                            </div>\n\n                            <div className='section2'>\n                                <div className='buttons-section'>\n                                <button className='btn btn-success' style={{ width:'100px', height:'45px'}} onClick={() => handleEdit(book._id, book.title, book.author, imageData)} id={book._id} name={book.title}>Edit</button>\n                                <button className='btn btn-secondary' style={{ width:'100px', height:'45px'}} onClick={handleDelete} id={book._id} name={book.title}>Delete</button>\n                                </div>\n                            </div>\n                        \n                            \n                        </div>\n\n                        \n\n                        \n                    )\n                    \n                \n            }\n            \n            \n            )}\n            \n        \n        \n            </div>        \n        </div>\n    )\n    */\n        \n\n\n});\n\n\nmyprofile.getInitialProps = async (mytitle) =>{\n\n            \n\n    //const res = await fetch('https://unibooktrade.vercel.app/api/books', {\n    const res = await fetch('http://localhost:3000/api/books', {\n        headers: {\n            title: mytitle.query.mytitle,\n            author: mytitle.query.author\n        }\n    });\n    const { data } = await res.json();\n\n    return{ books: data }\n}\n\n\nexport default myprofile;"]},"metadata":{},"sourceType":"module"}