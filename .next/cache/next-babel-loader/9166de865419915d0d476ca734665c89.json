{"ast":null,"code":"import mongoose from 'mongoose';\nconsole.log('inside dbConnect');\nconst connection = {}; //mongoose.set('useFindAndModify', false);\n\nconsole.log('Trying to connect to db.');\n\nasync function dbConnect() {\n  if (connection.isConnected) {\n    console.log('db on from first call');\n    return;\n  }\n\n  console.log('awaiting for db connection');\n  /*\n  const db = await mongoose.connect(process.env.MONGO_URI, {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n  })\n  */\n\n  const db = await mongoose.connect(process.env.MONGO_URI, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  });\n\n  if (db.connections) {\n    console.log('Connection exist');\n  } else {\n    console.log('no connections found');\n  }\n\n  connection.isConnected = db.connections[0].readyState;\n  console.log(connection.isConnected);\n  console.log('db is on.');\n}\n\nexport default dbConnect;","map":{"version":3,"sources":["/home/dhaneshen/Documents/booktrade/unibooktrade/utils/dbConnect.js"],"names":["mongoose","console","log","connection","dbConnect","isConnected","db","connect","process","env","MONGO_URI","useNewUrlParser","useUnifiedTopology","connections","readyState"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEAC,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEA,MAAMC,UAAU,GAAG,EAAnB,C,CACA;;AAGAF,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AACA,eAAeE,SAAf,GAA0B;AACtB,MAAID,UAAU,CAACE,WAAf,EAA4B;AACxBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA;AACH;;AAEDD,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAII;;;;;;;AAML,QAAMI,EAAE,GAAG,MAAMN,QAAQ,CAACO,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC;AACxDC,IAAAA,eAAe,EAAE,IADuC;AAExDC,IAAAA,kBAAkB,EAAE;AAFoC,GAAxC,CAAjB;;AAMH,MAAIN,EAAE,CAACO,WAAP,EAAmB;AACfZ,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACH,GAFD,MAGI;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAKGC,EAAAA,UAAU,CAACE,WAAX,GAAyBC,EAAE,CAACO,WAAH,CAAe,CAAf,EAAkBC,UAA3C;AACAb,EAAAA,OAAO,CAACC,GAAR,CAAYC,UAAU,CAACE,WAAvB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;;AAED,eAAeE,SAAf","sourcesContent":["import mongoose from 'mongoose';\n\nconsole.log('inside dbConnect');\n\nconst connection = {};\n//mongoose.set('useFindAndModify', false);\n\n\nconsole.log('Trying to connect to db.');\nasync function dbConnect(){\n    if (connection.isConnected) {\n        console.log('db on from first call')\n        return;\n    }\n\n    console.log('awaiting for db connection')\n    \n    \n    \n        /*\n    const db = await mongoose.connect(process.env.MONGO_URI, {\n        useNewUrlParser: true,\n        useUnifiedTopology: true\n    })\n    */\n   const db = await mongoose.connect(process.env.MONGO_URI, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n})\n   \n\nif (db.connections){\n    console.log('Connection exist')\n}\nelse{\n    console.log('no connections found')\n}\n\n  \n    \n\n    connection.isConnected = db.connections[0].readyState;\n    console.log(connection.isConnected);\n    console.log('db is on.')\n}\n\nexport default dbConnect;"]},"metadata":{},"sourceType":"module"}