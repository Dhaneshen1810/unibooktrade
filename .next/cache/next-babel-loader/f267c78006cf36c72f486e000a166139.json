{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danmo\\\\book-trade\\\\pages\\\\booklist.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from \"next/router\";\nimport Link from 'next/link'; //Getting book data from database\n\nimport fetch from 'isomorphic-unfetch';\nconst posts = withRouter(({\n  router: {\n    query: {\n      mytitle,\n      author\n    }\n  }\n}) => {\n  const [books, setBooks] = useState();\n  useEffect(() => {\n    getItems().then(data => setItems(data));\n  }, []);\n  let itemsToRender;\n\n  if (books) {\n    itemsToRender = books.map(item => {\n      return __jsx(\"div\", {\n        key: book._id,\n        className: \"book-item\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }\n      }, \"Title: \", book.title), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }\n      }, \"Author: \", book.author));\n    });\n  } else {\n    itemsToRender = \"Loading...\";\n  }\n  /*\r\n    return(\r\n    \r\n      \r\n    <div>\r\n  \r\n    \r\n            \r\n        \r\n        <div className='book-greeting'>\r\n            <div className='greeting-text'>\r\n                <p>Find your book by entering \r\n                    the <b>Author</b> or <b>Book name\r\n                        below.\r\n                    </b>\r\n                </p>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        <div className='book-list'>\r\n              \r\n        {/*}        {books.map( book => {\r\n            \r\n           \r\n            //if (mytitle=='' && author==''){\r\n                return (\r\n                    <div key={book._id} className='book-item'>\r\n                        <p>Title: {book.title}</p>\r\n                        <p>Author: {book.author}</p>\r\n                        \r\n                    </div>\r\n                )\r\n            \r\n        })}\r\n    }\r\n      \r\n    \r\n        </div>        \r\n    </div>\r\n  )\r\n  */\n\n});\n\nposts.getInitialProps = async () => {\n  const res = await fetch('http://localhost:3000/api/books');\n  const {\n    data\n  } = await res.json();\n  return {\n    books: data\n  };\n};\n\nexport default posts;","map":{"version":3,"sources":["C:/Users/danmo/book-trade/pages/booklist.js"],"names":["withRouter","Link","fetch","posts","router","query","mytitle","author","books","setBooks","useState","useEffect","getItems","then","data","setItems","itemsToRender","map","item","book","_id","title","getInitialProps","res","json"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAIA,MAAMC,KAAK,GAAGH,UAAU,CAAC,CAAC;AAAEI,EAAAA,MAAM,EAAG;AAAEC,IAAAA,KAAK,EAAC;AAACC,MAAAA,OAAD;AAAUC,MAAAA;AAAV;AAAR;AAAX,CAAD,KAA6C;AAElE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,EAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,QAAQ,GAAGC,IAAX,CAAgBC,IAAI,IAAIC,QAAQ,CAACD,IAAD,CAAhC;AACD,GAFQ,EAEN,EAFM,CAAT;AAKA,MAAIE,aAAJ;;AACF,MAAIR,KAAJ,EAAW;AACTQ,IAAAA,aAAa,GAAGR,KAAK,CAACS,GAAN,CAAUC,IAAI,IAAI;AAC9B,aACI;AAAK,QAAA,GAAG,EAAEC,IAAI,CAACC,GAAf;AAAoB,QAAA,SAAS,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWD,IAAI,CAACE,KAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAYF,IAAI,CAACZ,MAAjB,CAFJ,CADJ;AAOH,KARe,CAAhB;AASD,GAVD,MAUO;AACLS,IAAAA,aAAa,GAAG,YAAhB;AACD;AACD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6CD,CApEuB,CAAxB;;AA0EAb,KAAK,CAACmB,eAAN,GAAwB,YAAW;AAC/B,QAAMC,GAAG,GAAG,MAAMrB,KAAK,CAAC,iCAAD,CAAvB;AACA,QAAM;AAAEY,IAAAA;AAAF,MAAW,MAAMS,GAAG,CAACC,IAAJ,EAAvB;AAEA,SAAM;AAAEhB,IAAAA,KAAK,EAAEM;AAAT,GAAN;AACH,CALD;;AAQA,eAAeX,KAAf","sourcesContent":["import { withRouter } from \"next/router\";\r\nimport Link from 'next/link';\r\n\r\n//Getting book data from database\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n\r\n\r\nconst posts = withRouter(({ router:  { query:{mytitle, author}}} ) => {\r\n\r\n    const [books, setBooks] = useState();\r\n\r\n    useEffect(() => {\r\n      getItems().then(data => setItems(data));\r\n    }, []);\r\n\r\n\r\n    let itemsToRender;\r\n  if (books) {\r\n    itemsToRender = books.map(item => {\r\n        return (\r\n            <div key={book._id} className='book-item'>\r\n                <p>Title: {book.title}</p>\r\n                <p>Author: {book.author}</p>\r\n                \r\n            </div>\r\n        )\r\n    });\r\n  } else {\r\n    itemsToRender = \"Loading...\";\r\n  }\r\n  /*\r\n    return(\r\n    \r\n\r\n    \r\n    <div>\r\n\r\n\r\n    \r\n            \r\n        \r\n        <div className='book-greeting'>\r\n            <div className='greeting-text'>\r\n                <p>Find your book by entering \r\n                    the <b>Author</b> or <b>Book name\r\n                        below.\r\n                    </b>\r\n                </p>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        <div className='book-list'>\r\n              \r\n        {/*}        {books.map( book => {\r\n            \r\n           \r\n            //if (mytitle=='' && author==''){\r\n                return (\r\n                    <div key={book._id} className='book-item'>\r\n                        <p>Title: {book.title}</p>\r\n                        <p>Author: {book.author}</p>\r\n                        \r\n                    </div>\r\n                )\r\n            \r\n        })}\r\n    }\r\n\r\n    \r\n    \r\n        </div>        \r\n    </div>\r\n)\r\n*/\r\n});\r\n\r\n\r\n\r\n\r\n\r\nposts.getInitialProps = async () =>{\r\n    const res = await fetch('http://localhost:3000/api/books');\r\n    const { data } = await res.json();\r\n\r\n    return{ books: data }\r\n}\r\n\r\n    \r\nexport default posts;"]},"metadata":{},"sourceType":"module"}