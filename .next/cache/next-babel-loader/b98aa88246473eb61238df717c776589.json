{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter, withRouter } from 'next/router';\nimport Router from 'next/router';\nvar NewBook = withRouter(function (_ref) {\n  var _ref$router$query = _ref.router.query,\n      name = _ref$router$query.name,\n      id = _ref$router$query.id,\n      firstname = _ref$router$query.firstname;\n\n  var _useState = useState({\n    title: '',\n    author: '',\n    ownerID: '',\n    ownerName: ''\n  }),\n      form = _useState[0],\n      setForm = _useState[1];\n\n  var _useState2 = useState(false),\n      isSubmitting = _useState2[0],\n      setIsSubmitting = _useState2[1];\n\n  var _useState3 = useState({}),\n      errors = _useState3[0],\n      setErrors = _useState3[1];\n\n  var router = useRouter();\n  useEffect(function () {\n    if (isSubmitting) {\n      if (Object.keys(errors).length === 0) {\n        //bookmatch();\n        //alert('New book created')\n        createBook();\n        /*\r\n        Router.push({\r\n            pathname: '/booklist',\r\n            query: { \r\n                    mytitle: form.title,\r\n                    author: form.author\r\n                    \r\n            }\r\n        });*/\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n  }, [errors]); //Create new book post\n\n  var createBook = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return fetch('http://localhost:3000/api/books', {\n                method: 'POST',\n                headers: {\n                  \"Accept\": 'application/json',\n                  \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(form)\n              });\n\n            case 3:\n              res = _context.sent;\n              _context.next = 9;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 6]]);\n    }));\n\n    return function createBook() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      ownerID: id,\n      ownerName: name\n    }));\n    var errs = validate();\n    setErrors(errs);\n    setIsSubmitting(true);\n  };\n\n  var handleChange = function handleChange(e) {\n    setForm(_objectSpread(_objectSpread({}, form), {}, _defineProperty({}, e.target.name, e.target.value)));\n  };\n\n  var validate = function validate() {\n    var err = {};\n    return err;\n  }; //Handle page switch for header icons\n\n\n  var myProfile = function myProfile() {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname\n      }\n    });\n  }; //Go to section to create new listing\n\n\n  var myBooks = function myBooks() {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"newBook-page\"\n  }, __jsx(\"div\", {\n    className: \"book-greeting\"\n  }, __jsx(\"div\", {\n    className: \"greeting-text\"\n  }, __jsx(\"div\", {\n    className: \"icon-box\"\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"img\", {\n    src: \"/icons/sign-out.png\",\n    alt: \"my image\",\n    className: \"my-icon\"\n  })), __jsx(\"div\", {\n    className: \"my-icon-end\"\n  }, __jsx(\"img\", {\n    src: \"/icons/four-square.png\",\n    alt: \"my books\",\n    className: \"my-icon\",\n    onClick: myProfile\n  }), __jsx(\"img\", {\n    src: \"/icons/plus.png\",\n    alt: \"Add book\",\n    className: \"my-icon\",\n    onClick: myBooks\n  }))), __jsx(\"p\", null, \"Name: \", name), __jsx(\"p\", null, \"firstName: \", firstname), __jsx(\"p\", null, \"Id: \", id), __jsx(\"p\", null, \"Post a book.\"))), __jsx(\"form\", {\n    className: \"create-book-form\",\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: \"form-group my-group\",\n    style: {\n      marginTop: '5%'\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control new-book-input\",\n    id: \"exampleInputEmail1\",\n    placeholder: \"Enter book title\",\n    name: \"title\",\n    required: true,\n    onChange: handleChange\n  })), __jsx(\"div\", {\n    className: \"form-group my-group\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control new-book-input\",\n    placeholder: \"Enter Author\",\n    name: \"author\",\n    onChange: handleChange,\n    required: true\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-btn\"\n  }, \"POST\"))));\n});\nexport default NewBook;","map":null,"metadata":{},"sourceType":"module"}