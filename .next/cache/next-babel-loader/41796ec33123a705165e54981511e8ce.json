{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { withRouter } from \"next/router\";\nimport Link from 'next/link';\nimport React, { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport Router from 'next/router';\nimport { useRouter } from 'next/router';\nconst posts = withRouter(({\n  router: {\n    query: {\n      name,\n      id,\n      firstName\n    }\n  },\n  books\n}) => {\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    title: ''\n  });\n  const {\n    0: isSubmitting,\n    1: setIsSubmitting\n  } = useState(false);\n  const {\n    0: errors,\n    1: setErrors\n  } = useState();\n  const router = useRouter;\n  useEffect(() => {\n    // We are directed to the booklist page\n    // Forwarding the following data to booklist\n    // Fullname, firstname, id, book author and book title\n    if (isSubmitting) {\n      if (Object.keys(errors).length === 0) {\n        Router.push({\n          pathname: '/booklist',\n          query: {\n            mytitle: form.title,\n            author: form.author,\n            name: name,\n            id: id,\n            firstname: firstName\n          }\n        });\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n  }, [errors]); // When th user submits\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let errs = validate();\n    setErrors(errs);\n    setIsSubmitting(true);\n  }; // Handle changes made to the input box\n  // That is, when the user types in the box\n\n\n  const handleChange = e => {\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const validate = () => {\n    let err = {};\n    return err;\n  }; // User chooses to view all available books\n\n\n  const viewAll = () => {\n    Router.push({\n      pathname: '/booklist',\n      query: {\n        mytitle: '',\n        author: ''\n      }\n    });\n  };\n\n  const myBooks = () => {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstName\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"option-page\"\n  }, __jsx(\"div\", {\n    className: \"book-greeting\"\n  }, __jsx(\"div\", {\n    className: \"greeting-text\"\n  }, __jsx(\"div\", {\n    className: \"icon-box\"\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"img\", {\n    src: \"/icons/sign-out.png\",\n    alt: \"my image\",\n    className: \"my-icon\"\n  })), __jsx(\"div\", {\n    className: \"my-icon-end\"\n  }, __jsx(\"img\", {\n    src: \"/icons/four-square.png\",\n    alt: \"my books\",\n    className: \"my-icon\"\n  }), __jsx(\"img\", {\n    src: \"/icons/plus.png\",\n    alt: \"Add book\",\n    className: \"my-icon\",\n    onClick: myBooks\n  }))), __jsx(\"h2\", null, \"Hi, \", firstName, \"!\"), __jsx(\"p\", null, \"Find your book by entering the \", __jsx(\"b\", null, \"Author\"), \" or \", __jsx(\"b\", null, \"Book name\"), \" below.\")), __jsx(\"form\", {\n    className: \"my-form\",\n    onSubmit: handleSubmit\n  }, __jsx(\"div\", {\n    className: \"form-group my-group\"\n  }, __jsx(\"label\", null, \"Title\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control my-form-control\",\n    id: \"exampleInputEmail1\",\n    placeholder: \"Enter book title\",\n    name: \"title\",\n    onChange: handleChange\n  })), __jsx(\"b\", null, \"OR\"), __jsx(\"div\", {\n    className: \"form-group my-group\"\n  }, __jsx(\"label\", null, \"Author\"), __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control\",\n    placeholder: \"Enter Author\",\n    name: \"author\",\n    onChange: handleChange\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-btn\"\n  }, \"Search\"))), __jsx(\"div\", {\n    className: \"my-divider\"\n  }), __jsx(\"div\", {\n    className: \"btn btn-success my-btn-viewall\",\n    onClick: viewAll\n  }, \"View all\")));\n});\nexport default posts;","map":null,"metadata":{},"sourceType":"module"}