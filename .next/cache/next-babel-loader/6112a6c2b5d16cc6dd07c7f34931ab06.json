{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danmo\\\\book-trade\\\\pages\\\\myprofile.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter, useRouter } from \"next/router\";\nimport Link from 'next/link';\nimport Router from \"next/router\"; //Getting book data from database\n\nimport fetch from 'isomorphic-unfetch';\nimport { Confirm, Butto, Loader } from 'semantic-ui-react';\nimport { useState, useEffect } from \"react\";\nconst myprofile = withRouter(({\n  router: {\n    query: {\n      name,\n      id,\n      firstname,\n      mytitle,\n      author\n    }\n  },\n  books\n}) => {\n  const {\n    0: booklist,\n    1: setBooklist\n  } = useState([]);\n  const {\n    0: isDeleting,\n    1: setIsDeleting\n  } = useState(false);\n  const {\n    0: bookName,\n    1: setBookName\n  } = useState('null');\n  const {\n    0: bookID,\n    1: setBookID\n  } = useState(0);\n  const router = useRouter();\n  useEffect(() => {\n    setBooklist(books);\n    console.log('books are: ');\n    console.log(booklist);\n\n    if (isDeleting) {\n      deleteBook();\n    }\n  }, [isDeleting]);\n\n  const deleteBook = async e => {\n    console.log(bookID);\n\n    try {\n      const deleted = await fetch('https://unibooktrade.vercel.app/api/books', {\n        //const deleted = await fetch('http://localhost:3000/api/books',{\n        method: 'DELETE',\n        headers: {\n          \"Accept\": 'application/json',\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: '',\n          author: '',\n          id: bookID\n        })\n      });\n    } catch (error) {}\n    /*\r\n    Router.push({\r\n        pathname: '/myprofile',\r\n        query: { \r\n                mytitle: '',\r\n                author: '',\r\n                name: name,\r\n                id: id,\r\n                firstname: firstname\r\n                \r\n        }\r\n    })\r\n    */\n\n\n    window.location.reload(false);\n  }; // The user clicks on the delete button\n\n\n  const handleDelete = async e => {\n    console.log(e.target);\n    setBookName(e.target.name);\n    setBookID(e.target.id);\n    setIsDeleting(true);\n  }; // The user clicks on the edit button\n  // The user is sent to the edit page\n  // The data about this particular book post is the to the page as well\n\n\n  const handleEdit = (myBookID, myTitle, myAuthor, imageData, price) => {\n    //Update bookID\n    //setBookID(e.target.id);\n    //console.log('Book id: '+e.target.id);\n    console.log('Owner name: ' + name);\n    console.log('ownerID: ' + id);\n    Router.push({\n      pathname: '/edit',\n      query: {\n        name: name,\n        id: id,\n        firstname: firstname,\n        bookID: myBookID,\n        bookTitle: myTitle,\n        bookAuthor: myAuthor,\n        price: price\n      }\n    });\n  }; //Handle page switch for header icons\n\n\n  const myProfile = () => {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname\n      }\n    });\n  }; //Go to section to create new listing\n\n\n  const myBooks = () => {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  const Search = () => {\n    Router.push({\n      pathname: '/posts',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  if (books) {\n    return __jsx(\"div\", {\n      className: \"profile-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: \"book-greeting\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: \"greeting-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"icon-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, __jsx(Link, {\n      href: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: \"/icons/sign-out.png\",\n      alt: \"my image\",\n      className: \"my-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      className: \"my-icon-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, __jsx(\"img\", {\n      src: \"/icons/four-square.png\",\n      alt: \"my books\",\n      className: \"my-icon\",\n      onClick: myProfile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }), __jsx(\"img\", {\n      src: \"/icons/plus.png\",\n      alt: \"Add book\",\n      className: \"my-icon\",\n      onClick: myBooks,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 21\n      }\n    }), __jsx(\"img\", {\n      src: \"/icons/search.png\",\n      alt: \"Search\",\n      className: \"my-icon\",\n      onClick: Search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }))), __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }), __jsx(\"div\", {\n      className: \"myprofile-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 25\n      }\n    }, \"This is your collection\", __jsx(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 51\n      }\n    }), \" You currently have \", books.length, \" posts\")))), __jsx(\"div\", {\n      className: \"book-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }\n    }, booklist.map(book => {\n      //var imageBase64 = book.imageFront.contentType;\n      var imageData;\n      var base64data;\n\n      if (book.imageFront) {\n        imageData = book.imageFront.data;\n      } else {\n        console.log('no image');\n        imageData = '';\n      }\n\n      return __jsx(\"div\", {\n        key: book._id,\n        className: \"book-item-profile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"section1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 29\n        }\n      }, __jsx(\"div\", {\n        className: \"section1-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 33\n        }\n      }, __jsx(\"img\", {\n        src: imageData,\n        style: {\n          width: '100px',\n          height: '100px',\n          borderRadius: '20px'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 37\n        }\n      })), __jsx(\"div\", {\n        className: \"section1-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 33\n        }\n      }, __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 37\n        }\n      }, __jsx(\"b\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 40\n        }\n      }, book.title)), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 37\n        }\n      }, book.author), __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 37\n        }\n      }, book.price))), __jsx(\"div\", {\n        className: \"section2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 29\n        }\n      }, __jsx(\"div\", {\n        className: \"buttons-section\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 33\n        }\n      }, __jsx(\"button\", {\n        className: \"btn btn-success\",\n        style: {\n          width: '100px',\n          height: '45px'\n        },\n        onClick: () => handleEdit(book._id, book.title, book.author, imageData, book.price),\n        id: book._id,\n        name: book.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 33\n        }\n      }, \"Edit\"), __jsx(\"button\", {\n        className: \"btn btn-secondary\",\n        style: {\n          width: '100px',\n          height: '45px'\n        },\n        onClick: handleDelete,\n        id: book._id,\n        name: book.title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 33\n        }\n      }, \"Delete\"))));\n    })));\n  } else {\n    return books;\n  }\n});\n\nmyprofile.getInitialProps = async mytitle => {\n  try {\n    const res = await fetch('https://unibooktrade.vercel.app/api/books', {\n      //const res = await fetch('http://localhost:3000/api/books', {\n      headers: {\n        title: mytitle.query.mytitle,\n        author: mytitle.query.author,\n        id: mytitle.query.id\n      }\n    });\n    const {\n      data\n    } = await res.json();\n    return {\n      books: data\n    };\n  } catch (error) {\n    return {\n      books: []\n    };\n  }\n};\n\nexport default myprofile;","map":{"version":3,"sources":["C:/Users/danmo/book-trade/pages/myprofile.js"],"names":["withRouter","useRouter","Link","Router","fetch","Confirm","Butto","Loader","useState","useEffect","myprofile","router","query","name","id","firstname","mytitle","author","books","booklist","setBooklist","isDeleting","setIsDeleting","bookName","setBookName","bookID","setBookID","console","log","deleteBook","e","deleted","method","headers","body","JSON","stringify","title","error","window","location","reload","handleDelete","target","handleEdit","myBookID","myTitle","myAuthor","imageData","price","push","pathname","bookTitle","bookAuthor","myProfile","myBooks","Search","length","map","book","base64data","imageFront","data","_id","width","height","borderRadius","getInitialProps","res","json"],"mappings":"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","sourcesContent":["import { withRouter, useRouter } from \"next/router\";\r\nimport Link from 'next/link';\r\nimport Router from \"next/router\";\r\n\r\n//Getting book data from database\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { Confirm, Butto, Loader } from 'semantic-ui-react';\r\nimport { useState, useEffect } from \"react\";\r\n\r\n\r\n\r\n\r\nconst myprofile = withRouter(({ router:  { query:{name, id, firstname, mytitle, author}}, books} ) => {\r\n\r\n\r\n    const [booklist, setBooklist] = useState([]);\r\n\r\n    const [isDeleting, setIsDeleting] = useState(false);\r\n    const [bookName, setBookName] = useState('null');\r\n    const [bookID, setBookID] = useState(0);\r\n    const router = useRouter();\r\n\r\n    \r\n\r\n\r\n\r\n    useEffect(() => {\r\n        setBooklist(books)\r\n        console.log('books are: ');\r\n        console.log(booklist)\r\n\r\n\r\n\r\n        if (isDeleting) {\r\n            deleteBook();\r\n        }\r\n    }, [isDeleting])\r\n\r\n\r\n    const deleteBook = async (e) =>{\r\n\r\n        console.log(bookID)\r\n        try {\r\n            const deleted = await fetch('https://unibooktrade.vercel.app/api/books',{\r\n            //const deleted = await fetch('http://localhost:3000/api/books',{\r\n                method:'DELETE',\r\n                headers:{\r\n                    \"Accept\": 'application/json',\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body:JSON.stringify({\r\n                    title:'',\r\n                    author:'',\r\n                    id: bookID,\r\n                })\r\n\r\n\r\n               \r\n            });\r\n        } catch (error) {\r\n            \r\n        }\r\n\r\n        /*\r\n        Router.push({\r\n            pathname: '/myprofile',\r\n            query: { \r\n                    mytitle: '',\r\n                    author: '',\r\n                    name: name,\r\n                    id: id,\r\n                    firstname: firstname\r\n                    \r\n            }\r\n        })\r\n        */\r\n\r\n        window.location.reload(false);\r\n\r\n    }\r\n\r\n    // The user clicks on the delete button\r\n    const handleDelete = async (e) => {\r\n        console.log(e.target);\r\n        setBookName(e.target.name);\r\n        setBookID(e.target.id);\r\n        setIsDeleting(true);\r\n    }\r\n\r\n    // The user clicks on the edit button\r\n    // The user is sent to the edit page\r\n    // The data about this particular book post is the to the page as well\r\n    const handleEdit = (myBookID, myTitle, myAuthor, imageData, price) => {\r\n        //Update bookID\r\n        //setBookID(e.target.id);\r\n        //console.log('Book id: '+e.target.id);\r\n        console.log('Owner name: '+ name);\r\n        console.log('ownerID: '+id);\r\n        \r\n        \r\n        Router.push({\r\n            pathname: '/edit',\r\n            query: { \r\n                name: name,\r\n                id: id,\r\n                firstname: firstname,\r\n                bookID: myBookID,\r\n                bookTitle: myTitle,\r\n                bookAuthor: myAuthor,\r\n                price: price\r\n                    \r\n            }\r\n        });\r\n        \r\n        \r\n        \r\n        \r\n    }\r\n\r\n    //Handle page switch for header icons\r\n    const myProfile = () => {\r\n        Router.push({\r\n            pathname: '/myprofile',\r\n            query: { \r\n                    mytitle: '',\r\n                    author: '',\r\n                    name: name,\r\n                    id: id,\r\n                    firstname: firstname\r\n                    \r\n            }\r\n        });\r\n    }\r\n\r\n    //Go to section to create new listing\r\n    const myBooks = () => {\r\n        Router.push({\r\n            pathname: '/new',\r\n            query: { \r\n                    id: id,\r\n                    name: name,\r\n                    firstname: firstname  \r\n            }\r\n        });\r\n    }\r\n\r\n    const Search = () => {\r\n        Router.push({\r\n            pathname: '/posts',\r\n            query: { \r\n                    id: id,\r\n                    name: name,\r\n                    firstname: firstname\r\n                    \r\n            }\r\n        });\r\n    }\r\n\r\n    if (books){\r\n    return(\r\n\r\n        <div className='profile-page'>\r\n    \r\n            <div className='book-greeting'>\r\n                \r\n                <div className='greeting-text'>\r\n                <div className='icon-box'>\r\n                    <Link href='/'>\r\n                        <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\r\n                    </Link>\r\n                    \r\n                    <div className='my-icon-end'>\r\n                    <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\r\n                    \r\n                    <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\r\n                    \r\n                    <img src=\"/icons/search.png\" alt=\"Search\" className='my-icon' onClick={Search}/>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <br/>\r\n                    <div className='myprofile-header'>\r\n                        <p>This is your collection<br/> You currently have {books.length} posts</p>\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n                \r\n\r\n            \r\n            <div className='book-list'>\r\n                  \r\n            \r\n            {booklist.map( book => {\r\n                \r\n            //var imageBase64 = book.imageFront.contentType;\r\n            var imageData;\r\n            var base64data;\r\n\r\n            if (book.imageFront){\r\n                \r\n                imageData = book.imageFront.data;\r\n\r\n            }\r\n            else{\r\n                console.log('no image');\r\n                imageData='';\r\n            }\r\n            \r\n\r\n            \r\n                    return (\r\n                           \r\n                        <div key={book._id} className='book-item-profile'>\r\n\r\n                            <div className='section1'>\r\n                                <div className='section1-image'>\r\n                                    <img src={imageData}  style={{ width:'100px', height:'100px', borderRadius:'20px'}}/>\r\n                                </div>\r\n                                <div className='section1-info'>\r\n                                    <p><b>{book.title}</b></p>\r\n                                    <p>{book.author}</p>\r\n                                    <p>{book.price}</p>\r\n                                </div>\r\n                            \r\n                            </div>\r\n\r\n                            <div className='section2'>\r\n                                <div className='buttons-section'>\r\n                                <button className='btn btn-success' style={{ width:'100px', height:'45px'}} onClick={() => handleEdit(book._id, book.title, book.author, imageData, book.price)} id={book._id} name={book.title}>Edit</button>\r\n                                <button className='btn btn-secondary' style={{ width:'100px', height:'45px'}} onClick={handleDelete} id={book._id} name={book.title}>Delete</button>\r\n                                </div>\r\n                            </div>\r\n                        \r\n                            \r\n                        </div>\r\n\r\n                        \r\n\r\n                        \r\n                    )\r\n                    \r\n                \r\n            }\r\n            \r\n            \r\n            )}\r\n            \r\n        \r\n        \r\n            </div>        \r\n        </div>\r\n    )\r\n\r\n        }\r\n\r\n        else{\r\n            return(books)\r\n        }\r\n\r\n\r\n});\r\n\r\n\r\nmyprofile.getInitialProps = async (mytitle) =>{\r\n\r\n            \r\n\r\n    \r\n\r\n   try {\r\n\r\n    const res = await fetch('https://unibooktrade.vercel.app/api/books', {\r\n        //const res = await fetch('http://localhost:3000/api/books', {\r\n            headers: {\r\n                title: mytitle.query.mytitle,\r\n                author: mytitle.query.author,\r\n                id: mytitle.query.id\r\n            }\r\n        });\r\n        const { data } = await res.json();\r\n    \r\n       \r\n       return{ books:data }\r\n       \r\n   } catch (error) {\r\n\r\n    return { books: [] }\r\n       \r\n   }\r\n    \r\n}\r\n\r\n\r\nexport default myprofile;"]},"metadata":{},"sourceType":"module"}