{"ast":null,"code":"import dbConnect from '../../../utils/dbConnect';\nimport Book from '../../../modals/book';\ndbConnect();\nexport default (async (req, res) => {\n  const {\n    method\n  } = req; //const myTitle = req.headers.title;\n  //const myAuthor = req.headers.author;\n\n  const myID = req.headers.id; // In case we have only the author as input, we will looking\n  // for all books with that author\n\n  if (myID != '') {\n    switch (method) {\n      case 'GET':\n        try {\n          const books = await Book.find({\n            //Sort here\n            //'title': myTitle\n            'author': \"Be\"\n          });\n          res.status(200).json({\n            success: true,\n            data: books\n          });\n        } catch (error) {\n          res.status(400).json({\n            success: false\n          });\n          console.log('book by id not found');\n        }\n\n        break;\n\n      default:\n        res.status(400).json({\n          success: false\n        });\n        break;\n    }\n  } //In case only the title is given as input,\n  // Look for all books with that title\n  else {\n      switch (method) {\n        case 'GET':\n          try {\n            const books = await Book.find({\n              //Sort here\n              'id': myID\n            });\n            res.status(200).json({\n              success: true,\n              data: books\n            });\n          } catch (error) {\n            res.status(400).json({\n              success: false\n            });\n            console.log('Book by ID not found');\n          }\n\n          break;\n\n        default:\n          res.status(400).json({\n            success: false\n          });\n          break;\n      }\n    }\n});","map":null,"metadata":{},"sourceType":"module"}