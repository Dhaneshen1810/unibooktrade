{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danmo\\\\book-trade\\\\pages\\\\booklist.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from \"next/router\";\nimport Link from 'next/link'; //Getting book data from database\n\nimport fetch from 'isomorphic-unfetch';\nconst posts = withRouter(({\n  router: {\n    query: {\n      name,\n      id,\n      firstName\n    }\n  },\n  books\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}, __jsx(\"div\", {\n  className: \"book-greeting\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }\n}, __jsx(\"div\", {\n  className: \"greeting-text\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 13\n  }\n}, __jsx(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 17\n  }\n}, \"Hi, \", firstName, \"!\"), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 17\n  }\n}, \"Find your book by entering the \", __jsx(\"b\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 25\n  }\n}, \"Author\"), \" or \", __jsx(\"b\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 42\n  }\n}, \"Book name below.\")))), __jsx(\"div\", {\n  className: \"book-list\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }\n}, books.map(book => {\n  return __jsx(\"div\", {\n    key: book._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, book.title);\n}))));\n\nposts.getInitialProps = async () => {\n  const res = await fetch('http://localhost:3000/api/books');\n  const {\n    data\n  } = await res.json();\n  return {\n    books: data\n  };\n};\n\nexport default posts;","map":{"version":3,"sources":["C:/Users/danmo/book-trade/pages/booklist.js"],"names":["withRouter","Link","fetch","posts","router","query","name","id","firstName","books","map","book","_id","title","getInitialProps","res","data","json"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAGA,MAAMC,KAAK,GAAGH,UAAU,CAAC,CAAC;AAAEI,EAAAA,MAAM,EAAG;AAAEC,IAAAA,KAAK,EAAC;AAACC,MAAAA,IAAD;AAAOC,MAAAA,EAAP;AAAWC,MAAAA;AAAX;AAAR,GAAX;AAA2CC,EAAAA;AAA3C,CAAD,KACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEI;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAK,EAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAASD,SAAT,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADR,UACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADzB,CAFJ,CADJ,CAFJ,EAiBI;AAAK,EAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACCC,KAAK,CAACC,GAAN,CAAUC,IAAI,IAAI;AACf,SACI;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IAAI,CAACE,KADV,CADJ;AAKH,CANA,CADD,CAjBJ,CADoB,CAAxB;;AAkCAV,KAAK,CAACW,eAAN,GAAwB,YAAW;AAC/B,QAAMC,GAAG,GAAG,MAAMb,KAAK,CAAC,iCAAD,CAAvB;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAW,MAAMD,GAAG,CAACE,IAAJ,EAAvB;AAEA,SAAM;AAAER,IAAAA,KAAK,EAAEO;AAAT,GAAN;AACH,CALD;;AASA,eAAeb,KAAf","sourcesContent":["import { withRouter } from \"next/router\";\r\nimport Link from 'next/link';\r\n\r\n//Getting book data from database\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n\r\nconst posts = withRouter(({ router:  { query:{name, id, firstName}}, books} ) => (\r\n    <div>\r\n\r\n        <div className='book-greeting'>\r\n            <div className='greeting-text'>\r\n                <h2>Hi, {firstName}!</h2>\r\n                <p>Find your book by entering \r\n                    the <b>Author</b> or <b>Book name\r\n                        below.\r\n                    </b>\r\n                </p>\r\n            </div>\r\n                \r\n            \r\n\r\n            \r\n        </div>\r\n        \r\n        <div className='book-list'>\r\n        {books.map(book => {\r\n            return (\r\n                <div key={book._id}>\r\n                    {book.title}\r\n                </div>\r\n            )\r\n        })}\r\n        </div>\r\n        \r\n\r\n\r\n        \r\n    </div>\r\n));\r\n\r\nposts.getInitialProps = async () =>{\r\n    const res = await fetch('http://localhost:3000/api/books');\r\n    const { data } = await res.json();\r\n\r\n    return{ books: data }\r\n}\r\n  \r\n\r\n    \r\nexport default posts;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}