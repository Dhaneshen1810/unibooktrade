{"ast":null,"code":"import dbConnect from '../../../utils/dbConnect';\nimport Book from '../../../modals/book';\ndbConnect();\nexport default (async (req, res) => {\n  //variable for query\n  var title = '';\n  var author = '';\n  const {\n    method\n  } = req;\n\n  switch (method) {\n    case 'GET':\n      try {\n        const books = await Book.find({//Sort here\n        });\n        res.status(200).json({\n          success: true,\n          data: books\n        });\n      } catch (error) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n\n    case 'POST':\n      try {\n        const book = await Book.create(req.body);\n        res.status(201).json({\n          success: true,\n          data: book\n        });\n      } catch (error) {\n        res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n\n    default:\n      res.status(400).json({\n        success: false\n      });\n      break;\n  }\n});","map":{"version":3,"sources":["C:/Users/danmo/book-trade/pages/api/books/index.js"],"names":["dbConnect","Book","req","res","title","author","method","books","find","status","json","success","data","error","book","create","body"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEAD,SAAS;AAET,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AAE/B;AACA,MAAIC,KAAK,GAAC,EAAV;AACA,MAAIC,MAAM,GAAC,EAAX;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,GAAnB;;AAEA,UAAOI,MAAP;AACI,SAAK,KAAL;AACI,UAAI;AAEA,cAAMC,KAAK,GAAG,MAAMN,IAAI,CAACO,IAAL,CAAU,CAC1B;AAD0B,SAAV,CAApB;AAMAL,QAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAEL;AAAvB,SAArB;AACH,OATD,CASE,OAAOM,KAAP,EAAc;AACZV,QAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAArB;AACH;;AAED;;AACJ,SAAK,MAAL;AACI,UAAI;AACA,cAAMG,IAAI,GAAG,MAAMb,IAAI,CAACc,MAAL,CAAYb,GAAG,CAACc,IAAhB,CAAnB;AAEAb,QAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAEE;AAAvB,SAArB;AACH,OAJD,CAIE,OAAOD,KAAP,EAAc;AACZV,QAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAArB;AAEH;;AACD;;AACJ;AACIR,MAAAA,GAAG,CAACM,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAArB;AACA;AA5BR;AAgCH,CAxCD","sourcesContent":["import dbConnect from '../../../utils/dbConnect';\r\nimport Book from '../../../modals/book';\r\n\r\ndbConnect();\r\n\r\nexport default async (req, res) => {\r\n\r\n    //variable for query\r\n    var title='';\r\n    var author='';\r\n\r\n    const { method } = req;\r\n\r\n    switch(method){\r\n        case 'GET':\r\n            try {\r\n                \r\n                const books = await Book.find({\r\n                    //Sort here\r\n\r\n                });\r\n                \r\n\r\n                res.status(200).json({ success: true, data: books })\r\n            } catch (error) {\r\n                res.status(400).json({ success: false });\r\n            }\r\n            \r\n            break;\r\n        case 'POST':\r\n            try {\r\n                const book = await Book.create(req.body);\r\n\r\n                res.status(201).json({ success: true, data: book })\r\n            } catch (error) {\r\n                res.status(400).json({ success: false });\r\n                \r\n            }\r\n            break;\r\n        default:\r\n            res.status(400).json({ success: false });\r\n            break;\r\n\r\n\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}