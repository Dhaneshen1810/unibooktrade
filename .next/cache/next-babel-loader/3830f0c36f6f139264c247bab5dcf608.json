{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from \"next/router\";\nimport Link from 'next/link'; //Getting book data from database\n\nimport fetch from 'isomorphic-unfetch';\nvar posts = withRouter(function (_ref) {\n  var _ref$router$query = _ref.router.query,\n      name = _ref$router$query.name,\n      id = _ref$router$query.id,\n      firstname = _ref$router$query.firstname,\n      mytitle = _ref$router$query.mytitle,\n      author = _ref$router$query.author,\n      books = _ref.books;\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"book-greeting\"\n  }, __jsx(\"div\", {\n    className: \"greeting-text\"\n  }, __jsx(\"p\", null, \"Name: \", name), __jsx(\"p\", null, \"Id: \", id), __jsx(\"p\", null, \"Firstname: \", firstname), __jsx(\"p\", null, \"title: \", mytitle), __jsx(\"p\", null, \"Author: \", author), __jsx(\"p\", null, \"Find your book by entering the \", __jsx(\"b\", null, \"Author\"), \" or \", __jsx(\"b\", null, \"Book name below.\")))), __jsx(\"div\", {\n    className: \"book-list\"\n  }, books.map(function (book) {\n    return __jsx(\"div\", {\n      key: book._id,\n      className: \"book-item\"\n    }, __jsx(\"p\", null, \"Title: \", book.title), __jsx(\"p\", null, \"Author: \", book.author));\n  })));\n});\n\nposts.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(mytitle) {\n    var res, _yield$res$json, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('book is');\n            console.log(mytitle.query.mytitle);\n            _context.next = 4;\n            return fetch('http://localhost:3000/api/books', {\n              headers: {\n                title: mytitle.query.mytitle,\n                author: mytitle.query.author\n              }\n            });\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            _yield$res$json = _context.sent;\n            data = _yield$res$json.data;\n            return _context.abrupt(\"return\", {\n              books: data\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default posts;","map":null,"metadata":{},"sourceType":"module"}