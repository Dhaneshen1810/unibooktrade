{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\danmo\\\\book-trade\\\\pages\\\\booklist.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from \"next/router\";\nimport Link from 'next/link'; //Getting book data from database\n\nimport fetch from 'isomorphic-unfetch';\nvar posts = withRouter(function (_ref) {\n  var _ref$router$query = _ref.router.query,\n      mytitle = _ref$router$query.mytitle,\n      author = _ref$router$query.author,\n      books = _ref.books;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"book-greeting\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"greeting-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, \"the title is \", mytitle), __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, \"Find your book by entering the \", __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }, \"Author\"), \" or \", __jsx(\"b\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 42\n    }\n  }, \"Book name below.\")))), __jsx(\"div\", {\n    className: \"book-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, books.map(function (book) {\n    var check = 0;\n\n    if (mytile == '' && author == '') {\n      return __jsx(\"div\", {\n        key: book._id,\n        className: \"book-item\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }\n      }, book.title, book.author);\n    } else {\n      if (book.title == mytitle || book.author == author) {\n        return __jsx(\"div\", {\n          key: book._id,\n          className: \"book-item\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }\n        }, book.title, book.author);\n      } else {}\n    }\n  })));\n});\nposts.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, _yield$res$json, data;\n\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('http://localhost:3000/api/books');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          _yield$res$json = _context.sent;\n          data = _yield$res$json.data;\n          return _context.abrupt(\"return\", {\n            books: data\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default posts;","map":{"version":3,"sources":["C:/Users/danmo/book-trade/pages/booklist.js"],"names":["withRouter","Link","fetch","posts","router","query","mytitle","author","books","map","book","check","mytile","_id","title","getInitialProps","res","json","data"],"mappings":";;;;;;;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAGA,IAAMC,KAAK,GAAGH,UAAU,CAAC;AAAA,+BAAGI,MAAH,CAAcC,KAAd;AAAA,MAAqBC,OAArB,qBAAqBA,OAArB;AAAA,MAA8BC,MAA9B,qBAA8BA,MAA9B;AAAA,MAAwCC,KAAxC,QAAwCA,KAAxC;AAAA,SAGrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAiBF,OAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,UACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADzB,CAFJ,CADJ,CANJ,EAqBI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCE,KAAK,CAACC,GAAN,CAAU,UAAAC,IAAI,EAAI;AACf,QAAIC,KAAK,GAAC,CAAV;;AAEA,QAAIC,MAAM,IAAE,EAAR,IAAcL,MAAM,IAAE,EAA1B,EAA6B;AACzB,aACI;AAAK,QAAA,GAAG,EAAEG,IAAI,CAACG,GAAf;AAAoB,QAAA,SAAS,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKH,IAAI,CAACI,KADV,EAEKJ,IAAI,CAACH,MAFV,CADJ;AAMH,KAPD,MAQI;AACA,UAAIG,IAAI,CAACI,KAAL,IAAcR,OAAd,IAAyBI,IAAI,CAACH,MAAL,IAAeA,MAA5C,EAAmD;AAG/C,eACI;AAAK,UAAA,GAAG,EAAEG,IAAI,CAACG,GAAf;AAAoB,UAAA,SAAS,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKH,IAAI,CAACI,KADV,EAEKJ,IAAI,CAACH,MAFV,CADJ;AAMH,OATD,MAWS,CAEJ;AAER;AAGJ,GA9BA,CADD,CArBJ,CAHqB;AAAA,CAAD,CAAxB;AAgEAJ,KAAK,CAACY,eAAN,yEAAwB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACFb,KAAK,CAAC,iCAAD,CADH;;AAAA;AACdc,UAAAA,GADc;AAAA;AAAA,iBAEGA,GAAG,CAACC,IAAJ,EAFH;;AAAA;AAAA;AAEZC,UAAAA,IAFY,mBAEZA,IAFY;AAAA,2CAId;AAAEV,YAAAA,KAAK,EAAEU;AAAT,WAJc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AASA,eAAef,KAAf","sourcesContent":["import { withRouter } from \"next/router\";\r\nimport Link from 'next/link';\r\n\r\n//Getting book data from database\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\n\r\nconst posts = withRouter(({ router:  { query:{mytitle, author}}, books} ) => (\r\n\r\n    \r\n    <div>\r\n\r\n\r\n    \r\n            \r\n        \r\n        <div className='book-greeting'>\r\n            <div className='greeting-text'>\r\n                <p>the title is {mytitle}</p> \r\n                <p>Find your book by entering \r\n                    the <b>Author</b> or <b>Book name\r\n                        below.\r\n                    </b>\r\n                </p>\r\n            </div>\r\n                \r\n            \r\n\r\n            \r\n        </div>\r\n        \r\n        <div className='book-list'>\r\n        {books.map(book => {\r\n            var check=0;\r\n\r\n            if (mytile=='' && author==''){\r\n                return (\r\n                    <div key={book._id} className='book-item'>\r\n                        {book.title}\r\n                        {book.author}\r\n                    </div>\r\n                )\r\n            }\r\n            else{\r\n                if (book.title == mytitle || book.author == author){\r\n\r\n            \r\n                    return (\r\n                        <div key={book._id} className='book-item'>\r\n                            {book.title}\r\n                            {book.author}\r\n                        </div>\r\n                    )\r\n                }\r\n                    \r\n                    else {\r\n                        \r\n                    }\r\n            \r\n            }\r\n\r\n            \r\n        })}\r\n        </div>\r\n        \r\n\r\n\r\n        \r\n    </div>\r\n));\r\n\r\nposts.getInitialProps = async () =>{\r\n    const res = await fetch('http://localhost:3000/api/books');\r\n    const { data } = await res.json();\r\n\r\n    return{ books: data }\r\n}\r\n  \r\n\r\n    \r\nexport default posts;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}