{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter, useRouter } from \"next/router\";\nimport Link from 'next/link';\nimport Router from \"next/router\";\nimport Head from 'next/head'; //Getting book data from database\n\nimport fetch from 'isomorphic-unfetch';\nimport { Confirm, Butto, Loader } from 'semantic-ui-react';\nimport { useState, useEffect } from \"react\";\nconst myprofile = withRouter(({\n  router: {\n    query: {\n      name,\n      id,\n      firstname,\n      mytitle,\n      author,\n      userEmail\n    }\n  },\n  books\n}) => {\n  const {\n    0: booklist,\n    1: setBooklist\n  } = useState([]);\n  const {\n    0: isDeleting,\n    1: setIsDeleting\n  } = useState(false);\n  const {\n    0: bookName,\n    1: setBookName\n  } = useState('null');\n  const {\n    0: bookID,\n    1: setBookID\n  } = useState(0);\n  const router = useRouter();\n  console.log('Email in myprofile is', userEmail);\n  useEffect(() => {\n    setBooklist(books);\n    console.log('books are: ');\n    console.log(booklist);\n\n    if (isDeleting) {\n      deleteBook();\n    }\n  }, [isDeleting]);\n\n  const deleteBook = async e => {\n    console.log(bookID);\n\n    try {\n      const deleted = await fetch('https://usedbooksexchange.com/api/books', {\n        //const deleted = await fetch('http://localhost:3000/api/books',{\n        method: 'DELETE',\n        headers: {\n          \"Accept\": 'application/json',\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: '',\n          author: '',\n          id: bookID\n        })\n      });\n    } catch (error) {}\n    /*\n    Router.push({\n        pathname: '/myprofile',\n        query: { \n                mytitle: '',\n                author: '',\n                name: name,\n                id: id,\n                firstname: firstname\n                \n        }\n    })\n    */\n\n\n    window.location.reload(false);\n  }; // The user clicks on the delete button\n\n\n  const handleDelete = async e => {\n    console.log(e.target);\n    setBookName(e.target.name);\n    setBookID(e.target.id);\n    setIsDeleting(true);\n  }; // The user clicks on the edit button\n  // The user is sent to the edit page\n  // The data about this particular book post is the to the page as well\n\n\n  const handleEdit = (myBookID, myTitle, myAuthor, imageData, price, userEmail) => {\n    //Update bookID\n    //setBookID(e.target.id);\n    //console.log('Book id: '+e.target.id);\n    console.log('Owner name: ' + name);\n    console.log('ownerID: ' + id);\n    Router.push({\n      pathname: '/edit',\n      query: {\n        name: name,\n        id: id,\n        firstname: firstname,\n        bookID: myBookID,\n        bookTitle: myTitle,\n        bookAuthor: myAuthor,\n        price: price,\n        userEmail: userEmail\n      }\n    }, '/edit');\n  }; //Handle page switch for header icons\n\n\n  const myProfile = () => {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname,\n        userEmail: userEmail\n      }\n    }, '/myprofile');\n  }; //Go to section to create new listing\n\n\n  const myBooks = () => {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname,\n        userEmail: userEmail\n      }\n    }, '/new');\n  };\n\n  const Search = () => {\n    Router.push({\n      pathname: '/posts',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname,\n        userEmail: userEmail\n      }\n    }, '/search');\n  };\n\n  const aboutUs = () => {\n    Router.push({\n      pathname: '/aboutus',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname,\n        userEmail: userEmail\n      }\n    }, '/aboutus');\n  };\n\n  if (books) {\n    return __jsx(\"div\", {\n      className: \"profile-page\"\n    }, __jsx(Head, null, __jsx(\"title\", null, \"My profile, MacEwan Book Trade\")), __jsx(\"div\", {\n      className: \"book-greeting-fixed\"\n    }, __jsx(\"div\", {\n      className: \"greeting-text\"\n    }, __jsx(\"div\", {\n      className: \"icon-box\"\n    }, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(\"img\", {\n      src: \"/icons/sign-out.png\",\n      alt: \"my image\",\n      className: \"my-icon\"\n    })), __jsx(\"img\", {\n      onClick: aboutUs,\n      src: \"/icons/info.svg\",\n      alt: \"About us\",\n      className: \"my-icon btn-aboutUs\"\n    }), __jsx(\"div\", {\n      className: \"my-icon-end\"\n    }, __jsx(\"img\", {\n      src: \"/icons/four-square.png\",\n      alt: \"my books\",\n      className: \"my-icon\",\n      onClick: myProfile\n    }), __jsx(\"img\", {\n      src: \"/icons/plus.png\",\n      alt: \"Add book\",\n      className: \"my-icon\",\n      onClick: myBooks\n    }), __jsx(\"img\", {\n      src: \"/icons/search.png\",\n      alt: \"Search\",\n      className: \"my-icon\",\n      onClick: Search\n    }))), __jsx(\"br\", null), __jsx(\"div\", {\n      className: \"myprofile-header\"\n    }, __jsx(\"p\", null, \"This is your collection\", __jsx(\"br\", null), \" You currently have \", books.length, \" posts\")), __jsx(\"br\", null))), __jsx(\"div\", {\n      className: \"book-list\"\n    }, booklist.map(book => {\n      //var imageBase64 = book.imageFront.contentType;\n      var imageData;\n      var base64data;\n\n      if (book.imageFront) {\n        imageData = book.imageFront.data;\n      } else {\n        console.log('no image');\n        imageData = '';\n      }\n\n      return __jsx(\"div\", {\n        key: book._id,\n        className: \"book-item-profile\"\n      }, __jsx(\"div\", {\n        className: \"section1\"\n      }, __jsx(\"div\", {\n        className: \"section1-image\"\n      }, __jsx(\"img\", {\n        src: imageData,\n        style: {\n          width: '100px',\n          height: '100px',\n          borderRadius: '20px'\n        }\n      })), __jsx(\"div\", {\n        className: \"section1-info\"\n      }, __jsx(\"p\", null, __jsx(\"b\", null, book.title)), __jsx(\"p\", null, book.author), __jsx(\"p\", null, \"$\", book.price))), __jsx(\"div\", {\n        className: \"section2\"\n      }, __jsx(\"div\", {\n        className: \"buttons-section\"\n      }, __jsx(\"button\", {\n        className: \"btn btn-success\",\n        style: {\n          width: '100px',\n          height: '45px'\n        },\n        onClick: () => handleEdit(book._id, book.title, book.author, imageData, book.price),\n        id: book._id,\n        name: book.title\n      }, \"Edit\"), __jsx(\"button\", {\n        className: \"btn btn-secondary\",\n        style: {\n          width: '100px',\n          height: '45px'\n        },\n        onClick: handleDelete,\n        id: book._id,\n        name: book.title\n      }, \"Delete\"))));\n    })));\n  } else {\n    return books;\n  }\n});\n\nmyprofile.getInitialProps = async mytitle => {\n  try {\n    const res = await fetch('https://usedbooksexchange.com/api/books', {\n      //const res = await fetch('http://localhost:3000/api/books', {\n      headers: {\n        title: mytitle.query.mytitle,\n        author: mytitle.query.author,\n        id: mytitle.query.id\n      }\n    });\n    const {\n      data\n    } = await res.json();\n    return {\n      books: data\n    };\n  } catch (error) {\n    return {\n      books: []\n    };\n  }\n};\n\nexport default myprofile;","map":null,"metadata":{},"sourceType":"module"}