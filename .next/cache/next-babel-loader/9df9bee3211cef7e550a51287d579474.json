{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dhaneshen/Documents/booktrade/unibooktrade/pages/testing.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { useRouter } from 'next/router';\nimport { withRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nvar contact = withRouter(_s(function (_ref) {\n  _s();\n\n  var _ref$router$query = _ref.router.query,\n      name = _ref$router$query.name,\n      id = _ref$router$query.id,\n      firstname = _ref$router$query.firstname,\n      bookID = _ref$router$query.bookID,\n      bookOwnerName = _ref$router$query.bookOwnerName,\n      ownerFirstName = _ref$router$query.ownerFirstName,\n      bookOwnerID = _ref$router$query.bookOwnerID,\n      bookTitle = _ref$router$query.bookTitle,\n      books = _ref.books;\n\n  var _useState = useState('Hi there ' + ownerFirstName + ', I am interested in your book, \"' + bookTitle + '\"!'),\n      defaultText = _useState[0],\n      setDefaultText = _useState[1];\n\n  var _useState2 = useState([]),\n      booklist = _useState2[0],\n      setBooklist = _useState2[1];\n  /* Deal with AWS SES */\n  // Load the AWS SDK for Node.js\n\n\n  var AWS = require('aws-sdk'); // Set the region \n\n\n  AWS.config.update({\n    region: 'us-east-2'\n  }); // Create sendBulkTemplatedEmail params \n\n  var params = {\n    Destinations: [\n    /* required */\n    {\n      Destination: {\n        /* required */\n        CcAddresses: ['booksexchangemessenger.com'\n        /* more items */\n        ],\n        ToAddresses: ['booksexchangemessenger.com' //'EMAIL_ADDRESS'\n\n        /* more items */\n        ]\n      },\n      ReplacementTemplateData: '{ \\\"REPLACEMENT_TAG_NAME\\\":\\\"REPLACEMENT_VALUE\\\" }'\n    }],\n    Source: 'booksexchangemessenger.com',\n\n    /* required */\n    Template: 'TEMPLATE_NAME',\n\n    /* required */\n    DefaultTemplateData: '{ \\\"REPLACEMENT_TAG_NAME\\\":\\\"REPLACEMENT_VALUE\\\" }',\n    ReplyToAddresses: ['booksexchangemessenger.com']\n  }; // Create the promise and SES service object\n\n  var sendPromise = new AWS.SES({\n    apiVersion: '2010-12-01'\n  }).sendBulkTemplatedEmail(params).promise();\n  /* End of AWS SES */\n  // Assign constant names to values obtained from 'booklist' via withRouter\n\n  useEffect(function () {\n    var userName = name;\n    var userID = id;\n    var userFirstname = firstname;\n    setBooklist(books);\n    console.log('booklist is');\n    console.log(booklist);\n  }); // Redirect to myprofile\n\n  var myProfile = function myProfile() {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname\n      }\n    });\n  }; // Redirect to new for creating new post\n\n\n  var myBooks = function myBooks() {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  }; // Redirect posts\n\n\n  var Search = function Search() {\n    Router.push({\n      pathname: '/posts',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  }; // Handle text in textArea\n\n\n  var handleChange = function handleChange(e) {\n    var value = e.target.value;\n    setDefaultText(value);\n  }; //Send email \n\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault();\n    var From = 'booksexchnagemessenger@gmail.com';\n    var To = 'dan.moonian@gmail.com';\n    console.log('Text: ' + defaultText);\n    console.log('sending mail'); // Handle promise's fulfilled/rejected states\n\n    sendPromise.then(function (data) {\n      console.log(data);\n    })[\"catch\"](function (err) {\n      console.log(err, err.stack);\n    });\n  }; // Display on screen\n\n\n  return __jsx(\"div\", {\n    className: \"contact-page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"book-greeting\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"greeting-text\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"icon-box\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/sign-out.png\",\n    alt: \"my image\",\n    className: \"my-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"my-icon-end\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/four-square.png\",\n    alt: \"my books\",\n    className: \"my-icon\",\n    onClick: myProfile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/plus.png\",\n    alt: \"Add book\",\n    className: \"my-icon\",\n    onClick: myBooks,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/search.png\",\n    alt: \"Search\",\n    className: \"my-icon\",\n    onClick: Search,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginTop: '4%',\n      padding: '10px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: '18px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 17\n    }\n  }, \"This is a collection of all the books matching your search\", __jsx(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }\n  }), __jsx(\"span\", {\n    style: {\n      fontSize: '16px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 22\n    }\n  }, \"Once you find the one you want, get in contact with the owner.\"))))), __jsx(\"div\", {\n    className: \"book-list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 1\n    }\n  }, booklist.map(function (book) {\n    //var imageBase64 = book.imageFront.contentType;\n    var imageData;\n    var base64data;\n\n    if (book.imageFront) {\n      imageData = book.imageFront.data;\n    } else {\n      console.log('no image');\n      imageData = '';\n    }\n\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 32\n      }\n    }, __jsx(\"div\", {\n      key: book._id,\n      className: \"bookInfo\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: \"contact-bookinfo-pic\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 33\n      }\n    }, __jsx(\"img\", {\n      src: imageData,\n      style: {\n        width: '200px',\n        height: '200px',\n        borderRadius: '20px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 37\n      }\n    })), __jsx(\"div\", {\n      className: \"contact-bookinfo-text\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 33\n      }\n    }, __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 37\n      }\n    }, \"Title: \", __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 47\n      }\n    }, book.title)), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 37\n      }\n    }, \"Author: \", __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 48\n      }\n    }, book.author)), __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 37\n      }\n    }, \"Owned by \", __jsx(\"b\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 49\n      }\n    }, bookOwnerName)))));\n  })), __jsx(\"form\", {\n    style: {\n      width: '90%',\n      marginTop: '7%'\n    },\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 9\n    }\n  }, __jsx(\"textarea\", {\n    type: \"text\",\n    id: \"lname\",\n    name: \"lname\",\n    value: defaultText,\n    onChange: handleChange,\n    className: \"contact-textBox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    style: {\n      marginTop: '4%'\n    },\n    className: \"btn btn-primary\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, \"Send message\")));\n}, \"hrNDcY3RlI7GhPUEdqhhFfezGl4=\")); // Get content from database \n\ncontact.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var res, _yield$res$json, data;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('ctx is');\n            console.log(ctx.query.bookOwnerID);\n            console.log(ctx.query.bookID);\n            _context.prev = 3;\n            _context.next = 6;\n            return fetch('http://localhost:3000/api/books', {\n              headers: {\n                title: '',\n                author: '',\n                id: ctx.query.bookOwnerID,\n                bookID: ctx.query.bookID\n              }\n            });\n\n          case 6:\n            res = _context.sent;\n            _context.next = 9;\n            return res.json();\n\n          case 9:\n            _yield$res$json = _context.sent;\n            data = _yield$res$json.data;\n            return _context.abrupt(\"return\", {\n              books: data\n            });\n\n          case 14:\n            _context.prev = 14;\n            _context.t0 = _context[\"catch\"](3);\n            return _context.abrupt(\"return\", {\n              books: []\n            });\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[3, 14]]);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default contact;","map":{"version":3,"sources":["/home/dhaneshen/Documents/booktrade/unibooktrade/pages/testing.js"],"names":["React","useState","useEffect","Link","Router","useRouter","withRouter","fetch","contact","router","query","name","id","firstname","bookID","bookOwnerName","ownerFirstName","bookOwnerID","bookTitle","books","defaultText","setDefaultText","booklist","setBooklist","AWS","require","config","update","region","params","Destinations","Destination","CcAddresses","ToAddresses","ReplacementTemplateData","Source","Template","DefaultTemplateData","ReplyToAddresses","sendPromise","SES","apiVersion","sendBulkTemplatedEmail","promise","userName","userID","userFirstname","console","log","myProfile","push","pathname","mytitle","author","myBooks","Search","handleChange","e","value","target","handleSubmit","preventDefault","From","To","then","data","err","stack","marginTop","padding","fontSize","map","book","imageData","base64data","imageFront","_id","width","height","borderRadius","title","getInitialProps","ctx","headers","res","json"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { useRouter } from 'next/router';\nimport { withRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\n\n\n\n\nconst contact = withRouter(({ router:  { query:{name, id, firstname, bookID, bookOwnerName, ownerFirstName,bookOwnerID, bookTitle}}, books} ) => {\n    const [defaultText, setDefaultText] = useState('Hi there '+ownerFirstName+', I am interested in your book, \"'+bookTitle+'\"!');\n    const [booklist, setBooklist] = useState([]);\n\n\n    /* Deal with AWS SES */\n    // Load the AWS SDK for Node.js\n    var AWS = require('aws-sdk');\n    // Set the region \n    AWS.config.update({region: 'us-east-2'});\n\n    // Create sendBulkTemplatedEmail params \n    var params = {\n        Destinations: [ /* required */\n        {\n            Destination: { /* required */\n            CcAddresses: [\n                'booksexchangemessenger.com',\n            /* more items */\n            ],\n            ToAddresses: [\n                'booksexchangemessenger.com'\n                //'EMAIL_ADDRESS'\n                /* more items */\n            ]\n            },\n            ReplacementTemplateData: '{ \\\"REPLACEMENT_TAG_NAME\\\":\\\"REPLACEMENT_VALUE\\\" }'\n        },\n        ],\n        Source: 'booksexchangemessenger.com', /* required */\n        Template: 'TEMPLATE_NAME', /* required */\n        DefaultTemplateData: '{ \\\"REPLACEMENT_TAG_NAME\\\":\\\"REPLACEMENT_VALUE\\\" }',\n        ReplyToAddresses: [\n        'booksexchangemessenger.com'\n        ]\n    };\n  \n  \n    // Create the promise and SES service object\n    var sendPromise = new AWS.SES({apiVersion: '2010-12-01'}).sendBulkTemplatedEmail(params).promise();\n\n    /* End of AWS SES */\n  \n\n\n\n\n\n    // Assign constant names to values obtained from 'booklist' via withRouter\n    useEffect(() => {\n        const userName = name;\n        const userID = id;\n        const userFirstname = firstname;\n\n        setBooklist(books)\n        console.log('booklist is')\n        console.log(booklist)\n\n    })\n\n    // Redirect to myprofile\n    const myProfile = () => {\n        Router.push({\n            pathname: '/myprofile',\n            query: { \n                    mytitle: '',\n                    author: '',\n                    name: name,\n                    id: id,\n                    firstname: firstname\n                    \n            }\n        });\n    }\n\n    // Redirect to new for creating new post\n    const myBooks = () => {\n        Router.push({\n            pathname: '/new',\n            query: { \n                    id: id,\n                    name: name,\n                    firstname: firstname\n                    \n            }\n        });\n    }\n\n    // Redirect posts\n    const Search = () => {\n        Router.push({\n            pathname: '/posts',\n            query: { \n                    id: id,\n                    name: name,\n                    firstname: firstname\n                    \n            }\n        });\n    }\n\n    // Handle text in textArea\n    const handleChange = (e) => { \n        const value = e.target.value;\n\n        setDefaultText(value);\n    }\n\n    //Send email \n    const handleSubmit = (e) => { \n        e.preventDefault();\n\n        const From = 'booksexchnagemessenger@gmail.com';\n        const To = 'dan.moonian@gmail.com';\n\n        console.log('Text: '+ defaultText)\n        \n        console.log('sending mail');\n\n\n        // Handle promise's fulfilled/rejected states\n        sendPromise.then(\n            function(data) {\n            console.log(data);\n            }).catch(\n            function(err) {\n            console.log(err, err.stack);\n            });\n\n\n\n    }\n\n    // Display on screen\n    return(\n        <div className='contact-page'>\n            <div className='book-greeting'>\n            <div className='greeting-text'>\n            <div className='icon-box'>\n                    <Link href='/'>\n                        <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\n                    </Link>\n                    \n                    <div className='my-icon-end'>\n                    <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\n                    \n                    <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\n                    <img src=\"/icons/search.png\" alt=\"Search\" className='my-icon' onClick={Search}/>\n                    \n                    </div>\n                    \n                </div>\n\n\n                <div style={{ marginTop:'4%', padding:'10px' }}>\n                    \n                <p style={{ fontSize:'18px' }}>This is a collection of all the books matching your search \n                \n                <br/><span style={{ fontSize: '16px' }}>Once you find the one you want, get in contact with the owner.</span></p>\n                \n                </div>\n            </div>\n            \n        </div>\n\n<div className='book-list'>\n        {booklist.map( book => {\n                \n                //var imageBase64 = book.imageFront.contentType;\n                var imageData;\n                var base64data;\n    \n                if (book.imageFront){\n                    \n                    imageData = book.imageFront.data;\n    \n                }\n                else{\n                    console.log('no image');\n                    imageData='';\n                }\n\n\n                        return (\n                               <div>\n                            \n                            \n                            \n                            <div key={book._id} className='bookInfo'>\n                                <div className='contact-bookinfo-pic'>\n                                    <img src={imageData}  style={{ width:'200px', height:'200px', borderRadius:'20px'}}/>\n\n                                </div>\n                                <div className='contact-bookinfo-text'>\n                                    <p>Title: <b>{book.title}</b></p>\n                                    <p>Author: <b>{book.author}</b></p>\n                                    <p>Owned by <b>{bookOwnerName}</b></p>\n                                </div>\n                                \n                            </div>\n    \n                            </div>\n                            \n                        )\n                        \n                    \n                }\n                \n                \n                )}\n                </div>\n\n        \n\n\n        <form style={{ width:'90%', marginTop:'7%' }}  onSubmit={handleSubmit}>\n            <textarea type=\"text\" \n                id=\"lname\" \n                name=\"lname\" \n                value= {defaultText}\n                onChange={handleChange}\n                className='contact-textBox'\n                />\n            <button style={{ marginTop: '4%' }} className='btn btn-primary'>Send message</button>\n        </form>\n\n        </div>\n    )\n\n});\n\n\n// Get content from database \ncontact.getInitialProps = async (ctx) =>{\n    console.log('ctx is');\n    console.log(ctx.query.bookOwnerID)\n    console.log(ctx.query.bookID)\n\n    try {\n\n        //const res = await fetch('https://unibooktrade.vercel.app/api/books', {\n            const res = await fetch('http://localhost:3000/api/books', {\n                headers: {\n                    title: '',\n                    author: '',\n                    id: ctx.query.bookOwnerID,\n                    bookID: ctx.query.bookID\n                }\n            });\n            const { data } = await res.json();\n        \n           \n           return{ books:data }\n           \n       } catch (error) {\n    \n        return { books: [] }\n           \n       }\n     \n }\n\nexport default contact;"]},"metadata":{},"sourceType":"module"}