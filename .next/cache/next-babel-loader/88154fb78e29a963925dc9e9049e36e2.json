{"ast":null,"code":"import mongoose from 'mongoose';\nconsole.log('inside dbConnect');\nconst connection = {}; //mongoose.set('useFindAndModify', false);\n\nconsole.log('Trying to connect to db.');\n\nasync function dbConnect() {\n  console.log('Above if statement.');\n\n  if (connection.isConnected) {\n    console.log('db on from first call');\n    return 1;\n  }\n\n  console.log('awaiting for db connection');\n  const db = await mongoose.connect(process.env.MONGO_URI, {//useNewUrlParser: true\n    //useUnifiedTopology: true\n  });\n\n  if (db.connections) {\n    console.log('\\nConnection exist');\n  } else {\n    console.log('no connections found');\n  }\n\n  connection.isConnected = db.connections[0].readyState;\n  console.log(connection.isConnected);\n  console.log('db is on.');\n\n  if (connection.isConnected) {\n    console.log('db on from second call');\n    return 1;\n  }\n}\n\nexport default dbConnect;","map":{"version":3,"sources":["C:/Users/danmo/book-trade/utils/dbConnect.js"],"names":["mongoose","console","log","connection","dbConnect","isConnected","db","connect","process","env","MONGO_URI","connections","readyState"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,UAArB;AAEAC,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEA,MAAMC,UAAU,GAAG,EAAnB,C,CACA;;AAGAF,OAAO,CAACC,GAAR,CAAY,0BAAZ;;AACA,eAAeE,SAAf,GAA0B;AAEtBH,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;;AAEA,MAAIC,UAAU,CAACE,WAAf,EAA4B;AACxBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,WAAO,CAAP;AACH;;AAGDD,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AAED,QAAMI,EAAE,GAAG,MAAMN,QAAQ,CAACO,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,SAA7B,EAAwC,CACxD;AACA;AAFwD,GAAxC,CAAjB;;AAMH,MAAIJ,EAAE,CAACK,WAAP,EAAmB;AACfV,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,GAFD,MAGI;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACH;;AAKGC,EAAAA,UAAU,CAACE,WAAX,GAAyBC,EAAE,CAACK,WAAH,CAAe,CAAf,EAAkBC,UAA3C;AACAX,EAAAA,OAAO,CAACC,GAAR,CAAYC,UAAU,CAACE,WAAvB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;;AACA,MAAIC,UAAU,CAACE,WAAf,EAA4B;AACxBJ,IAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACA,WAAO,CAAP;AACH;AAGJ;;AAED,eAAeE,SAAf","sourcesContent":["import mongoose from 'mongoose';\r\n\r\nconsole.log('inside dbConnect');\r\n\r\nconst connection = {};\r\n//mongoose.set('useFindAndModify', false);\r\n\r\n\r\nconsole.log('Trying to connect to db.');\r\nasync function dbConnect(){\r\n    \r\n    console.log('Above if statement.')\r\n    \r\n    if (connection.isConnected) {\r\n        console.log('db on from first call')\r\n        return 1;\r\n    }\r\n    \r\n\r\n    console.log('awaiting for db connection')\r\n    \r\n   const db = await mongoose.connect(process.env.MONGO_URI, {\r\n    //useNewUrlParser: true\r\n    //useUnifiedTopology: true\r\n})\r\n   \r\n\r\nif (db.connections){\r\n    console.log('\\nConnection exist')\r\n}\r\nelse{\r\n    console.log('no connections found')\r\n}\r\n\r\n  \r\n    \r\n\r\n    connection.isConnected = db.connections[0].readyState;\r\n    console.log(connection.isConnected);\r\n    console.log('db is on.')\r\n    if (connection.isConnected) {\r\n        console.log('db on from second call')\r\n        return 1;\r\n    }\r\n    \r\n\r\n}\r\n\r\nexport default dbConnect;"]},"metadata":{},"sourceType":"module"}