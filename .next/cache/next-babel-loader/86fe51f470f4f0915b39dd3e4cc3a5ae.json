{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danmo\\\\book-trade\\\\pages\\\\testing.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Link from 'next/link';\nimport { useState, useEffect } from 'react';\nimport fetch from 'isomorphic-unfetch';\nimport { useRouter, withRouter } from 'next/router';\nimport Router from 'next/router';\nimport { Form } from 'react-bootstrap';\nimport { Label } from 'semantic-ui-react';\nconst NewBook = withRouter(({\n  router: {\n    query: {\n      name,\n      id,\n      firstname\n    }\n  }\n}) => {\n  const {\n    0: form,\n    1: setForm\n  } = useState({\n    title: '',\n    author: '',\n    ownerID: '',\n    ownerName: ''\n  });\n  const {\n    0: isSubmitting,\n    1: setIsSubmitting\n  } = useState(false);\n  const {\n    0: errors,\n    1: setErrors\n  } = useState({});\n  const router = useRouter();\n  useEffect(() => {\n    if (isSubmitting) {\n      if (Object.keys(errors).length === 0) {\n        //bookmatch();\n        //alert('New book created')\n        createBook();\n        /*\r\n        Router.push({\r\n            pathname: '/booklist',\r\n            query: { \r\n                    mytitle: form.title,\r\n                    author: form.author\r\n                    \r\n            }\r\n        });*/\n      } else {\n        setIsSubmitting(false);\n      }\n    }\n  }, [errors]); //Create new book post\n\n  const createBook = async () => {\n    try {\n      //const res = await fetch('http://localhost:3000/api/books', {\n      const res = await fetch('https://unibooktrade.vercel.app/api/books', {\n        method: 'POST',\n        headers: {\n          \"Accept\": 'application/json',\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(form)\n      }); //Redirect to profile\n\n      Router.push({\n        pathname: '/myprofile',\n        query: {\n          id: id,\n          name: name,\n          firstname: firstname\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      ownerID: id,\n      ownerName: name\n    }));\n    let errs = validate();\n    setErrors(errs);\n    setIsSubmitting(true);\n  };\n\n  const handleChange = e => {\n    setForm(_objectSpread(_objectSpread({}, form), {}, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const validate = () => {\n    let err = {};\n    return err;\n  }; //Handle page switch for header icons\n\n\n  const myProfile = () => {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname\n      }\n    });\n  }; //Go to section to create new listing\n\n\n  const myBooks = () => {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  const Search = () => {\n    Router.push({\n      pathname: '/posts',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  const image1Upload = e => {\n    console.log('changed');\n    console.log(e.target);\n  };\n\n  return __jsx(\"div\", {\n    className: \"newBook-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"book-greeting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"greeting-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"icon-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/sign-out.png\",\n    alt: \"my image\",\n    className: \"my-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"my-icon-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/four-square.png\",\n    alt: \"my books\",\n    className: \"my-icon\",\n    onClick: myProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/plus.png\",\n    alt: \"Add book\",\n    className: \"my-icon\",\n    onClick: myBooks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/search.png\",\n    alt: \"Search\",\n    className: \"my-icon\",\n    onClick: Search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 21\n    }\n  }))), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, \"Name: \", name), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, \"firstName: \", firstname), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }\n  }, \"Id: \", id), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 17\n    }\n  }, \"Post a book.\"))), __jsx(\"form\", {\n    className: \"create-book-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"form-group my-group\",\n    style: {\n      marginTop: '5%'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control new-book-input\",\n    id: \"exampleInputEmail1\",\n    placeholder: \"Enter book title\",\n    name: \"title\",\n    required: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  })), __jsx(\"div\", {\n    className: \"form-group my-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    className: \"form-control new-book-input\",\n    placeholder: \"Enter Author\",\n    name: \"author\",\n    onChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }\n  }), __jsx(\"label\", {\n    className: \"input-file-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    name: \"file\",\n    id: \"input-files\",\n    className: \"input-file-btn\",\n    onChange: image1Upload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  })), __jsx(\"label\", {\n    for: \"file-upload\",\n    className: \"input-file-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 15\n    }\n  }, \"Custom Upload\"), __jsx(\"input\", {\n    id: \"file-upload\",\n    type: \"file\",\n    onChange: image1Upload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    className: \"btn btn-primary my-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 17\n    }\n  }, \"POST\"))));\n});\nexport default NewBook;","map":{"version":3,"sources":["C:/Users/danmo/book-trade/pages/testing.js"],"names":["Link","useState","useEffect","fetch","useRouter","withRouter","Router","Form","Label","NewBook","router","query","name","id","firstname","form","setForm","title","author","ownerID","ownerName","isSubmitting","setIsSubmitting","errors","setErrors","Object","keys","length","createBook","res","method","headers","body","JSON","stringify","push","pathname","error","console","log","handleSubmit","e","preventDefault","errs","validate","handleChange","target","value","err","myProfile","mytitle","myBooks","Search","image1Upload","marginTop"],"mappings":"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","sourcesContent":["import Link from 'next/link';\r\nimport { useState, useEffect } from 'react';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport { useRouter, withRouter } from 'next/router';\r\nimport Router from 'next/router';\r\n\r\nimport { Form } from 'react-bootstrap';\r\nimport { Label } from 'semantic-ui-react';\r\n\r\n\r\nconst NewBook = withRouter(({ router:  { query:{name, id, firstname}}} ) => {\r\n    const [form, setForm] = useState({ title:'', author:'', ownerID:'', ownerName:''}\r\n    );\r\n    const [isSubmitting, setIsSubmitting] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const router = useRouter();\r\n\r\n\r\n    useEffect(() => {\r\n        if (isSubmitting){\r\n            if (Object.keys(errors).length ===0){\r\n                //bookmatch();\r\n\r\n                //alert('New book created')\r\n\r\n                createBook();\r\n                /*\r\n                Router.push({\r\n                    pathname: '/booklist',\r\n                    query: { \r\n                            mytitle: form.title,\r\n                            author: form.author\r\n                            \r\n                    }\r\n                });*/\r\n              \r\n            }\r\n            else{\r\n                setIsSubmitting(false);\r\n            }\r\n        }\r\n    }, [errors])\r\n\r\n\r\n    //Create new book post\r\n    const createBook = async () => {\r\n        try {\r\n            \r\n            //const res = await fetch('http://localhost:3000/api/books', {\r\n            const res = await fetch('https://unibooktrade.vercel.app/api/books', {\r\n                method: 'POST',\r\n                headers: {\r\n                    \"Accept\": 'application/json',\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify(form)\r\n                \r\n               \r\n               \r\n            })\r\n            \r\n            //Redirect to profile\r\n            Router.push({\r\n                pathname: '/myprofile',\r\n                query: { \r\n                        id: id,\r\n                        name: name,\r\n                        firstname: firstname\r\n                        \r\n                }\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n\r\n        }\r\n    }\r\n\r\n    const handleSubmit = (e) => { \r\n        e.preventDefault();\r\n\r\n\r\n        setForm({\r\n            ...form,\r\n                 ownerID: id,\r\n                 ownerName: name\r\n        })\r\n\r\n        let errs = validate();\r\n        setErrors(errs);\r\n        setIsSubmitting(true);\r\n\r\n\r\n    }\r\n    const handleChange = (e) => { \r\n        setForm({\r\n            ...form,\r\n                [e.target.name]: e.target.value\r\n            \r\n        })\r\n    }\r\n\r\n    const validate = () => {\r\n        let err = {};\r\n\r\n        \r\n        return err;\r\n    }\r\n\r\n        //Handle page switch for header icons\r\n        const myProfile = () => {\r\n            Router.push({\r\n                pathname: '/myprofile',\r\n                query: { \r\n                        mytitle: '',\r\n                        author: '',\r\n                        name: name,\r\n                        id: id,\r\n                        firstname: firstname\r\n                        \r\n                }\r\n            });\r\n        }\r\n    \r\n        //Go to section to create new listing\r\n        const myBooks = () => {\r\n            Router.push({\r\n                pathname: '/new',\r\n                query: { \r\n                        id: id,\r\n                        name: name,\r\n                        firstname: firstname\r\n                        \r\n                }\r\n            });\r\n        }\r\n\r\n        const Search = () => {\r\n            Router.push({\r\n                pathname: '/posts',\r\n                query: { \r\n                        id: id,\r\n                        name: name,\r\n                        firstname: firstname\r\n                        \r\n                }\r\n            });\r\n        }\r\n\r\n        const image1Upload = (e) => {\r\n            console.log('changed');\r\n            console.log(e.target);\r\n        }\r\n\r\n    return (\r\n        <div className='newBook-page'>\r\n            <div className='book-greeting'>\r\n            <div className='greeting-text'>\r\n            <div className='icon-box'>\r\n                    <Link href='/'>\r\n                        <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\r\n                    </Link>\r\n                    \r\n                    <div className='my-icon-end'>\r\n                    <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\r\n                    \r\n                    <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\r\n                    \r\n                    <img src=\"/icons/search.png\" alt=\"Search\" className='my-icon' onClick={Search}/>\r\n                    </div>\r\n                    \r\n\r\n\r\n                    \r\n            </div>\r\n\r\n\r\n            <p>Name: {name}</p>\r\n            <p>firstName: {firstname}</p>\r\n            <p>Id: {id}</p>\r\n                <p>Post a book.\r\n                </p>\r\n\r\n\r\n                \r\n            </div>\r\n                \r\n        </div>\r\n           \r\n        <form className='create-book-form' onSubmit={handleSubmit}>\r\n        <div className=\"form-group my-group\" style={{marginTop:'5%'}}>\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control new-book-input\" \r\n                    id=\"exampleInputEmail1\" \r\n                    placeholder=\"Enter book title\"\r\n                    name=\"title\"\r\n                    required\r\n                    onChange={handleChange}/>\r\n                    \r\n                </div>\r\n                <div className=\"form-group my-group\">\r\n                <input \r\n                    type=\"text\" \r\n                    className=\"form-control new-book-input\" \r\n                    placeholder=\"Enter Author\"\r\n                    name='author'\r\n                    onChange={handleChange}\r\n                    required\r\n                    />\r\n                \r\n                <label className='input-file-btn'>\r\n                <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                id=\"input-files\"\r\n                className='input-file-btn'\r\n                onChange={image1Upload}\r\n              />\r\n              </label>\r\n\r\n              <label for=\"file-upload\" className=\"input-file-btn\" >\r\n                Custom Upload\r\n            </label>\r\n            <input id=\"file-upload\" type=\"file\" onChange={image1Upload}/>\r\n              \r\n              \r\n \r\n  \r\n                <button type=\"submit\" className=\"btn btn-primary my-btn\">POST</button>\r\n                </div>\r\n                </form>\r\n            \r\n        </div>\r\n    )\r\n});\r\n\r\nexport default NewBook;"]},"metadata":{},"sourceType":"module"}