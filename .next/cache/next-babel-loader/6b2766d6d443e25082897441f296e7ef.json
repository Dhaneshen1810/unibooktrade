{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danmo\\\\book-trade\\\\pages\\\\booklist.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from \"next/router\";\nimport Link from 'next/link'; //Getting book data from database\n\nimport fetch from 'isomorphic-unfetch';\nimport { useState, useEffect } from 'react';\nconst posts = withRouter(({\n  router: {\n    query: {\n      mytitle,\n      author\n    }\n  },\n  books\n}) => {\n  const {\n    0: book,\n    1: setbook\n  } = useState([]);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"book-greeting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"greeting-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }, \"Find your book by entering the \", __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, \"Author\"), \" or \", __jsx(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 42\n    }\n  }, \"Book name below.\")))), __jsx(\"div\", {\n    className: \"book-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, books.map(book => {\n    //if (mytitle=='' && author==''){\n    return __jsx(\"div\", {\n      key: book._id,\n      className: \"book-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, \"Title: \", book.title), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, \"Author: \", book.author)); //}\n\n    /*\r\n    else{\r\n        if (book.title == mytitle || book.author == author){\r\n      \r\n            return (\r\n                <div key={book._id} className='book-item'>\r\n                    {book.title}\r\n                    <p>Book author:</p>\r\n                    {book.author}\r\n                </div>\r\n            )\r\n        }\r\n            \r\n            else {\r\n                \r\n            }\r\n    \r\n    }*/\n  })));\n});\n\nposts.getInitialProps = async () => {\n  const res = await fetch('http://localhost:3000/api/books');\n  const {\n    data\n  } = await res.json();\n  return {\n    books: data\n  };\n};\n\nexport default posts;","map":{"version":3,"sources":["C:/Users/danmo/book-trade/pages/booklist.js"],"names":["withRouter","Link","fetch","useState","useEffect","posts","router","query","mytitle","author","books","book","setbook","map","_id","title","getInitialProps","res","data","json"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAGA,MAAMC,KAAK,GAAGL,UAAU,CAAC,CAAC;AAAEM,EAAAA,MAAM,EAAG;AAAEC,IAAAA,KAAK,EAAC;AAACC,MAAAA,OAAD;AAAUC,MAAAA;AAAV;AAAR,GAAX;AAAuCC,EAAAA;AAAvC,CAAD,KAAoD;AAEzE,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBT,QAAQ,CAAC,EAAD,CAAhC;AACA,SAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,UACyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADzB,CADJ,CADJ,CANJ,EAiBI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCO,KAAK,CAACG,GAAN,CAAWF,IAAI,IAAI;AAGhB;AACI,WACI;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACG,GAAf;AAAoB,MAAA,SAAS,EAAC,WAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAWH,IAAI,CAACI,KAAhB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAYJ,IAAI,CAACF,MAAjB,CAFJ,CADJ,CAJY,CAYhB;;AACA;;;;;;;;;;;;;;;;;;AAqBH,GAlCA,CADD,CAjBJ,CAJA;AA2DF,CA9DsB,CAAxB;;AAkEAJ,KAAK,CAACW,eAAN,GAAwB,YAAW;AAC/B,QAAMC,GAAG,GAAG,MAAMf,KAAK,CAAC,iCAAD,CAAvB;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAW,MAAMD,GAAG,CAACE,IAAJ,EAAvB;AAEA,SAAM;AAAET,IAAAA,KAAK,EAAEQ;AAAT,GAAN;AACH,CALD;;AAQA,eAAeb,KAAf","sourcesContent":["import { withRouter } from \"next/router\";\r\nimport Link from 'next/link';\r\n\r\n//Getting book data from database\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nimport { useState, useEffect } from 'react';\r\n\r\n\r\nconst posts = withRouter(({ router:  { query:{mytitle, author}}, books} ) => {\r\n\r\n    const [book, setbook] = useState([]);\r\n    return(\r\n    \r\n\r\n    \r\n    <div>\r\n\r\n\r\n    \r\n            \r\n        \r\n        <div className='book-greeting'>\r\n            <div className='greeting-text'>\r\n                <p>Find your book by entering \r\n                    the <b>Author</b> or <b>Book name\r\n                        below.\r\n                    </b>\r\n                </p>\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n        <div className='book-list'>\r\n        {books.map( book => {\r\n            \r\n           \r\n            //if (mytitle=='' && author==''){\r\n                return (\r\n                    <div key={book._id} className='book-item'>\r\n                        <p>Title: {book.title}</p>\r\n                        <p>Author: {book.author}</p>\r\n                        \r\n                    </div>\r\n                )\r\n        \r\n            //}\r\n            /*\r\n            else{\r\n                if (book.title == mytitle || book.author == author){\r\n\r\n            \r\n                    return (\r\n                        <div key={book._id} className='book-item'>\r\n                            {book.title}\r\n                            <p>Book author:</p>\r\n                            {book.author}\r\n                        </div>\r\n                    )\r\n                }\r\n                    \r\n                    else {\r\n                        \r\n                    }\r\n            \r\n            }*/\r\n\r\n            \r\n        })}\r\n        </div>        \r\n    </div>\r\n)});\r\n\r\n\r\n\r\nposts.getInitialProps = async () =>{\r\n    const res = await fetch('http://localhost:3000/api/books');\r\n    const { data } = await res.json();\r\n\r\n    return{ books: data }\r\n}\r\n\r\n    \r\nexport default posts;"]},"metadata":{},"sourceType":"module"}