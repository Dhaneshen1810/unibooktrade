{"ast":null,"code":"import dbConnect from '../../../utils/dbConnect';\nimport Book from '../../../modals/book';\ndbConnect();\nexport default (async (req, res) => {\n  const {\n    query: {\n      id\n    },\n    method\n  } = req;\n  console.log('method is ' + method);\n\n  switch (method) {\n    case 'GET':\n      try {\n        const book = await Book.findById(id);\n\n        if (!book) {\n          return res.status(400).json({\n            success: false\n          });\n        }\n\n        res.status(200).json({\n          success: true,\n          data: book\n        });\n      } catch (error) {\n        return res.status(400).json({\n          success: false\n        });\n      }\n\n      break;\n\n    case 'PUT':\n      try {\n        const book = await Book.findByIdAndUpdate(id, req.body, {\n          new: true,\n          runValidators: true\n        });\n\n        if (!book) {\n          return res.status(400).json({\n            success: '!book'\n          });\n        }\n\n        res.status(200).json({\n          success: true,\n          data: book\n        });\n      } catch (error) {\n        return res.status(400).json({\n          success: id\n        });\n      }\n\n      break;\n\n    case 'DELETE':\n      console.log('Set to delete: ' + id);\n\n      try {\n        const deletedBook = await Book.deleteOne({\n          _id: id\n        });\n\n        if (!deletedBook) {\n          return res.status(400).json({\n            success: false\n          });\n        }\n\n        res.status(200).json({\n          success: true,\n          data: {}\n        });\n      } catch (error) {\n        return res.status(400).json({\n          success: 'some error happenn'\n        });\n      }\n\n      break;\n\n    default:\n      res.status(400).json({\n        success: false\n      });\n      break;\n  }\n});","map":null,"metadata":{},"sourceType":"module"}