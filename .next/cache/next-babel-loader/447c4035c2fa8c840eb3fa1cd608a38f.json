{"ast":null,"code":"import dbConnect from '../../../utils/dbConnect';\nimport Book from '../../../modals/book';\ndbConnect();\nexport default (async (req, res) => {\n  const {\n    method\n  } = req;\n  const myTitle = req.headers.title;\n  const myAuthor = req.headers.author;\n  console.log('title is ' + myTitle);\n  console.log('author is ' + myAuthor); // In case we have only the author as input, we will looking\n  // for all books with that author\n\n  if (myTitle == '' && myAuthor != '') {\n    console.log('No title');\n\n    switch (method) {\n      case 'GET':\n        try {\n          const books = await Book.find({\n            //Sort here\n            //'title': myTitle\n            'author': myAuthor\n          });\n          res.status(200).json({\n            success: true,\n            data: books\n          });\n        } catch (error) {\n          res.status(400).json({\n            success: false\n          });\n        }\n\n        break;\n\n      case 'POST':\n        try {\n          const book = await Book.create(req.body);\n          res.status(201).json({\n            success: true,\n            data: book\n          });\n        } catch (error) {\n          res.status(400).json({\n            success: false\n          });\n        }\n\n        break;\n\n      default:\n        res.status(400).json({\n          success: false\n        });\n        break;\n    }\n  } //In case only the title is given as input,\n  // Look for all books with that title\n  else if (myAuthor == '' && myTitle != '') {\n      console.log('No author');\n\n      switch (method) {\n        case 'GET':\n          try {\n            const books = await Book.find({\n              //Sort here\n              'title': myTitle //'author': 'Robert Kiyosaki'\n\n            });\n            res.status(200).json({\n              success: true,\n              data: books\n            });\n          } catch (error) {\n            res.status(400).json({\n              success: false\n            });\n          }\n\n          break;\n\n        case 'POST':\n          try {\n            const book = await Book.create(req.body);\n            res.status(201).json({\n              success: true,\n              data: book\n            });\n          } catch (error) {\n            res.status(400).json({\n              success: false\n            });\n          }\n\n          break;\n\n        default:\n          res.status(400).json({\n            success: false\n          });\n          break;\n      }\n    }\n  /*\r\n      switch(method){\r\n          case 'GET':\r\n              try {\r\n                  \r\n                  const books = await Book.find({\r\n                      //Sort here\r\n                      'title': myTitle\r\n                      //'author': 'Robert Kiyosaki'\r\n                  });\r\n                  \r\n  \r\n                  res.status(200).json({ success: true, data: books })\r\n              } catch (error) {\r\n                  res.status(400).json({ success: false });\r\n              }\r\n              \r\n              break;\r\n          case 'POST':\r\n              try {\r\n                  const book = await Book.create(req.body);\r\n  \r\n                  res.status(201).json({ success: true, data: book })\r\n              } catch (error) {\r\n                  res.status(400).json({ success: false });\r\n                  \r\n              }\r\n              break;\r\n          default:\r\n              res.status(400).json({ success: false });\r\n              break;\r\n      }\r\n      */\n\n});","map":null,"metadata":{},"sourceType":"module"}