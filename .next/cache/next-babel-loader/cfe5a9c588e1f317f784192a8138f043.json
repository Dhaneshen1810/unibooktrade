{"ast":null,"code":"import dbConnect from '../../../utils/dbConnect';\nimport Book from '../../../modals/book';\ndbConnect();\n/*\r\nexport default async (req, res) => {\r\n    const { method } = req;\r\n\r\n    switch(method){\r\n        case 'GET':\r\n            try{\r\n                const books = await Book.find({});\r\n\r\n                res.status(200).json({ success: true, data: books })\r\n            }catch(error){\r\n                res.status(400).json({ success: false });\r\n            }\r\n            break;\r\n        case 'POST':\r\n            try {\r\n                const book = await Book.create(req.body);\r\n\r\n                res.status(201).json({ success: true, data: book })\r\n            } catch (error) {\r\n                res.status(400).json({ success: false });\r\n                \r\n            }\r\n            break;\r\n        default:\r\n            res.status(400).json({ success: false });\r\n            break;\r\n\r\n\r\n    }\r\n}\r\n*/\n\nexport default (async (req, res) => {\n  res.json({\n    test: 'test'\n  });\n});","map":{"version":3,"sources":["C:/Users/danmo/book-trade/pages/api/books/index.js"],"names":["dbConnect","Book","req","res","json","test"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,0BAAtB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEAD,SAAS;AACT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,gBAAe,OAAOE,GAAP,EAAYC,GAAZ,KAAoB;AAC/BA,EAAAA,GAAG,CAACC,IAAJ,CAAS;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAT;AACH,CAFD","sourcesContent":["import dbConnect from '../../../utils/dbConnect';\r\nimport Book from '../../../modals/book';\r\n\r\ndbConnect();\r\n/*\r\nexport default async (req, res) => {\r\n    const { method } = req;\r\n\r\n    switch(method){\r\n        case 'GET':\r\n            try{\r\n                const books = await Book.find({});\r\n\r\n                res.status(200).json({ success: true, data: books })\r\n            }catch(error){\r\n                res.status(400).json({ success: false });\r\n            }\r\n            break;\r\n        case 'POST':\r\n            try {\r\n                const book = await Book.create(req.body);\r\n\r\n                res.status(201).json({ success: true, data: book })\r\n            } catch (error) {\r\n                res.status(400).json({ success: false });\r\n                \r\n            }\r\n            break;\r\n        default:\r\n            res.status(400).json({ success: false });\r\n            break;\r\n\r\n\r\n    }\r\n}\r\n*/\r\n\r\nexport default async (req, res) => {\r\n    res.json({ test: 'test'});\r\n}"]},"metadata":{},"sourceType":"module"}