{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter, useRouter } from \"next/router\";\nimport Link from 'next/link';\nimport Router from \"next/router\"; //Getting book data from database\n\nimport fetch from 'isomorphic-unfetch';\nimport { Confirm, Butto, Loader } from 'semantic-ui-react';\nimport { useState, useEffect } from \"react\";\nconst myprofile = withRouter(({\n  router: {\n    query: {\n      name,\n      id,\n      firstname,\n      mytitle,\n      author\n    }\n  },\n  books\n}) => {\n  const {\n    0: isDeleting,\n    1: setIsDeleting\n  } = useState(false);\n  const {\n    0: bookName,\n    1: setBookName\n  } = useState('null');\n  const {\n    0: bookID,\n    1: setBookID\n  } = useState(0);\n  const router = useRouter();\n  useEffect(() => {\n    if (isDeleting) {\n      deleteBook();\n    }\n  }, [isDeleting]);\n\n  const deleteBook = async e => {\n    console.log('Book to delete: ' + bookName + ' with id: ' + bookID);\n\n    try {\n      const deleted = await fetch('http://localhost:3000/api/books/' + bookID, {\n        method: \"DELETE\"\n      });\n    } catch (error) {}\n\n    window.location.reload(false);\n  };\n\n  const handleDelete = async e => {\n    console.log(e.target);\n    setBookName(e.target.name);\n    setBookID(e.target.id);\n    setIsDeleting(true);\n  }; //Handle page switch for header icons\n\n\n  const myProfile = () => {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname\n      }\n    });\n  }; //Go to section to create new listing\n\n\n  const myBooks = () => {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    className: \"book-greeting\"\n  }, __jsx(\"div\", {\n    className: \"greeting-text\"\n  }, __jsx(\"div\", {\n    className: \"icon-box\"\n  }, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"img\", {\n    src: \"/icons/sign-out.png\",\n    alt: \"my image\",\n    className: \"my-icon\"\n  })), __jsx(\"div\", {\n    className: \"my-icon-end\"\n  }, __jsx(\"img\", {\n    src: \"/icons/four-square.png\",\n    alt: \"my books\",\n    className: \"my-icon\",\n    onClick: myProfile\n  }), __jsx(\"img\", {\n    src: \"/icons/plus.png\",\n    alt: \"Add book\",\n    className: \"my-icon\",\n    onClick: myBooks\n  }))), __jsx(\"p\", null, \"Name: \", name), __jsx(\"p\", null, \"Id: \", id), __jsx(\"p\", null, \"Firstname: \", firstname), __jsx(\"p\", null, \"title: \", mytitle), __jsx(\"p\", null, \"Author: \", author), __jsx(\"p\", null, \"Find your book by entering the \", __jsx(\"b\", null, \"Author\"), \" or \", __jsx(\"b\", null, \"Book name below.\")))), __jsx(\"div\", {\n    className: \"book-list\"\n  }, books.map(book => {\n    return __jsx(\"div\", {\n      className: \"book-item-section\"\n    }, __jsx(\"div\", {\n      key: book._id,\n      className: \"book-item-profile\"\n    }, __jsx(\"p\", null, \"Title: \", book.title), __jsx(\"p\", null, \"Author: \", book.author), __jsx(\"p\", null, \"Owner: \", book.ownerID)), __jsx(\"div\", {\n      className: \"book-delete-section\"\n    }, __jsx(\"img\", {\n      src: \"/icons/cross.png\",\n      className: \"delete-icon\",\n      onClick: handleDelete,\n      id: book._id,\n      name: book.title\n    })));\n  })));\n});\n\nmyprofile.getInitialProps = async mytitle => {\n  const res = await fetch('http://localhost:3000/api/books', {\n    headers: {\n      title: mytitle.query.mytitle,\n      author: mytitle.query.author\n    }\n  });\n  const {\n    data\n  } = await res.json();\n  return {\n    books: data\n  };\n};\n\nexport default myprofile;","map":null,"metadata":{},"sourceType":"module"}