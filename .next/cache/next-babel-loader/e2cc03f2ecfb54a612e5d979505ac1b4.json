{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danmo\\\\book-trade\\\\pages\\\\posts.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from \"next/router\";\nimport Link from 'next/link'; //Getting book data from database\n\nimport fetch from 'isomorphic-unfetch';\ndbConnect();\nconst posts = withRouter(({\n  router: {\n    query: {\n      name,\n      id,\n      firstName\n    }\n  }\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }\n}, \"Hello there, \", name), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }\n}, \"Hello there, \", firstName), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n}, \"Your ID is: \", id)));\n\nposts.getInitialProps = async () => {\n  const res = await fetch('http://localhost:3000/api/notes');\n  const {\n    data\n  } = await res.json();\n  console.log('data is: ...');\n  return {\n    books: data\n  };\n};\n\nexport default posts;","map":{"version":3,"sources":["C:/Users/danmo/book-trade/pages/posts.js"],"names":["withRouter","Link","fetch","dbConnect","posts","router","query","name","id","firstName","getInitialProps","res","data","json","console","log","books"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAEAC,SAAS;AAET,MAAMC,KAAK,GAAGJ,UAAU,CAAC,CAAC;AAAEK,EAAAA,MAAM,EAAG;AAAEC,IAAAA,KAAK,EAAC;AAACC,MAAAA,IAAD;AAAOC,MAAAA,EAAP;AAAWC,MAAAA;AAAX;AAAR;AAAX,CAAD,KACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBF,IAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBE,SAAjB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgBD,EAAhB,CAHJ,CADoB,CAAxB;;AAUAJ,KAAK,CAACM,eAAN,GAAwB,YAAW;AAC/B,QAAMC,GAAG,GAAG,MAAMT,KAAK,CAAC,iCAAD,CAAvB;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAW,MAAMD,GAAG,CAACE,IAAJ,EAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,SAAM;AAAEC,IAAAA,KAAK,EAAEJ;AAAT,GAAN;AACH,CAND;;AAUA,eAAeR,KAAf","sourcesContent":["import { withRouter } from \"next/router\";\r\nimport Link from 'next/link';\r\n\r\n//Getting book data from database\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\ndbConnect();\r\n\r\nconst posts = withRouter(({ router:  { query:{name, id, firstName}}} ) => (\r\n    <div>\r\n        <p>Hello there, {name}</p>\r\n        <p>Hello there, {firstName}</p>\r\n        <p>Your ID is: {id}</p>\r\n\r\n        \r\n    </div>\r\n));\r\n\r\nposts.getInitialProps = async () =>{\r\n    const res = await fetch('http://localhost:3000/api/notes');\r\n    const { data } = await res.json();\r\n\r\n    console.log('data is: ...')\r\n    return{ books: data }\r\n}\r\n  \r\n\r\n    \r\nexport default posts;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}