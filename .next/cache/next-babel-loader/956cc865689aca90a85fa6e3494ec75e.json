{"ast":null,"code":"var _jsxFileName = \"/home/dhaneshen/Documents/booktrade/unibooktrade/pages/contact.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nimport { withRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport { Credentials } from 'aws-sdk';\nconst contact = withRouter(({\n  router: {\n    query: {\n      name,\n      id,\n      firstname,\n      bookID,\n      bookOwnerName,\n      ownerFirstName,\n      bookOwnerID,\n      bookTitle,\n      userEmail,\n      ownerEmail\n    }\n  },\n  books\n}) => {\n  const {\n    0: booklist,\n    1: setBooklist\n  } = useState([]);\n  const {\n    0: sendTo,\n    1: setSendTo\n  } = useState('mailto:' + userEmail);\n  /* Deal with AWS SES */\n  // Load the AWS SDK for Node.js\n\n  var AWS = require('aws-sdk'); //AWS.config.loadFromPath('./config.json');\n  // Set the region \n\n  /*\n  AWS.config.update({\n      region: 'ca-central-1'\n      \n  });\n  */\n\n\n  AWS.config.update({\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,\n    region: \"us-east-2\"\n  });\n  console.log('email is ' + ownerEmail); // Create the promise and SES service object\n  //var sendPromise = new AWS.SES({apiVersion: '2010-12-01'}).sendBulkTemplatedEmail(params).promise();\n\n  /* End of AWS SES */\n  // Assign constant names to values obtained from 'booklist' via withRouter\n\n  useEffect(() => {\n    const userName = name;\n    const userID = id;\n    const userFirstname = firstname;\n    setBooklist(books);\n    console.log('booklist is');\n    console.log(booklist);\n  }); // Redirect to myprofile\n\n  const myProfile = () => {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname,\n        userEmail: userEmail\n      }\n    });\n  }; // Redirect to new for creating new post\n\n\n  const myBooks = () => {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname,\n        userEmail: userEmail\n      }\n    });\n  }; // Redirect posts\n\n\n  const Search = () => {\n    Router.push({\n      pathname: '/posts',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname,\n        userEmail: userEmail\n      }\n    });\n  };\n\n  const aboutUs = () => {\n    Router.push({\n      pathname: '/aboutus',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname,\n        userEmail: userEmail\n      }\n    });\n  }; // Display on screen\n\n\n  return __jsx(\"div\", {\n    className: \"contact-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"Contact owner, MacEwan Book Trade\")), __jsx(\"div\", {\n    className: \"book-greeting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"greeting-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"icon-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/sign-out.png\",\n    alt: \"my image\",\n    className: \"my-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 25\n    }\n  })), __jsx(\"img\", {\n    onClick: aboutUs,\n    src: \"/icons/info.svg\",\n    alt: \"About us\",\n    className: \"my-icon btn-aboutUs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }), __jsx(\"div\", {\n    className: \"my-icon-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/four-square.png\",\n    alt: \"my books\",\n    className: \"my-icon\",\n    onClick: myProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/plus.png\",\n    alt: \"Add book\",\n    className: \"my-icon\",\n    onClick: myBooks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/search.png\",\n    alt: \"Search\",\n    className: \"my-icon\",\n    onClick: Search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginTop: '3%',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: '18px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, \"Here is all the information we have.\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }), __jsx(\"span\", {\n    style: {\n      fontSize: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 22\n    }\n  }, \"Contact \", bookOwnerName, \" for more.\"))))), __jsx(\"div\", {\n    className: \"contact-item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 1\n    }\n  }, booklist.map(book => {\n    //var imageBase64 = book.imageFront.contentType;\n    var imageData;\n\n    if (book.imageFront) {\n      imageData = book.imageFront.data;\n    } else {\n      console.log('no image');\n      imageData = '';\n    }\n\n    return __jsx(\"div\", {\n      key: book._id,\n      className: \"bookInfo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 29\n      }\n    }, __jsx(\"div\", {\n      className: \"contact-bookinfo-pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 33\n      }\n    }, __jsx(\"img\", {\n      src: imageData,\n      className: \"contact-book-pic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 37\n      }\n    })), __jsx(\"div\", {\n      className: \"contact-bookinfo-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 33\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 37\n      }\n    }, \"Title: \", __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 47\n      }\n    }, book.title)), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 37\n      }\n    }, \"Author: \", __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 48\n      }\n    }, book.author)), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 37\n      }\n    }, \"Owned by \", __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 49\n      }\n    }, bookOwnerName)), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 37\n      }\n    }, \"Asking price: \", __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 54\n      }\n    }, \"$\", book.price)), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 37\n      }\n    }, \"Posted on: \", __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 51\n      }\n    }, book.postedOn))));\n  })), __jsx(\"button\", {\n    className: \"btn btn-primary email-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, __jsx(\"a\", {\n    style: {\n      color: 'white'\n    },\n    href: sendTo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, \"Contact \", bookOwnerName)), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 17\n    }\n  }), __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 22\n    }\n  }));\n}); // Get content from database \n\ncontact.getInitialProps = async ctx => {\n  console.log('ctx is');\n  console.log(ctx.query.bookOwnerID);\n  console.log(ctx.query.bookID);\n\n  try {\n    const res = await fetch('https://usedbooksexchange.com/api/books', {\n      //const res = await fetch('http://localhost:3000/api/books', {\n      headers: {\n        title: '',\n        author: '',\n        id: ctx.query.bookOwnerID,\n        bookID: ctx.query.bookID\n      }\n    });\n    const {\n      data\n    } = await res.json();\n    return {\n      books: data\n    };\n  } catch (error) {\n    return {\n      books: []\n    };\n  }\n};\n\nexport default contact;","map":{"version":3,"sources":["/home/dhaneshen/Documents/booktrade/unibooktrade/pages/contact.js"],"names":["React","useState","useEffect","Link","Router","useRouter","Head","withRouter","fetch","Credentials","contact","router","query","name","id","firstname","bookID","bookOwnerName","ownerFirstName","bookOwnerID","bookTitle","userEmail","ownerEmail","books","booklist","setBooklist","sendTo","setSendTo","AWS","require","config","update","accessKeyId","process","env","AWS_ACCESS_KEY_ID","secretAccessKey","AWS_SECRET_ACCESS_KEY","region","console","log","userName","userID","userFirstname","myProfile","push","pathname","mytitle","author","myBooks","Search","aboutUs","marginTop","padding","fontSize","map","book","imageData","imageFront","data","_id","title","price","postedOn","color","getInitialProps","ctx","res","headers","json","error"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,WAAT,QAA4B,SAA5B;AAKA,MAAMC,OAAO,GAAGH,UAAU,CAAC,CAAC;AAAEI,EAAAA,MAAM,EAAG;AAAEC,IAAAA,KAAK,EAAC;AAACC,MAAAA,IAAD;AAAOC,MAAAA,EAAP;AAAWC,MAAAA,SAAX;AAAsBC,MAAAA,MAAtB;AAA8BC,MAAAA,aAA9B;AAA6CC,MAAAA,cAA7C;AAA4DC,MAAAA,WAA5D;AAAyEC,MAAAA,SAAzE;AAAoFC,MAAAA,SAApF;AAA+FC,MAAAA;AAA/F;AAAR,GAAX;AAAgIC,EAAAA;AAAhI,CAAD,KAA6I;AACpK,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BxB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACyB,MAAD;AAAA,OAASC;AAAT,MAAsB1B,QAAQ,CAAC,YAAUoB,SAAX,CAApC;AAGA;AACA;;AAEA,MAAIO,GAAG,GAAGC,OAAO,CAAC,SAAD,CAAjB,CARoK,CAUpK;AAEA;;AACA;;;;;;;;AAQDD,EAAAA,GAAG,CAACE,MAAJ,CAAWC,MAAX,CAAkB;AACjBC,IAAAA,WAAW,EAAEC,OAAO,CAACC,GAAR,CAAYC,iBADR;AAEjBC,IAAAA,eAAe,EAAEH,OAAO,CAACC,GAAR,CAAYG,qBAFZ;AAGjBC,IAAAA,MAAM,EAAE;AAHS,GAAlB;AAQCC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAYlB,UAAxB,EA7BoK,CAqCpK;AACA;;AAEA;AAOA;;AACApB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMuC,QAAQ,GAAG5B,IAAjB;AACA,UAAM6B,MAAM,GAAG5B,EAAf;AACA,UAAM6B,aAAa,GAAG5B,SAAtB;AAEAU,IAAAA,WAAW,CAACF,KAAD,CAAX;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAZ;AAEH,GATQ,CAAT,CAhDoK,CA2DpK;;AACA,QAAMoB,SAAS,GAAG,MAAM;AACpBxC,IAAAA,MAAM,CAACyC,IAAP,CAAY;AACRC,MAAAA,QAAQ,EAAE,YADF;AAERlC,MAAAA,KAAK,EAAE;AACCmC,QAAAA,OAAO,EAAE,EADV;AAECC,QAAAA,MAAM,EAAE,EAFT;AAGCnC,QAAAA,IAAI,EAAEA,IAHP;AAICC,QAAAA,EAAE,EAAEA,EAJL;AAKCC,QAAAA,SAAS,EAAEA,SALZ;AAMCM,QAAAA,SAAS,EAACA;AANX;AAFC,KAAZ;AAYH,GAbD,CA5DoK,CA2EpK;;;AACA,QAAM4B,OAAO,GAAG,MAAM;AAClB7C,IAAAA,MAAM,CAACyC,IAAP,CAAY;AACRC,MAAAA,QAAQ,EAAE,MADF;AAERlC,MAAAA,KAAK,EAAE;AACCE,QAAAA,EAAE,EAAEA,EADL;AAECD,QAAAA,IAAI,EAAEA,IAFP;AAGCE,QAAAA,SAAS,EAAEA,SAHZ;AAICM,QAAAA,SAAS,EAACA;AAJX;AAFC,KAAZ;AAUH,GAXD,CA5EoK,CAyFpK;;;AACA,QAAM6B,MAAM,GAAG,MAAM;AACjB9C,IAAAA,MAAM,CAACyC,IAAP,CAAY;AACRC,MAAAA,QAAQ,EAAE,QADF;AAERlC,MAAAA,KAAK,EAAE;AACCE,QAAAA,EAAE,EAAEA,EADL;AAECD,QAAAA,IAAI,EAAEA,IAFP;AAGCE,QAAAA,SAAS,EAAEA,SAHZ;AAICM,QAAAA,SAAS,EAACA;AAJX;AAFC,KAAZ;AAUH,GAXD;;AAaA,QAAM8B,OAAO,GAAG,MAAM;AAClB/C,IAAAA,MAAM,CAACyC,IAAP,CAAY;AACRC,MAAAA,QAAQ,EAAE,UADF;AAERlC,MAAAA,KAAK,EAAE;AACCE,QAAAA,EAAE,EAAEA,EADL;AAECD,QAAAA,IAAI,EAAEA,IAFP;AAGCE,QAAAA,SAAS,EAAEA,SAHZ;AAICM,QAAAA,SAAS,EAACA;AAJX;AAFC,KAAZ;AAUH,GAXD,CAvGoK,CAyHpK;;;AACA,SACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCADJ,CADA,EAII;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACQ,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAC,qBAAT;AAA+B,IAAA,GAAG,EAAC,UAAnC;AAA8C,IAAA,SAAS,EAAC,SAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADR,EAIQ;AAAK,IAAA,OAAO,EAAE8B,OAAd;AAAuB,IAAA,GAAG,EAAC,iBAA3B;AAA6C,IAAA,GAAG,EAAC,UAAjD;AAA4D,IAAA,SAAS,EAAC,qBAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJR,EAOQ;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,GAAG,EAAC,wBAAT;AAAkC,IAAA,GAAG,EAAC,UAAtC;AAAiD,IAAA,SAAS,EAAC,SAA3D;AAAqE,IAAA,OAAO,EAAEP,SAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA;AAAK,IAAA,GAAG,EAAC,iBAAT;AAA2B,IAAA,GAAG,EAAC,UAA/B;AAA0C,IAAA,SAAS,EAAC,SAApD;AAA8D,IAAA,OAAO,EAAEK,OAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,EAIA;AAAK,IAAA,GAAG,EAAC,mBAAT;AAA6B,IAAA,GAAG,EAAC,QAAjC;AAA0C,IAAA,SAAS,EAAC,SAApD;AAA8D,IAAA,OAAO,EAAEC,MAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJA,CAPR,CADA,EAmBI;AAAK,IAAA,KAAK,EAAE;AAAEE,MAAAA,SAAS,EAAC,IAAZ;AAAkBC,MAAAA,OAAO,EAAC;AAA1B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEA;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAC;AAAX,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,EAEK;AAAM,IAAA,KAAK,EAAE;AAAEA,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA4CrC,aAA5C,eAFL,CAFA,CAnBJ,CADA,CAJJ,EAsCR;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACSO,QAAQ,CAAC+B,GAAT,CAAcC,IAAI,IAAI;AAGf;AACA,QAAIC,SAAJ;;AAEA,QAAID,IAAI,CAACE,UAAT,EAAoB;AAEhBD,MAAAA,SAAS,GAAGD,IAAI,CAACE,UAAL,CAAgBC,IAA5B;AAEH,KAJD,MAKI;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAiB,MAAAA,SAAS,GAAC,EAAV;AACH;;AAGO,WAEI;AAAK,MAAA,GAAG,EAAED,IAAI,CAACI,GAAf;AAAoB,MAAA,SAAS,EAAC,UAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEH,SAAV;AAAsB,MAAA,SAAS,EAAC,kBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAKI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACK,KAAT,CAAV,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIL,IAAI,CAACR,MAAT,CAAX,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI/B,aAAJ,CAAZ,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAKuC,IAAI,CAACM,KAAV,CAAjB,CAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIN,IAAI,CAACO,QAAT,CAAd,CALJ,CALJ,CAFJ;AAsBP,GAvCR,CADT,CAtCQ,EAoFQ;AAAQ,IAAA,SAAS,EAAC,2BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAG,IAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAC;AAAR,KAAV;AAA6B,IAAA,IAAI,EAAEtC,MAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAoDT,aAApD,CADA,CApFR,EAwFQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxFR,EAwFa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxFb,CADJ;AAoGH,CA9NyB,CAA1B,C,CAiOA;;AACAP,OAAO,CAACuD,eAAR,GAA0B,MAAOC,GAAP,IAAc;AACpC3B,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY0B,GAAG,CAACtD,KAAJ,CAAUO,WAAtB;AACAoB,EAAAA,OAAO,CAACC,GAAR,CAAY0B,GAAG,CAACtD,KAAJ,CAAUI,MAAtB;;AAEA,MAAI;AAEA,UAAMmD,GAAG,GAAG,MAAM3D,KAAK,CAAC,yCAAD,EAA4C;AAC/D;AACI4D,MAAAA,OAAO,EAAE;AACLP,QAAAA,KAAK,EAAE,EADF;AAELb,QAAAA,MAAM,EAAE,EAFH;AAGLlC,QAAAA,EAAE,EAAEoD,GAAG,CAACtD,KAAJ,CAAUO,WAHT;AAILH,QAAAA,MAAM,EAAEkD,GAAG,CAACtD,KAAJ,CAAUI;AAJb;AAFkD,KAA5C,CAAvB;AASI,UAAM;AAAE2C,MAAAA;AAAF,QAAW,MAAMQ,GAAG,CAACE,IAAJ,EAAvB;AAGD,WAAM;AAAE9C,MAAAA,KAAK,EAACoC;AAAR,KAAN;AAEH,GAhBJ,CAgBK,OAAOW,KAAP,EAAc;AAEf,WAAO;AAAE/C,MAAAA,KAAK,EAAE;AAAT,KAAP;AAEA;AAEN,CA3BF;;AA6BA,eAAeb,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head'\nimport { withRouter } from 'next/router';\nimport fetch from 'isomorphic-unfetch';\nimport { Credentials } from 'aws-sdk';\n\n\n\n\nconst contact = withRouter(({ router:  { query:{name, id, firstname, bookID, bookOwnerName, ownerFirstName,bookOwnerID, bookTitle, userEmail, ownerEmail}}, books} ) => {\n    const [booklist, setBooklist] = useState([]);\n    const [sendTo, setSendTo] = useState('mailto:'+userEmail)\n\n\n    /* Deal with AWS SES */\n    // Load the AWS SDK for Node.js\n    \n    var AWS = require('aws-sdk');\n\n    //AWS.config.loadFromPath('./config.json');\n\n    // Set the region \n    /*\n    AWS.config.update({\n        region: 'ca-central-1'\n        \n    });\n    */\n\n\n   AWS.config.update({\n    accessKeyId: process.env.AWS_ACCESS_KEY_ID,\n    secretAccessKey: process.env.AWS_SECRET_ACCESS_KEY,\n    region: \"us-east-2\"    \n});\n\n\n\n    console.log('email is '+ownerEmail)\n\n\n\n\n    \n  \n  \n    // Create the promise and SES service object\n    //var sendPromise = new AWS.SES({apiVersion: '2010-12-01'}).sendBulkTemplatedEmail(params).promise();\n\n    /* End of AWS SES */\n  \n\n\n\n\n\n    // Assign constant names to values obtained from 'booklist' via withRouter\n    useEffect(() => {\n        const userName = name;\n        const userID = id;\n        const userFirstname = firstname;\n\n        setBooklist(books)\n        console.log('booklist is')\n        console.log(booklist)\n\n    })\n\n    // Redirect to myprofile\n    const myProfile = () => {\n        Router.push({\n            pathname: '/myprofile',\n            query: { \n                    mytitle: '',\n                    author: '',\n                    name: name,\n                    id: id,\n                    firstname: firstname,\n                    userEmail:userEmail\n                    \n            }\n        });\n    }\n\n    // Redirect to new for creating new post\n    const myBooks = () => {\n        Router.push({\n            pathname: '/new',\n            query: { \n                    id: id,\n                    name: name,\n                    firstname: firstname,\n                    userEmail:userEmail\n                    \n            }\n        });\n    }\n\n    // Redirect posts\n    const Search = () => {\n        Router.push({\n            pathname: '/posts',\n            query: { \n                    id: id,\n                    name: name,\n                    firstname: firstname,\n                    userEmail:userEmail\n                    \n            }\n        });\n    }\n\n    const aboutUs = () => {\n        Router.push({\n            pathname: '/aboutus',\n            query: { \n                    id: id,\n                    name: name,\n                    firstname: firstname,\n                    userEmail:userEmail\n                    \n            }\n        });\n    }\n\n\n\n\n    \n\n    // Display on screen\n    return(\n        <div className='contact-page'>\n        <Head>\n            <title>Contact owner, MacEwan Book Trade</title>\n        </Head>\n            <div className='book-greeting'>\n            <div className='greeting-text'>\n            <div className='icon-box'>\n                    <Link href='/'>\n                        <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\n                    </Link>\n                    <img onClick={aboutUs} src=\"/icons/info.svg\" alt=\"About us\" className='my-icon btn-aboutUs'/>\n\n                    \n                    <div className='my-icon-end'>\n                    <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\n                    \n                    <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\n                    <img src=\"/icons/search.png\" alt=\"Search\" className='my-icon' onClick={Search}/>\n                    \n                    </div>\n                    \n                </div>\n\n\n                <div style={{ marginTop:'3%', padding:'10px' }}>\n                    \n                <p style={{ fontSize:'18px' }}>Here is all the information we have.\n                \n                <br/><span style={{ fontSize: '16px' }}>Contact {bookOwnerName} for more.</span></p>\n                \n                \n                </div>\n                \n            </div>\n            \n        </div>\n\n\n<div className='contact-item'>\n        {booklist.map( book => {\n\n                \n                //var imageBase64 = book.imageFront.contentType;\n                var imageData;\n    \n                if (book.imageFront){\n                    \n                    imageData = book.imageFront.data;\n    \n                }\n                else{\n                    console.log('no image');\n                    imageData='';\n                }\n\n\n                        return (\n                            \n                            <div key={book._id} className='bookInfo'>\n                                <div className='contact-bookinfo-pic'>\n                                    <img src={imageData}  className='contact-book-pic'/>\n\n                                </div>\n                                <div className='contact-bookinfo-text'>\n                                    <p>Title: <b>{book.title}</b></p>\n                                    <p>Author: <b>{book.author}</b></p>\n                                    <p>Owned by <b>{bookOwnerName}</b></p>\n                                    <p>Asking price: <b>${book.price}</b></p>\n                                    <p>Posted on: <b>{book.postedOn}</b></p>\n\n                                </div>\n                                \n                            </div>\n    \n                            \n                        )\n                        \n                    \n                }\n                \n                \n                )}\n                </div>\n\n                <button className='btn btn-primary email-btn'>\n                <a style={{ color:'white' }} href={sendTo}>Contact {bookOwnerName}</a>\n\n                </button>\n                <br/><br/>\n\n\n        \n\n\n        \n\n        </div>\n    )\n\n});\n\n\n// Get content from database \ncontact.getInitialProps = async (ctx) =>{\n    console.log('ctx is');\n    console.log(ctx.query.bookOwnerID)\n    console.log(ctx.query.bookID)\n\n    try {\n\n        const res = await fetch('https://usedbooksexchange.com/api/books', {\n            //const res = await fetch('http://localhost:3000/api/books', {\n                headers: {\n                    title: '',\n                    author: '',\n                    id: ctx.query.bookOwnerID,\n                    bookID: ctx.query.bookID\n                }\n            });\n            const { data } = await res.json();\n        \n           \n           return{ books:data }\n           \n       } catch (error) {\n    \n        return { books: [] }\n           \n       }\n     \n }\n\nexport default contact;"]},"metadata":{},"sourceType":"module"}