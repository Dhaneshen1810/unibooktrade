{"ast":null,"code":"var _jsxFileName = \"/home/dhaneshen/Documents/booktrade/unibooktrade/pages/testing.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from \"next/router\";\nimport Router from \"next/router\";\nimport Link from 'next/link'; //Getting book data from database\n\nimport fetch from 'isomorphic-unfetch';\nimport { useState, useEffect } from \"react\";\nconst posts = withRouter(({\n  router: {\n    query: {\n      name,\n      id,\n      firstname,\n      mytitle,\n      author\n    }\n  },\n  books\n}) => {\n  // User chooses to view all available books\n  const viewAll = () => {\n    Router.push({\n      pathname: '/booklist',\n      query: {\n        name: name,\n        id: id,\n        firstname: firstname,\n        mytitle: '',\n        author: ''\n      }\n    });\n  };\n\n  const myProfile = () => {\n    Router.push({\n      pathname: '/myprofile',\n      query: {\n        mytitle: '',\n        author: '',\n        name: name,\n        id: id,\n        firstname: firstname\n      }\n    });\n  };\n\n  const myBooks = () => {\n    Router.push({\n      pathname: '/new',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  };\n\n  const Search = () => {\n    Router.push({\n      pathname: '/posts',\n      query: {\n        id: id,\n        name: name,\n        firstname: firstname\n      }\n    });\n  }; // Redirect to contact page\n  // Information transferred are user, book and bookowner information\n\n\n  const Contact = (bookID, bookOwnerName, bookTitle) => {\n    var splitFullName = bookOwnerName.split(\" \");\n    var ownerFirstName = splitFullName[0];\n    Router.push({\n      pathname: '/contact',\n      query: {\n        //User information\n        id: id,\n        name: name,\n        firstname: firstname,\n        //Book information\n        bookID: bookID,\n        bookTitle: bookTitle,\n        //book owner information\n        bookOwnerName: bookOwnerName,\n        ownerFirstName: ownerFirstName\n      }\n    });\n  };\n\n  return __jsx(\"div\", {\n    className: \"booklist-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"book-greeting\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"greeting-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"icon-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/sign-out.png\",\n    alt: \"my image\",\n    className: \"my-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  })), __jsx(\"div\", {\n    className: \"my-icon-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: \"/icons/four-square.png\",\n    alt: \"my books\",\n    className: \"my-icon\",\n    onClick: myProfile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/plus.png\",\n    alt: \"Add book\",\n    className: \"my-icon\",\n    onClick: myBooks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }), __jsx(\"img\", {\n    src: \"/icons/search.png\",\n    alt: \"Search\",\n    className: \"my-icon\",\n    onClick: Search,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }))), __jsx(\"div\", {\n    style: {\n      marginTop: '4%',\n      padding: '10px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 17\n    }\n  }, __jsx(\"p\", {\n    style: {\n      fontSize: '18px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, \"This is a collection of all the books matching your search\", __jsx(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }), __jsx(\"span\", {\n    style: {\n      fontSize: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 22\n    }\n  }, \"Once you find the one you want, get in contact with the owner.\"))))), __jsx(\"div\", {\n    className: \"book-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, books.map(book => {\n    //processing image data\n    var imageData;\n\n    if (book.imageFront) {\n      console.log('image');\n      console.log(book.imageFront.contentType);\n      imageData = book.imageFront.data;\n      console.log(imageData);\n      console.log('length: ' + imageData.length);\n    } else {\n      console.log('no image'); //using dummy data if image data is not present\n\n      imageData = 'eweffwf';\n    }\n\n    return __jsx(\"div\", {\n      key: book._id,\n      className: \"book-item\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: \"item-section1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    }, __jsx(\"img\", {\n      src: imageData,\n      style: {\n        width: '110px',\n        height: '110px',\n        borderRadius: '10px',\n        marginTop: '10px',\n        marginLeft: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 25\n      }\n    })), __jsx(\"div\", {\n      className: \"item-section2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 25\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, book.title), __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, book.author), __jsx(\"a\", {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => Contact(book._id, book.ownerName, book.title),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 119\n      }\n    }, \"Contact \", book.ownerName))));\n  })));\n});\n\nposts.getInitialProps = async ctx => {\n  //const res = await fetch('https://unibooktrade.vercel.app/api/books', {\n  const res = await fetch('http://localhost:3000/api/books', {\n    headers: {\n      title: ctx.query.mytitle,\n      author: ctx.query.author\n    }\n  });\n  const {\n    data\n  } = await res.json();\n  return {\n    books: data\n  };\n};\n\nexport default posts;","map":{"version":3,"sources":["/home/dhaneshen/Documents/booktrade/unibooktrade/pages/testing.js"],"names":["withRouter","Router","Link","fetch","useState","useEffect","posts","router","query","name","id","firstname","mytitle","author","books","viewAll","push","pathname","myProfile","myBooks","Search","Contact","bookID","bookOwnerName","bookTitle","splitFullName","split","ownerFirstName","marginTop","padding","fontSize","map","book","imageData","imageFront","console","log","contentType","data","length","_id","width","height","borderRadius","marginLeft","title","cursor","ownerName","getInitialProps","ctx","res","headers","json"],"mappings":"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","sourcesContent":["import { withRouter } from \"next/router\";\nimport Router from \"next/router\";\nimport Link from 'next/link';\n\n//Getting book data from database\nimport fetch from 'isomorphic-unfetch';\n\nimport { useState, useEffect } from \"react\";\n\n\n\n\nconst posts = withRouter(({ router:  { query:{name, id, firstname, mytitle, author}}, books} ) => {\n    \n\n    // User chooses to view all available books\n    const viewAll = () => {\n\n        Router.push({\n            pathname: '/booklist',\n            query: { \n                name: name,\n                id: id,\n                firstname: firstname,\n                mytitle: '',\n                author: ''\n                    \n            }\n        });\n    }\n\n    const myProfile = () => {\n        Router.push({\n            pathname: '/myprofile',\n            query: { \n                    mytitle: '',\n                    author: '',\n                    name: name,\n                    id: id,\n                    firstname: firstname\n                    \n            }\n        });\n    }\n\n    const myBooks = () => {\n        Router.push({\n            pathname: '/new',\n            query: { \n                    id: id,\n                    name: name,\n                    firstname: firstname\n                    \n            }\n        });\n    }\n\n    const Search = () => {\n        Router.push({\n            pathname: '/posts',\n            query: { \n                    id: id,\n                    name: name,\n                    firstname: firstname\n                    \n            }\n        });\n    }\n\n    // Redirect to contact page\n    // Information transferred are user, book and bookowner information\n    const Contact = (bookID, bookOwnerName, bookTitle) => {\n        var splitFullName = bookOwnerName.split(\" \");\n        var ownerFirstName = splitFullName[0];\n\n        Router.push({\n            pathname: '/contact',\n            query: { \n                    //User information\n                    id: id,\n                    name: name,\n                    firstname: firstname,\n                    //Book information\n                    bookID: bookID,\n                    bookTitle: bookTitle,\n                    //book owner information\n                    bookOwnerName: bookOwnerName,\n                    ownerFirstName: ownerFirstName\n            }\n        });\n    }\n\n\n    return(\n\n    <div className='booklist-page'>\n\n\n        <div className='book-greeting'>\n            <div className='greeting-text'>\n            <div className='icon-box'>\n                    <Link href='/'>\n                        <img src=\"/icons/sign-out.png\" alt=\"my image\" className='my-icon'/>\n                    </Link>\n                    \n                    <div className='my-icon-end'>\n                    <img src=\"/icons/four-square.png\" alt=\"my books\" className='my-icon' onClick={myProfile}/>\n                    \n                    <img src=\"/icons/plus.png\" alt=\"Add book\" className='my-icon' onClick={myBooks}/>\n                    <img src=\"/icons/search.png\" alt=\"Search\" className='my-icon' onClick={Search}/>\n                    \n                    </div>\n                    \n                </div>\n\n\n                <div style={{ marginTop:'4%', padding:'10px' }}>\n                    \n                <p style={{ fontSize:'18px' }}>This is a collection of all the books matching your search \n                \n                <br/><span style={{ fontSize: '16px' }}>Once you find the one you want, get in contact with the owner.</span></p>\n                \n                </div>\n            </div>\n            \n        </div>\n        \n        <div className='book-list'>\n              \n      \n        {books.map( book => {\n            //processing image data\n            var imageData;\n\n            if (book.imageFront){\n                console.log('image')\n                console.log(book.imageFront.contentType)\n                \n                imageData = book.imageFront.data;\n                console.log(imageData)\n                console.log('length: '+ imageData.length);\n            }\n            else{\n                console.log('no image');\n                //using dummy data if image data is not present\n                imageData='eweffwf';\n            }\n            \n    \n                return (\n\n                    <div key={book._id} className='book-item'>\n                        <div className='item-section1'>\n                        <img src={imageData}  style={{ width:'110px', height:'110px', borderRadius:'10px', marginTop:'10px', marginLeft:'10px'}}/>\n                        </div>\n                        <div className='item-section2'>\n                        <p>{book.title}</p>\n                        <p>{book.author}</p>\n                        <a style={{ cursor:'pointer' }} onClick={() => Contact(book._id, book.ownerName, book.title)}><b>Contact {book.ownerName}</b></a>\n                        </div>\n                        \n                    </div>\n                )\n        \n            \n        })}\n\n    \n    \n        </div>        \n    </div>\n)\n\n\n\n});\n\n\nposts.getInitialProps = async (ctx) =>{\n    \n        //const res = await fetch('https://unibooktrade.vercel.app/api/books', {\n        const res = await fetch('http://localhost:3000/api/books', {\n        headers: {\n            title: ctx.query.mytitle,\n            author: ctx.query.author\n        }\n    });\n\n    \n  \n        const { data } = await res.json();\n\n        \n\n        return{ books: data }\n   \n    \n}\n\n    \nexport default posts;"]},"metadata":{},"sourceType":"module"}