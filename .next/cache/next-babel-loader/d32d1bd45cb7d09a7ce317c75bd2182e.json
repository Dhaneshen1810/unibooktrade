{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\danmo\\\\book-trade\\\\pages\\\\posts.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { withRouter } from \"next/router\";\nimport Link from 'next/link'; //Getting book data from database\n\nimport fetch from 'isomorphic-unfetch';\nimport books from \"./api/books\";\nconst posts = withRouter(({\n  router: {\n    query: {\n      name,\n      id,\n      firstName\n    }\n  }\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }\n}, \"Hello there, \", name), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }\n}, \"Hello there, \", firstName), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n}, \"Your ID is: \", id), books.map(book => {\n  return __jsx(\"div\", {\n    key: book._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, book.title);\n})));\n\nposts.getInitialProps = async () => {\n  const res = await fetch('http://localhost:3000/api/books');\n  const {\n    data\n  } = await res.json();\n  return {\n    books: data\n  };\n};\n\nexport default posts;","map":{"version":3,"sources":["C:/Users/danmo/book-trade/pages/posts.js"],"names":["withRouter","Link","fetch","books","posts","router","query","name","id","firstName","map","book","_id","title","getInitialProps","res","data","json"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,aAA3B;AACA,OAAOC,IAAP,MAAiB,WAAjB,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAGA,MAAMC,KAAK,GAAGJ,UAAU,CAAC,CAAC;AAAEK,EAAAA,MAAM,EAAG;AAAEC,IAAAA,KAAK,EAAC;AAACC,MAAAA,IAAD;AAAOC,MAAAA,EAAP;AAAWC,MAAAA;AAAX;AAAR;AAAX,CAAD,KACrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBF,IAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAiBE,SAAjB,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAgBD,EAAhB,CAHJ,EAKKL,KAAK,CAACO,GAAN,CAAUC,IAAI,IAAI;AACf,SACI;AAAK,IAAA,GAAG,EAAEA,IAAI,CAACC,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,IAAI,CAACE,KADV,CADJ;AAKH,CANA,CALL,CADoB,CAAxB;;AAmBAT,KAAK,CAACU,eAAN,GAAwB,YAAW;AAC/B,QAAMC,GAAG,GAAG,MAAMb,KAAK,CAAC,iCAAD,CAAvB;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAW,MAAMD,GAAG,CAACE,IAAJ,EAAvB;AAEA,SAAM;AAAEd,IAAAA,KAAK,EAAEa;AAAT,GAAN;AACH,CALD;;AASA,eAAeZ,KAAf","sourcesContent":["import { withRouter } from \"next/router\";\r\nimport Link from 'next/link';\r\n\r\n//Getting book data from database\r\nimport fetch from 'isomorphic-unfetch';\r\nimport books from \"./api/books\";\r\n\r\n\r\nconst posts = withRouter(({ router:  { query:{name, id, firstName}}} ) => (\r\n    <div>\r\n        <p>Hello there, {name}</p>\r\n        <p>Hello there, {firstName}</p>\r\n        <p>Your ID is: {id}</p>\r\n\r\n        {books.map(book => {\r\n            return (\r\n                <div key={book._id}>\r\n                    {book.title}\r\n                    </div>\r\n            )\r\n        })}\r\n\r\n\r\n        \r\n    </div>\r\n));\r\n\r\nposts.getInitialProps = async () =>{\r\n    const res = await fetch('http://localhost:3000/api/books');\r\n    const { data } = await res.json();\r\n\r\n    return{ books: data }\r\n}\r\n  \r\n\r\n    \r\nexport default posts;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}