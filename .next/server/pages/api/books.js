module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = require('../../ssr-module-cache.js');
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		var threw = true;
/******/ 		try {
/******/ 			modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 			threw = false;
/******/ 		} finally {
/******/ 			if(threw) delete installedModules[moduleId];
/******/ 		}
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./pages/api/books/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./modals/book.js":
/*!************************!*\
  !*** ./modals/book.js ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const mongoose = __webpack_require__(/*! mongoose */ \"mongoose\");\n\nconst BookSchema = new mongoose.Schema({\n  title: {\n    type: String,\n    required: [true, 'Please add a title'],\n    trim: true,\n    maxlength: [120, 'Title cannot be more than 40 characters']\n  },\n  author: {\n    type: String,\n    required: true,\n    maxlength: [120, 'author cannot be more than 40 characters']\n  },\n  ownerID: {\n    type: Number\n  },\n  ownerName: {\n    type: String\n  },\n  imageFront: {\n    data: String,\n    contentType: String\n  }\n});\nmodule.exports = mongoose.models.Book || mongoose.model('Book', BookSchema);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9tb2RhbHMvYm9vay5qcz9mZDc5Il0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicmVxdWlyZSIsIkJvb2tTY2hlbWEiLCJTY2hlbWEiLCJ0aXRsZSIsInR5cGUiLCJTdHJpbmciLCJyZXF1aXJlZCIsInRyaW0iLCJtYXhsZW5ndGgiLCJhdXRob3IiLCJvd25lcklEIiwiTnVtYmVyIiwib3duZXJOYW1lIiwiaW1hZ2VGcm9udCIsImRhdGEiLCJjb250ZW50VHlwZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJtb2RlbHMiLCJCb29rIiwibW9kZWwiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFFBQVEsR0FBR0MsbUJBQU8sQ0FBQywwQkFBRCxDQUF4Qjs7QUFFQSxNQUFNQyxVQUFVLEdBQUcsSUFBSUYsUUFBUSxDQUFDRyxNQUFiLENBQW9CO0FBQ25DQyxPQUFLLEVBQUU7QUFDSEMsUUFBSSxFQUFFQyxNQURIO0FBRUhDLFlBQVEsRUFBRSxDQUFDLElBQUQsRUFBTyxvQkFBUCxDQUZQO0FBR0hDLFFBQUksRUFBRSxJQUhIO0FBSUhDLGFBQVMsRUFBRSxDQUFDLEdBQUQsRUFBTSx5Q0FBTjtBQUpSLEdBRDRCO0FBT25DQyxRQUFNLEVBQUM7QUFDSEwsUUFBSSxFQUFFQyxNQURIO0FBRUhDLFlBQVEsRUFBRSxJQUZQO0FBR0hFLGFBQVMsRUFBRSxDQUFDLEdBQUQsRUFBTSwwQ0FBTjtBQUhSLEdBUDRCO0FBYW5DRSxTQUFPLEVBQUM7QUFDSk4sUUFBSSxFQUFFTztBQURGLEdBYjJCO0FBZ0JuQ0MsV0FBUyxFQUFDO0FBQ05SLFFBQUksRUFBRUM7QUFEQSxHQWhCeUI7QUFtQm5DUSxZQUFVLEVBQ1Y7QUFDSUMsUUFBSSxFQUFFVCxNQURWO0FBRUlVLGVBQVcsRUFBRVY7QUFGakI7QUFwQm1DLENBQXBCLENBQW5CO0FBMkJBVyxNQUFNLENBQUNDLE9BQVAsR0FBaUJsQixRQUFRLENBQUNtQixNQUFULENBQWdCQyxJQUFoQixJQUF3QnBCLFFBQVEsQ0FBQ3FCLEtBQVQsQ0FBZSxNQUFmLEVBQ3pDbkIsVUFEeUMsQ0FBekMiLCJmaWxlIjoiLi9tb2RhbHMvYm9vay5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IG1vbmdvb3NlID0gcmVxdWlyZSgnbW9uZ29vc2UnKTtcblxuY29uc3QgQm9va1NjaGVtYSA9IG5ldyBtb25nb29zZS5TY2hlbWEoe1xuICAgIHRpdGxlOiB7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICAgICAgcmVxdWlyZWQ6IFt0cnVlLCAnUGxlYXNlIGFkZCBhIHRpdGxlJ10sXG4gICAgICAgIHRyaW06IHRydWUsXG4gICAgICAgIG1heGxlbmd0aDogWzEyMCwgJ1RpdGxlIGNhbm5vdCBiZSBtb3JlIHRoYW4gNDAgY2hhcmFjdGVycyddXG4gICAgfSxcbiAgICBhdXRob3I6e1xuICAgICAgICB0eXBlOiBTdHJpbmcsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICBtYXhsZW5ndGg6IFsxMjAsICdhdXRob3IgY2Fubm90IGJlIG1vcmUgdGhhbiA0MCBjaGFyYWN0ZXJzJ11cbiAgICB9LFxuXG4gICAgb3duZXJJRDp7XG4gICAgICAgIHR5cGU6IE51bWJlcixcbiAgICB9LFxuICAgIG93bmVyTmFtZTp7XG4gICAgICAgIHR5cGU6IFN0cmluZyxcbiAgICB9LFxuICAgIGltYWdlRnJvbnQ6IFxuICAgIHsgXG4gICAgICAgIGRhdGE6IFN0cmluZywgXG4gICAgICAgIGNvbnRlbnRUeXBlOiBTdHJpbmcgXG4gICAgfVxuXG59KVxuXG5tb2R1bGUuZXhwb3J0cyA9IG1vbmdvb3NlLm1vZGVscy5Cb29rIHx8IG1vbmdvb3NlLm1vZGVsKCdCb29rJyxcbkJvb2tTY2hlbWEpOyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./modals/book.js\n");

/***/ }),

/***/ "./pages/api/books/index.js":
/*!**********************************!*\
  !*** ./pages/api/books/index.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _utils_dbConnect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../utils/dbConnect */ \"./utils/dbConnect.js\");\n/* harmony import */ var _modals_book__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../modals/book */ \"./modals/book.js\");\n/* harmony import */ var _modals_book__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_modals_book__WEBPACK_IMPORTED_MODULE_1__);\n\n\nObject(_utils_dbConnect__WEBPACK_IMPORTED_MODULE_0__[\"default\"])();\nconsole.log('inside the main book ');\n/* harmony default export */ __webpack_exports__[\"default\"] = (async (req, res) => {\n  const {\n    method\n  } = req;\n  console.log('method is ' + method);\n  var myTitle = req.headers.title;\n  var myAuthor = req.headers.author;\n\n  if (req.body.id) {\n    console.log('id present.');\n    const myID = req.body.id;\n    myTitle = req.body.title;\n    myAuthor = req.body.author; //const ownerID = req.body.ownerID;\n\n    console.log(req.body);\n  }\n\n  console.log('title is ' + myTitle);\n  console.log('author is ' + myAuthor); //console.log(req.body.imageFront.data[0]);\n  // In case we have only the author as input, we will looking\n  // for all books with that author\n\n  if (myTitle == '' && myAuthor != '') {\n    console.log('No title');\n\n    switch (method) {\n      case 'GET':\n        try {\n          const books = await _modals_book__WEBPACK_IMPORTED_MODULE_1___default.a.find({\n            //Sort here\n            //'title': myTitle\n            'author': myAuthor\n          });\n          res.status(200).json({\n            success: true,\n            data: books\n          });\n        } catch (error) {\n          res.status(400).json({\n            success: false\n          });\n          console.log('Author not found');\n        }\n\n        break;\n\n      case 'POST':\n        try {\n          const book = await _modals_book__WEBPACK_IMPORTED_MODULE_1___default.a.create(req.body);\n          console.log('post');\n          console.log(req.body);\n          res.status(201).json({\n            success: true,\n            data: book\n          });\n        } catch (error) {\n          res.status(400).json({\n            success: false\n          });\n          console.log(\"couldn't post 1\");\n        }\n\n        break;\n\n      default:\n        res.status(400).json({\n          success: false\n        });\n        break;\n    }\n  } //In case only the title is given as input,\n  // Look for all books with that title\n  else if (myAuthor == '' && myTitle != '') {\n      console.log('No author');\n\n      switch (method) {\n        case 'GET':\n          try {\n            const books = await _modals_book__WEBPACK_IMPORTED_MODULE_1___default.a.find({\n              //Sort here\n              'title': myTitle //'author': 'Robert Kiyosaki'\n\n            });\n            res.status(200).json({\n              success: true,\n              data: books\n            });\n          } catch (error) {\n            res.status(400).json({\n              success: false\n            });\n            console.log('Title not found');\n          }\n\n          break;\n\n        case 'POST':\n          try {\n            const book = await _modals_book__WEBPACK_IMPORTED_MODULE_1___default.a.create(req.body);\n            console.log('post');\n            console.log(req.body);\n            res.status(201).json({\n              success: true,\n              data: book\n            });\n          } catch (error) {\n            res.status(400).json({\n              success: false\n            });\n            console.log(\"couldn't post 2\");\n          }\n\n          break;\n\n        default:\n          res.status(400).json({\n            success: false\n          });\n          break;\n      }\n    } // User input both the title and the author\n    // Return book matching both\n    else if (myTitle != '' && myAuthor != '') {\n        console.log('my title is: ' + myTitle);\n        console.log('my author is: ' + myAuthor);\n\n        switch (method) {\n          case 'GET':\n            try {\n              const books = await _modals_book__WEBPACK_IMPORTED_MODULE_1___default.a.find({\n                //Sort here\n                'title': myTitle,\n                'author': myAuthor\n              });\n              console.log('books are ready');\n              res.status(200).json({\n                success: true,\n                data: books\n              });\n            } catch (error) {\n              res.status(400).json({\n                success: false\n              });\n            }\n\n            break;\n\n          case 'POST':\n            try {\n              const book = await _modals_book__WEBPACK_IMPORTED_MODULE_1___default.a.create(req.body); //var str = req.body.imageFront;\n              //var str = req.body.imageFront.data;\n              //console.log(str)\n\n              res.status(201).json({\n                success: true,\n                data: book\n              });\n            } catch (error) {\n              res.status(400).json({\n                success: false\n              });\n              console.log(\"couldn't post 3\");\n              console.log('Failed: ' + myTitle + ' ' + myAuthor);\n            }\n\n            break;\n\n          case 'PUT':\n            try {\n              const book = await _modals_book__WEBPACK_IMPORTED_MODULE_1___default.a.findByIdAndUpdate(id, req.body, {\n                new: true,\n                runValidators: true\n              });\n\n              if (!book) {\n                return res.status(400).json({\n                  success: '!book'\n                });\n              }\n\n              res.status(200).json({\n                success: true,\n                data: book\n              });\n            } catch (error) {\n              res.status(400).json({\n                success: false\n              });\n            }\n\n            break;\n\n          default:\n            res.status(400).json({\n              success: false\n            });\n            break;\n        }\n      } // There is no given title and author\n      // We return all books available\n      else if (myTitle == '' && myAuthor == '') {\n          console.log('in number 4');\n\n          switch (method) {\n            case 'GET':\n              if (req.headers.id) {\n                try {\n                  console.log('awaiting book now:');\n                  const books = await _modals_book__WEBPACK_IMPORTED_MODULE_1___default.a.find({\n                    ownerID: req.headers.id\n                  });\n                  console.log('Got books');\n                  res.status(200).json({\n                    success: true,\n                    data: books\n                  });\n                } catch (error) {\n                  res.status(400).json({\n                    success: false\n                  });\n                }\n              } else {\n                try {\n                  const books = await _modals_book__WEBPACK_IMPORTED_MODULE_1___default.a.find({});\n                  res.status(200).json({\n                    success: true,\n                    data: books\n                  });\n                } catch (error) {\n                  res.status(400).json({\n                    success: false\n                  });\n                }\n              }\n\n              break;\n\n            case 'POST':\n              try {\n                const book = await _modals_book__WEBPACK_IMPORTED_MODULE_1___default.a.create(req.body);\n                console.log('post');\n                console.log(req.body);\n                res.status(201).json({\n                  success: true,\n                  data: book\n                });\n              } catch (error) {\n                res.status(400).json({\n                  success: false\n                });\n                console.log(\"couldn't post 4\");\n              }\n\n              break;\n            //Deleting book post here instead of in [id].js\n\n            case 'DELETE':\n              console.log('Attempting to delete: ' + req.body.id);\n\n              try {\n                const deletedBook = await _modals_book__WEBPACK_IMPORTED_MODULE_1___default.a.deleteOne({\n                  _id: req.body.id\n                });\n\n                if (!deletedBook) {\n                  return res.status(400).json({\n                    success: false\n                  });\n                }\n\n                res.status(200).json({\n                  success: true,\n                  data: {}\n                });\n              } catch (error) {\n                return res.status(400).json({\n                  success: 'some error happenn'\n                });\n              }\n\n            default:\n              res.status(400).json({\n                success: false\n              });\n              break;\n          }\n        }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/api/books/index.js\n");

/***/ }),

/***/ "./utils/dbConnect.js":
/*!****************************!*\
  !*** ./utils/dbConnect.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconsole.log('inside dbConnect');\nconst connection = {}; //mongoose.set('useFindAndModify', false);\n\nconsole.log('Trying to connect to db.');\n\nasync function dbConnect() {\n  console.log('Above if statement.');\n\n  if (connection.isConnected) {\n    console.log('db on from first call');\n    return 1;\n  }\n\n  console.log('awaiting for db connection');\n  const db = await mongoose__WEBPACK_IMPORTED_MODULE_0___default.a.connect(\"mongodb+srv://profiles:MongoPass@cluster0-f8o3q.gcp.mongodb.net/profiles?retryWrites=true&w=majority\", {//useNewUrlParser: true\n    //useUnifiedTopology: true\n  });\n\n  if (db.connections) {\n    console.log('\\nConnection exist');\n  } else {\n    console.log('no connections found');\n  }\n\n  connection.isConnected = db.connections[0].readyState;\n  console.log(connection.isConnected);\n  console.log('db is on.');\n\n  if (connection.isConnected) {\n    console.log('db on from second call');\n    return 1;\n  }\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (dbConnect);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi91dGlscy9kYkNvbm5lY3QuanM/NDZlMiJdLCJuYW1lcyI6WyJjb25zb2xlIiwibG9nIiwiY29ubmVjdGlvbiIsImRiQ29ubmVjdCIsImlzQ29ubmVjdGVkIiwiZGIiLCJtb25nb29zZSIsImNvbm5lY3QiLCJwcm9jZXNzIiwiY29ubmVjdGlvbnMiLCJyZWFkeVN0YXRlIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUVBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxrQkFBWjtBQUVBLE1BQU1DLFVBQVUsR0FBRyxFQUFuQixDLENBQ0E7O0FBR0FGLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLDBCQUFaOztBQUNBLGVBQWVFLFNBQWYsR0FBMEI7QUFFdEJILFNBQU8sQ0FBQ0MsR0FBUixDQUFZLHFCQUFaOztBQUVBLE1BQUlDLFVBQVUsQ0FBQ0UsV0FBZixFQUE0QjtBQUN4QkosV0FBTyxDQUFDQyxHQUFSLENBQVksdUJBQVo7QUFDQSxXQUFPLENBQVA7QUFDSDs7QUFHREQsU0FBTyxDQUFDQyxHQUFSLENBQVksNEJBQVo7QUFFRCxRQUFNSSxFQUFFLEdBQUcsTUFBTUMsK0NBQVEsQ0FBQ0MsT0FBVCxDQUFpQkMsc0dBQWpCLEVBQXdDLENBQ3hEO0FBQ0E7QUFGd0QsR0FBeEMsQ0FBakI7O0FBTUgsTUFBSUgsRUFBRSxDQUFDSSxXQUFQLEVBQW1CO0FBQ2ZULFdBQU8sQ0FBQ0MsR0FBUixDQUFZLG9CQUFaO0FBQ0gsR0FGRCxNQUdJO0FBQ0FELFdBQU8sQ0FBQ0MsR0FBUixDQUFZLHNCQUFaO0FBQ0g7O0FBS0dDLFlBQVUsQ0FBQ0UsV0FBWCxHQUF5QkMsRUFBRSxDQUFDSSxXQUFILENBQWUsQ0FBZixFQUFrQkMsVUFBM0M7QUFDQVYsU0FBTyxDQUFDQyxHQUFSLENBQVlDLFVBQVUsQ0FBQ0UsV0FBdkI7QUFDQUosU0FBTyxDQUFDQyxHQUFSLENBQVksV0FBWjs7QUFDQSxNQUFJQyxVQUFVLENBQUNFLFdBQWYsRUFBNEI7QUFDeEJKLFdBQU8sQ0FBQ0MsR0FBUixDQUFZLHdCQUFaO0FBQ0EsV0FBTyxDQUFQO0FBQ0g7QUFHSjs7QUFFY0Usd0VBQWYiLCJmaWxlIjoiLi91dGlscy9kYkNvbm5lY3QuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9uZ29vc2UgZnJvbSAnbW9uZ29vc2UnO1xuXG5jb25zb2xlLmxvZygnaW5zaWRlIGRiQ29ubmVjdCcpO1xuXG5jb25zdCBjb25uZWN0aW9uID0ge307XG4vL21vbmdvb3NlLnNldCgndXNlRmluZEFuZE1vZGlmeScsIGZhbHNlKTtcblxuXG5jb25zb2xlLmxvZygnVHJ5aW5nIHRvIGNvbm5lY3QgdG8gZGIuJyk7XG5hc3luYyBmdW5jdGlvbiBkYkNvbm5lY3QoKXtcbiAgICBcbiAgICBjb25zb2xlLmxvZygnQWJvdmUgaWYgc3RhdGVtZW50LicpXG4gICAgXG4gICAgaWYgKGNvbm5lY3Rpb24uaXNDb25uZWN0ZWQpIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2RiIG9uIGZyb20gZmlyc3QgY2FsbCcpXG4gICAgICAgIHJldHVybiAxO1xuICAgIH1cbiAgICBcblxuICAgIGNvbnNvbGUubG9nKCdhd2FpdGluZyBmb3IgZGIgY29ubmVjdGlvbicpXG4gICAgXG4gICBjb25zdCBkYiA9IGF3YWl0IG1vbmdvb3NlLmNvbm5lY3QocHJvY2Vzcy5lbnYuTU9OR09fVVJJLCB7XG4gICAgLy91c2VOZXdVcmxQYXJzZXI6IHRydWVcbiAgICAvL3VzZVVuaWZpZWRUb3BvbG9neTogdHJ1ZVxufSlcbiAgIFxuXG5pZiAoZGIuY29ubmVjdGlvbnMpe1xuICAgIGNvbnNvbGUubG9nKCdcXG5Db25uZWN0aW9uIGV4aXN0Jylcbn1cbmVsc2V7XG4gICAgY29uc29sZS5sb2coJ25vIGNvbm5lY3Rpb25zIGZvdW5kJylcbn1cblxuICBcbiAgICBcblxuICAgIGNvbm5lY3Rpb24uaXNDb25uZWN0ZWQgPSBkYi5jb25uZWN0aW9uc1swXS5yZWFkeVN0YXRlO1xuICAgIGNvbnNvbGUubG9nKGNvbm5lY3Rpb24uaXNDb25uZWN0ZWQpO1xuICAgIGNvbnNvbGUubG9nKCdkYiBpcyBvbi4nKVxuICAgIGlmIChjb25uZWN0aW9uLmlzQ29ubmVjdGVkKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdkYiBvbiBmcm9tIHNlY29uZCBjYWxsJylcbiAgICAgICAgcmV0dXJuIDE7XG4gICAgfVxuICAgIFxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IGRiQ29ubmVjdDsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./utils/dbConnect.js\n");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"mongoose\");//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJtb25nb29zZVwiP2ZmZDciXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoibW9uZ29vc2UuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJtb25nb29zZVwiKTsiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///mongoose\n");

/***/ })

/******/ });